# compiler: R8
# compiler_version: 1.6.5-dev
# min_api: 23
# compiler_hash: 2d4f631385785ef065fa09085726cda81b6e0fd6
# pg_map_id: d8b32db
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    20:22:void <init>() -> <init>
    40:40:android.os.IBinder asBinder() -> asBinder
    29:36:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    44:69:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    101:103:void <init>(android.os.IBinder) -> <init>
    106:106:android.os.IBinder asBinder() -> asBinder
    141:150:void cancel(java.lang.String,int,java.lang.String) -> cancel
    158:165:void cancelAll(java.lang.String) -> cancelAll
    110:110:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    117:133:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:17:void <init>() -> <init>
    35:35:android.os.IBinder asBinder() -> asBinder
    24:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    39:60:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    72:74:void <init>(android.os.IBinder) -> <init>
    77:77:android.os.IBinder asBinder() -> asBinder
    81:81:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    85:99:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    83:86:void <init>(android.os.Handler) -> <init>
    138:142:void <init>(android.os.Parcel) -> <init>
    125:125:int describeContents() -> describeContents
    121:121:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    96:111:void send(int,android.os.Bundle) -> send
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:75:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:64:void run() -> run
androidx.activity.Cancellable -> androidx.activity.a:
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> g
    int mContentLayoutId -> h
    androidx.lifecycle.ViewModelStore mViewModelStore -> f
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> d
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> e
    84:88:void <init>() -> <init>
    50:50:void access$001(androidx.activity.ComponentActivity) -> a
    241:241:androidx.lifecycle.Lifecycle getLifecycle() -> a
    297:297:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> b
    303:303:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> c
    257:258:androidx.lifecycle.ViewModelStore getViewModelStore() -> d
    208:208:java.lang.Object onRetainCustomNonConfigurationInstance() -> f
    286:287:void onBackPressed() -> onBackPressed
    149:155:void onCreate(android.os.Bundle) -> onCreate
    176:196:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    160:166:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$a:
    androidx.activity.ComponentActivity this$0 -> d
    69:69:void <init>(androidx.activity.ComponentActivity) -> <init>
    72:73:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    androidx.activity.ComponentActivity this$0 -> a
    94:94:void <init>(androidx.activity.ComponentActivity) -> <init>
    98:105:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    androidx.activity.ComponentActivity this$0 -> a
    108:108:void <init>(androidx.activity.ComponentActivity) -> <init>
    112:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$b:
    androidx.lifecycle.ViewModelStore viewModelStore -> a
    56:56:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    java.lang.reflect.Field sServedViewField -> d
    java.lang.reflect.Field sNextServedViewField -> e
    java.lang.reflect.Field sHField -> c
    int sReflectedFieldsInitialized -> b
    android.app.Activity mActivity -> a
    38:38:void <clinit>() -> <clinit>
    45:47:void <init>(android.app.Activity) -> <init>
    51:96:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    101:112:void initializeReflectiveFields() -> a
androidx.activity.OnBackPressedCallback -> androidx.activity.b:
    boolean mEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList mCancellables -> b
    54:56:void <init>(boolean) -> <init>
    void handleOnBackPressed() -> a
    71:72:void setEnabled(boolean) -> a
    103:104:void addCancellable(androidx.activity.Cancellable) -> a
    82:82:boolean isEnabled() -> b
    107:108:void removeCancellable(androidx.activity.Cancellable) -> b
    91:94:void remove() -> c
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    java.lang.Runnable mFallbackOnBackPressed -> a
    java.util.ArrayDeque mOnBackPressedCallbacks -> b
    75:77:void <init>(java.lang.Runnable) -> <init>
    112:115:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> a
    145:152:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> a
    184:196:void onBackPressed() -> a
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    androidx.activity.Cancellable mCurrentCancellable -> c
    220:224:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    229:239:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    243:249:void cancel() -> cancel
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$a:
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> a
    androidx.activity.OnBackPressedDispatcher this$0 -> b
    200:202:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    206:208:void cancel() -> cancel
androidx.activity.OnBackPressedDispatcherOwner -> androidx.activity.c:
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> b
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.a:
    92:92:void <init>() -> <init>
    void setTitle(java.lang.CharSequence) -> a
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> a
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> a
    1092:1092:boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    1057:1057:void dispatchMenuVisibilityChanged(boolean) -> b
    1104:1104:void setWindowTitle(java.lang.CharSequence) -> b
    1042:1042:void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    void setDisplayHomeAsUpEnabled(boolean) -> d
    1047:1047:void setShowHideAnimationEnabled(boolean) -> e
    1074:1074:boolean closeOptionsMenu() -> e
    1098:1098:boolean collapseActionView() -> f
    int getDisplayOptions() -> g
    859:859:android.content.Context getThemedContext() -> h
    1080:1080:boolean invalidateOptionsMenu() -> i
    1121:1121:void onDestroy() -> j
    1068:1068:boolean openOptionsMenu() -> k
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.a$a:
    int gravity -> a
    1377:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1387:void <init>(int,int) -> <init>
    1399:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1405:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener -> androidx.appcompat.app.a$b:
    void onMenuVisibilityChanged(boolean) -> a
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.a$c:
    1171:1171:void <init>() -> <init>
    java.lang.CharSequence getContentDescription() -> a
    android.view.View getCustomView() -> b
    android.graphics.drawable.Drawable getIcon() -> c
    int getPosition() -> d
    java.lang.CharSequence getText() -> e
    void select() -> f
androidx.appcompat.app.ActionBar$TabListener -> androidx.appcompat.app.a$d:
    void onTabReselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction) -> a
    void onTabSelected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction) -> b
    void onTabUnselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction) -> c
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider -> androidx.appcompat.app.b:
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    android.content.Context mContext -> a
    int mListItemLayout -> O
    int mViewSpacingRight -> l
    android.widget.Button mButtonNeutral -> w
    int mMultiChoiceItemLayout -> M
    boolean mShowTitle -> P
    int mViewSpacingLeft -> j
    int mButtonPanelSideLayout -> K
    android.os.Handler mHandler -> R
    int mCheckedItem -> I
    int mButtonIconDimen -> d
    java.lang.CharSequence mMessage -> f
    android.widget.Button mButtonPositive -> o
    android.widget.ImageView mIconView -> D
    android.widget.ListAdapter mAdapter -> H
    android.widget.Button mButtonNegative -> s
    android.graphics.drawable.Drawable mButtonNegativeIcon -> v
    android.widget.TextView mTitleView -> E
    android.graphics.drawable.Drawable mButtonNeutralIcon -> z
    android.view.View$OnClickListener mButtonHandler -> S
    android.graphics.drawable.Drawable mButtonPositiveIcon -> r
    android.graphics.drawable.Drawable mIcon -> C
    int mSingleChoiceItemLayout -> N
    boolean mViewSpacingSpecified -> n
    int mListLayout -> L
    int mViewSpacingBottom -> m
    android.os.Message mButtonPositiveMessage -> q
    androidx.core.widget.NestedScrollView mScrollView -> A
    int mAlertDialogLayout -> J
    int mViewSpacingTop -> k
    int mViewLayoutResId -> i
    java.lang.CharSequence mTitle -> e
    android.os.Message mButtonNeutralMessage -> y
    int mIconId -> B
    android.os.Message mButtonNegativeMessage -> u
    android.view.Window mWindow -> c
    android.view.View mView -> h
    android.widget.ListView mListView -> g
    java.lang.CharSequence mButtonPositiveText -> p
    java.lang.CharSequence mButtonNegativeText -> t
    androidx.appcompat.app.AppCompatDialog mDialog -> b
    android.widget.TextView mMessageView -> F
    java.lang.CharSequence mButtonNeutralText -> x
    android.view.View mCustomTitleView -> G
    int mButtonPanelLayoutHint -> Q
    182:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> a
    257:258:void setCustomTitle(android.view.View) -> a
    261:265:void setMessage(java.lang.CharSequence) -> a
    290:297:void setView(android.view.View,int,int,int,int) -> a
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> a
    378:389:void setIcon(android.graphics.drawable.Drawable) -> a
    398:400:int getIconAttributeResId(int) -> a
    404:404:android.widget.ListView getListView() -> a
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> a
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> a
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> a
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> a
    759:826:void setupButtons(android.view.ViewGroup) -> a
    829:833:void centerButton(android.widget.Button) -> a
    231:234:void installContent() -> b
    247:251:void setTitle(java.lang.CharSequence) -> b
    280:283:void setView(android.view.View) -> b
    359:370:void setIcon(int) -> b
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> b
    719:745:void setupContent(android.view.ViewGroup) -> b
    209:227:boolean canTextInput(android.view.View) -> c
    237:243:int selectContentView() -> c
    271:274:void setView(int) -> c
    640:670:void setupCustomContent(android.view.ViewGroup) -> c
    467:555:void setupView() -> d
    673:716:void setupTitle(android.view.ViewGroup) -> d
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$a:
    androidx.appcompat.app.AlertController this$0 -> d
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$b:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> a
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$c:
    android.view.View val$bottom -> e
    android.view.View val$top -> d
    androidx.appcompat.app.AlertController this$0 -> f
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$d:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$e:
    android.view.View val$bottom -> e
    android.view.View val$top -> d
    androidx.appcompat.app.AlertController this$0 -> f
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$f:
    android.content.Context mContext -> a
    android.view.View mView -> z
    android.view.LayoutInflater mInflater -> b
    java.lang.String mIsCheckedColumn -> M
    int mCheckedItem -> I
    android.content.DialogInterface$OnClickListener mOnClickListener -> x
    java.lang.CharSequence mTitle -> f
    android.database.Cursor mCursor -> K
    androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> O
    java.lang.CharSequence mMessage -> h
    int mViewSpacingRight -> C
    int mViewSpacingLeft -> A
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> q
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> u
    java.lang.CharSequence mNeutralButtonText -> o
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> J
    int mViewLayoutResId -> y
    boolean mViewSpacingSpecified -> E
    boolean mIsMultiChoice -> G
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> k
    android.widget.ListAdapter mAdapter -> w
    android.graphics.drawable.Drawable mNeutralButtonIcon -> p
    android.view.View mCustomTitleView -> g
    android.graphics.drawable.Drawable mIcon -> d
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> t
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> s
    java.lang.CharSequence[] mItems -> v
    android.graphics.drawable.Drawable mPositiveButtonIcon -> j
    java.lang.String mLabelColumn -> L
    int mViewSpacingBottom -> D
    int mIconAttrId -> e
    int mViewSpacingTop -> B
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> N
    int mIconId -> c
    java.lang.CharSequence mPositiveButtonText -> i
    boolean mCancelable -> r
    java.lang.CharSequence mNegativeButtonText -> l
    boolean[] mCheckedItems -> F
    android.graphics.drawable.Drawable mNegativeButtonIcon -> m
    boolean mIsSingleChoice -> H
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> n
    924:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> a
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> b
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$f$a:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> e
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> d
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$f$b:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> h
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> f
    int mLabelIndex -> d
    int mIsCheckedIndex -> e
    androidx.appcompat.app.AlertController val$dialog -> g
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$f$c:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> e
    androidx.appcompat.app.AlertController val$dialog -> d
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$f$d:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> f
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> d
    androidx.appcompat.app.AlertController val$dialog -> e
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener -> androidx.appcompat.app.AlertController$f$e:
    void onPrepareListView(android.widget.ListView) -> a
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$g:
    java.lang.ref.WeakReference mDialog -> a
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$h:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    int mPaddingTopNoTitle -> d
    int mPaddingBottomNoButtons -> e
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> a
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    androidx.appcompat.app.AlertController mAlert -> f
    98:100:void <init>(android.content.Context,int) -> <init>
    111:116:int resolveDialogTheme(android.content.Context,int) -> a
    140:140:android.widget.ListView getListView() -> b
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$a:
    androidx.appcompat.app.AlertController$AlertParams P -> a
    int mTheme -> b
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> a
    418:419:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> a
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> a
    522:524:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> a
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    730:734:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> a
    831:835:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> a
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> a
    983:994:androidx.appcompat.app.AlertDialog create() -> a
    358:358:android.content.Context getContext() -> b
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> b
    486:488:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> b
    902:905:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> b
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    androidx.appcompat.app.AppCompatDelegate mDelegate -> r
    android.content.res.Resources mResources -> s
    77:78:void <init>() -> <init>
    150:151:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> a
    280:280:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> a
    305:305:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    371:372:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> a
    487:488:void supportNavigateUpTo(android.content.Intent) -> a
    575:587:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> a
    176:177:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    97:99:void attachBaseContext(android.content.Context) -> attachBaseContext
    291:291:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> b
    390:390:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> b
    471:471:boolean supportShouldUpRecreateTask(android.content.Intent) -> b
    623:623:void onNightModeChanged(int) -> b
    609:614:void closeOptionsMenu() -> closeOptionsMenu
    552:558:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    454:454:android.content.Intent getSupportParentActivityIntent() -> e
    214:214:android.view.View findViewById(int) -> findViewById
    156:156:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    563:566:android.content.res.Resources getResources() -> getResources
    263:264:void supportInvalidateOptionsMenu() -> i
    268:269:void invalidateOptionsMenu() -> invalidateOptionsMenu
    542:545:androidx.appcompat.app.AppCompatDelegate getDelegate() -> j
    130:130:androidx.appcompat.app.ActionBar getSupportActionBar() -> k
    501:501:void onSupportContentChanged() -> l
    416:439:boolean onSupportNavigateUp() -> m
    181:191:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:494:void onContentChanged() -> onContentChanged
    103:107:void onCreate(android.os.Bundle) -> onCreate
    233:235:void onDestroy() -> onDestroy
    592:595:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    219:228:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    517:517:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    528:529:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    117:119:void onPostCreate(android.os.Bundle) -> onPostCreate
    195:197:void onPostResume() -> onPostResume
    533:535:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    201:203:void onStart() -> onStart
    207:209:void onStop() -> onStop
    239:241:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    600:605:void openOptionsMenu() -> openOptionsMenu
    161:162:void setContentView(int) -> setContentView
    166:167:void setContentView(android.view.View) -> setContentView
    171:172:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    111:113:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatCallback -> androidx.appcompat.app.c:
    void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> a
    androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> b
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.d:
    java.lang.Object sActiveDelegatesLock -> f
    int sDefaultNightMode -> d
    androidx.collection.ArraySet sActiveDelegates -> e
    163:167:void <clinit>() -> <clinit>
    262:262:void <init>() -> <init>
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    android.view.View findViewById(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onCreate(android.os.Bundle) -> a
    void setContentView(android.view.View) -> a
    void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> a
    void setTitle(java.lang.CharSequence) -> a
    221:221:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> a
    232:232:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> a
    377:377:void attachBaseContext(android.content.Context) -> a
    526:526:int getLocalNightMode() -> a
    622:628:void markStarted(androidx.appcompat.app.AppCompatDelegate) -> a
    android.view.MenuInflater getMenuInflater() -> b
    void onPostCreate(android.os.Bundle) -> b
    boolean requestWindowFeature(int) -> b
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    632:635:void markStopped(androidx.appcompat.app.AppCompatDelegate) -> b
    androidx.appcompat.app.ActionBar getSupportActionBar() -> c
    void onSaveInstanceState(android.os.Bundle) -> c
    void setContentView(int) -> c
    639:649:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> c
    void installViewFactory() -> d
    339:339:void setTheme(int) -> d
    void invalidateOptionsMenu() -> e
    void onDestroy() -> f
    void onPostResume() -> g
    void onStart() -> h
    void onStop() -> i
    571:571:int getDefaultNightMode() -> j
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    boolean IS_PRE_LOLLIPOP -> d0
    androidx.appcompat.widget.ActionBarContextView mActionModeView -> s
    java.util.Map sLocalNightModes -> c0
    boolean sInstalledExceptionHandler -> f0
    androidx.appcompat.app.ActionBar mActionBar -> l
    android.view.MenuInflater mMenuInflater -> m
    boolean mLongPressBackDown -> L
    android.view.ViewGroup mSubDecor -> y
    android.widget.TextView mTitleView -> z
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager -> U
    androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback -> j
    androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback -> p
    boolean mIsFloating -> G
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim -> v
    boolean mFeatureIndeterminateProgress -> C
    int mLocalNightMode -> P
    androidx.appcompat.widget.DecorContentParent mDecorContentParent -> o
    boolean mBaseContextAttached -> M
    boolean mClosingActionMenu -> I
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager -> T
    boolean mEnableDefaultActionBarUp -> Y
    android.view.View mStatusGuard -> A
    boolean mWindowNoTitle -> H
    boolean mHasActionBar -> D
    int mThemeResId -> Q
    boolean mCreated -> N
    androidx.appcompat.app.AppCompatCallback mAppCompatCallback -> k
    boolean mInvalidatePanelMenuPosted -> V
    boolean mHandleNativeActionModes -> w
    boolean mActivityHandlesUiMode -> R
    boolean mOverlayActionBar -> E
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel -> K
    androidx.appcompat.view.ActionMode mActionMode -> r
    java.lang.Runnable mShowActionModePopup -> u
    boolean mIsDestroyed -> O
    java.lang.Object mHost -> g
    android.widget.PopupWindow mActionModePopup -> t
    java.lang.Runnable mInvalidatePanelMenuRunnable -> X
    android.graphics.Rect mTempRect1 -> Z
    android.content.Context mContext -> h
    boolean mSubDecorInstalled -> x
    androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater -> b0
    boolean mActivityHandlesUiModeChecked -> S
    java.lang.CharSequence mTitle -> n
    android.graphics.Rect mTempRect2 -> a0
    android.view.Window mWindow -> i
    boolean mOverlayActionMode -> F
    int mInvalidatePanelMenuFeatures -> W
    int[] sWindowBackgroundStyleable -> e0
    boolean mFeatureProgress -> B
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels -> J
    androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> q
    128:173:void <clinit>() -> <clinit>
    265:266:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    269:270:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    281:316:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    604:608:void ensureWindow() -> A
    2359:2362:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager() -> B
    383:386:void initWindowDecorActionBar() -> C
    2366:2388:boolean isActivityManifestHandlingUiMode() -> D
    2090:2091:void throwFeatureRequestIfSubDecorInstalled() -> E
    1452:1463:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> F
    321:323:void attachBaseContext(android.content.Context) -> a
    329:358:void onCreate(android.os.Bundle) -> a
    401:408:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> a
    466:467:android.view.View findViewById(int) -> a
    474:489:void onConfigurationChanged(android.content.res.Configuration) -> a
    526:531:void setContentView(android.view.View) -> a
    553:557:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    613:614:void attachToWindow(android.view.Window) -> a
    852:852:void onSubDecorInstalled(android.view.ViewGroup) -> a
    961:970:void setTitle(java.lang.CharSequence) -> a
    1008:1015:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    1020:1021:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    1025:1026:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    1289:1307:boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    1338:1351:boolean onKeyDown(int,android.view.KeyEvent) -> a
    1357:1389:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    1397:1415:boolean shouldInheritContext(android.view.ViewParent) -> a
    1468:1469:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> a
    1570:1611:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    1657:1674:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> a
    1800:1829:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> a
    1897:1921:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> a
    1924:1932:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> a
    1937:1949:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> a
    1954:1974:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> a
    2145:2167:boolean applyDayNight(boolean) -> a
    2180:2180:int getLocalNightMode() -> a
    363:364:void onPostCreate(android.os.Bundle) -> b
    454:459:android.view.MenuInflater getMenuInflater() -> b
    544:549:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    893:927:boolean requestWindowFeature(int) -> b
    1060:1208:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> b
    1252:1283:boolean onKeyShortcut(int,android.view.KeyEvent) -> b
    1563:1566:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> b
    1678:1778:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> b
    1782:1793:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> b
    2227:2312:boolean updateForNightMode(int,boolean) -> b
    370:371:androidx.appcompat.app.ActionBar getSupportActionBar() -> c
    535:540:void setContentView(int) -> c
    561:565:void onSaveInstanceState(android.os.Bundle) -> c
    1311:1334:boolean onKeyUp(int,android.view.KeyEvent) -> c
    1614:1653:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> c
    598:599:void setTheme(int) -> d
    1423:1432:void installViewFactory() -> d
    1832:1839:boolean onKeyDownPanel(int,android.view.KeyEvent) -> d
    1053:1057:void invalidateOptionsMenu() -> e
    1796:1797:void closePanel(int) -> e
    1843:1892:boolean onKeyUpPanel(int,android.view.KeyEvent) -> e
    570:584:void onDestroy() -> f
    1987:2011:void doInvalidatePanelMenu(int) -> f
    518:522:void onPostResume() -> g
    2185:2205:int mapNightMode(int) -> g
    495:498:void onStart() -> h
    998:1004:void onMenuOpened(int) -> h
    502:514:void onStop() -> i
    982:995:void onPanelClosed(int) -> i
    2020:2086:int updateStatusGuard(int) -> j
    1978:1984:void invalidatePanelMenu(int) -> k
    2141:2141:boolean applyDayNight() -> k
    2097:2107:int sanitizeWindowFeatureId(int) -> l
    2115:2137:void dismissPopups() -> l
    1228:1231:void endOnGoingFadeAnimation() -> m
    2318:2343:void updateResourcesConfigurationForNightMode(int) -> m
    437:448:android.content.Context getActionBarThemedContext() -> n
    2351:2355:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> o
    1439:1439:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1447:1447:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    974:978:java.lang.CharSequence getTitle() -> p
    379:379:android.view.Window$Callback getWindowCallback() -> q
    1224:1224:boolean isHandleNativeActionModesEnabled() -> r
    1235:1247:boolean onBackPressed() -> s
    375:375:androidx.appcompat.app.ActionBar peekSupportActionBar() -> t
    1214:1214:boolean shouldAnimateActionModeView() -> u
    855:889:void applyFixedSizeWindow() -> v
    2214:2214:int calculateNightMode() -> w
    588:594:void cleanupAutoManagers() -> x
    674:678:android.view.ViewGroup createSubDecor() -> y
    640:671:void ensureSubDecor() -> z
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$a:
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> a
    146:146:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    162:167:boolean shouldWrapException(java.lang.Throwable) -> a
    149:159:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$b:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    243:243:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    246:254:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$c:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    762:762:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    766:778:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$d:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    784:784:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    787:788:void onFitSystemWindows(android.graphics.Rect) -> a
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$e:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    839:839:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    841:841:void onAttachedFromWindow() -> a
    845:846:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$f:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    1115:1115:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1118:1143:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$f$a:
    androidx.appcompat.app.AppCompatDelegateImpl$6 this$1 -> a
    1126:1126:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1134:1137:void onAnimationEnd(android.view.View) -> a
    1129:1130:void onAnimationStart(android.view.View) -> b
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$g:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    1169:1169:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1182:1185:void onAnimationEnd(android.view.View) -> a
    1172:1178:void onAnimationStart(android.view.View) -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$h:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    2482:2483:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2487:2491:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    2496:2497:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$i:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    androidx.appcompat.view.ActionMode$Callback mWrapped -> a
    2397:2399:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2408:2408:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    2413:2413:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    2418:2445:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    2403:2403:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$i$a:
    androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1 -> a
    2426:2426:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2429:2438:void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$j:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> e
    2768:2770:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2862:2873:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> a
    2774:2774:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2780:2780:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2798:2798:void onContentChanged() -> onContentChanged
    2786:2791:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2829:2831:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2836:2838:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2802:2824:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2895:2904:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2843:2852:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2880:2888:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$k:
    android.os.PowerManager mPowerManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    2991:2993:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3011:3016:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    2998:3001:int getApplyableNightMode() -> c
    3006:3007:void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$l:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    android.content.BroadcastReceiver mReceiver -> a
    2912:2912:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2944:2953:void cleanup() -> a
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    int getApplyableNightMode() -> c
    void onChange() -> d
    2921:2926:void setup() -> e
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$l$a:
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1 -> a
    2930:2930:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2933:2934:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$m:
    androidx.appcompat.app.TwilightManager mTwilightManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    2963:2965:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    2980:2984:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    2970:2970:int getApplyableNightMode() -> c
    2975:2976:void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$n:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> l
    2732:2734:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2762:2762:boolean isOutOfBounds(int,int) -> a
    2738:2738:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2744:2753:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2758:2759:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    boolean isPrepared -> m
    boolean isHandled -> n
    androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter -> k
    boolean isOpen -> o
    boolean qwertyMode -> p
    int windowAnimations -> f
    int x -> d
    int y -> e
    int background -> b
    boolean refreshDecorView -> q
    int gravity -> c
    boolean refreshMenuContent -> r
    int featureId -> a
    android.view.View createdPanelView -> i
    android.view.View shownPanelView -> h
    android.os.Bundle frozenActionViewState -> s
    android.content.Context listPresenterContext -> l
    android.view.ViewGroup decorView -> g
    androidx.appcompat.view.menu.MenuBuilder menu -> j
    2565:2569:void <init>(int) -> <init>
    2572:2575:boolean hasPanelItems() -> a
    2589:2618:void setStyle(android.content.Context) -> a
    2621:2630:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    2633:2644:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    boolean isOpen -> e
    android.os.Bundle menuState -> f
    int featureId -> d
    2712:2712:void <clinit>() -> <clinit>
    2682:2683:void <init>() -> <init>
    2701:2709:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    2687:2687:int describeContents() -> describeContents
    2692:2698:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$a:
    2712:2712:void <init>() -> <init>
    2712:2712:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2712:2712:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2715:2715:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2720:2720:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2712:2712:java.lang.Object[] newArray(int) -> newArray
    2725:2725:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$o:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    2449:2450:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2454:2467:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    2471:2477:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    androidx.appcompat.app.AppCompatDelegate mDelegate -> d
    androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher -> e
    57:68:void <init>(android.content.Context,int) -> <init>
    153:153:boolean supportRequestWindowFeature(int) -> a
    169:172:androidx.appcompat.app.AppCompatDelegate getDelegate() -> a
    176:182:int getThemeResId(android.content.Context,int) -> a
    187:187:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> a
    196:196:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    201:201:boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    191:191:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> b
    206:207:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    162:163:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$a:
    androidx.appcompat.app.AppCompatDialog this$0 -> d
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.e:
    38:38:void <init>() -> <init>
    50:67:void setupDialog(android.app.Dialog,int) -> a
    43:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> n
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    63:75:void <clinit>() -> <clinit>
    61:78:void <init>() -> <init>
    301:308:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    228:228:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    192:192:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    212:212:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    222:222:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    197:197:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    207:207:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    187:187:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    234:234:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    217:217:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    239:239:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    244:244:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    202:202:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    182:182:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    249:249:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    83:177:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    261:261:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    321:339:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    265:287:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    348:371:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    253:254:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$a:
    java.lang.reflect.Method mResolvedMethod -> f
    android.view.View mHostView -> d
    java.lang.String mMethodName -> e
    android.content.Context mResolvedContext -> g
    385:388:void <init>(android.view.View,java.lang.String) -> <init>
    409:436:void resolveMethod(android.content.Context,java.lang.String) -> a
    392:399:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.f:
    java.lang.reflect.Field sResourcesImplField -> g
    java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField -> e
    boolean sThemedResourceCache_mUnthemedEntriesFieldFetched -> f
    boolean sResourcesImplFieldFetched -> h
    java.lang.reflect.Field sDrawableCacheField -> a
    boolean sDrawableCacheFieldFetched -> b
    java.lang.Class sThemedResourceCacheClazz -> c
    boolean sThemedResourceCacheClazzFetched -> d
    46:56:void flush(android.content.res.Resources) -> a
    166:207:void flushThemedResourcesCache(java.lang.Object) -> a
    60:80:void flushLollipops(android.content.res.Resources) -> b
    84:109:void flushMarshmallows(android.content.res.Resources) -> c
    113:162:void flushNougats(android.content.res.Resources) -> d
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.g:
    java.lang.Runnable mMenuInvalidator -> g
    boolean mLastMenuVisibility -> e
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> h
    java.util.ArrayList mMenuVisibilityListeners -> f
    android.view.Window$Callback mWindowCallback -> c
    boolean mToolbarMenuPrepared -> b
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> a
    boolean mMenuCallbackSet -> d
    68:74:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    186:187:void onConfigurationChanged(android.content.res.Configuration) -> a
    218:219:void setTitle(java.lang.CharSequence) -> a
    259:261:void setDisplayOptions(int,int) -> a
    468:471:boolean onMenuKeyEvent(android.view.KeyEvent) -> a
    476:483:boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    494:495:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    228:229:void setWindowTitle(java.lang.CharSequence) -> b
    504:513:void dispatchMenuVisibilityChanged(boolean) -> b
    172:172:void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    275:276:void setDisplayHomeAsUpEnabled(boolean) -> d
    182:182:void setShowHideAnimationEnabled(boolean) -> e
    428:428:boolean closeOptionsMenu() -> e
    440:444:boolean collapseActionView() -> f
    323:323:int getDisplayOptions() -> g
    146:146:android.content.Context getThemedContext() -> h
    433:435:boolean invalidateOptionsMenu() -> i
    489:490:void onDestroy() -> j
    423:423:boolean openOptionsMenu() -> k
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> l
    448:461:void populateOptionsMenu() -> m
    543:548:android.view.Menu getMenu() -> n
    499:500:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.g$a:
    androidx.appcompat.app.ToolbarActionBar this$0 -> d
    53:53:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    56:57:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.g$b:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
    61:61:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.g$c:
    androidx.appcompat.app.ToolbarActionBar this$0 -> e
    boolean mClosingActionMenu -> d
    554:555:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    559:563:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    568:578:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.g$d:
    androidx.appcompat.app.ToolbarActionBar this$0 -> d
    583:584:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    588:588:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    593:601:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.g$e:
    androidx.appcompat.app.ToolbarActionBar this$0 -> e
    516:518:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    532:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:527:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.h:
    long sunrise -> b
    long sunset -> a
    androidx.appcompat.app.TwilightCalculator sInstance -> d
    int state -> c
    26:26:void <init>() -> <init>
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> a
    89:138:void calculateTwilight(long,double,double) -> a
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.i:
    android.content.Context mContext -> a
    androidx.appcompat.app.TwilightManager sInstance -> d
    androidx.appcompat.app.TwilightManager$TwilightState mTwilightState -> c
    android.location.LocationManager mLocationManager -> b
    69:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> a
    80:102:boolean isNight() -> a
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> a
    148:192:void updateState(android.location.Location) -> a
    107:127:android.location.Location getLastKnownLocation() -> b
    144:144:boolean isStateValid() -> c
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.i$a:
    long nextUpdate -> f
    long tomorrowSunrise -> e
    long yesterdaySunset -> b
    long todaySunset -> d
    long todaySunrise -> c
    boolean isNight -> a
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    android.content.Context mContext -> a
    boolean mLastMenuVisibility -> o
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout -> d
    androidx.core.view.ViewPropertyAnimatorListener mShowListener -> B
    boolean mDisplayHomeAsUpSet -> k
    android.view.animation.Interpolator sShowInterpolator -> E
    boolean mHiddenBySystem -> u
    boolean mNowShowing -> w
    boolean mHasEmbeddedTabs -> q
    boolean mContentAnimations -> s
    boolean mShowHideAnimationEnabled -> y
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> x
    androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> C
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> f
    androidx.appcompat.widget.ActionBarContainer mContainerView -> e
    android.content.Context mThemedContext -> b
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode -> l
    androidx.core.view.ViewPropertyAnimatorListener mHideListener -> A
    androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView -> i
    androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab -> j
    android.view.animation.Interpolator sHideInterpolator -> D
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback -> n
    boolean mShowingForMode -> v
    boolean mHiddenByApp -> t
    android.view.View mContentView -> h
    androidx.appcompat.widget.ActionBarContextView mContextView -> g
    boolean mHideOnContentScroll -> z
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode -> m
    int mCurWindowVisibility -> r
    android.app.Activity mActivity -> c
    java.util.ArrayList mMenuVisibilityListeners -> p
    79:85:void <clinit>() -> <clinit>
    169:177:void <init>(android.app.Activity,boolean) -> <init>
    179:182:void <init>(android.app.Dialog) -> <init>
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> a
    249:250:void setElevation(float) -> a
    259:260:void onConfigurationChanged(android.content.res.Configuration) -> a
    321:322:void onWindowVisibilityChanged(int) -> a
    441:442:void setTitle(java.lang.CharSequence) -> a
    474:479:void setDisplayOptions(int,int) -> a
    523:540:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    627:660:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> a
    674:675:void enableContentAnimations(boolean) -> a
    697:701:void showForSystem() -> a
    760:763:boolean checkShowingFlags(boolean,boolean,boolean) -> a
    1402:1412:boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    341:342:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    195:206:void init(android.view.View) -> b
    351:360:void dispatchMenuVisibilityChanged(boolean) -> b
    446:447:void setWindowTitle(java.lang.CharSequence) -> b
    963:967:void onContentScrollStarted() -> b
    723:727:void hideForSystem() -> c
    1395:1398:void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    380:381:void setDisplayHomeAsUpEnabled(boolean) -> d
    971:971:void onContentScrollStopped() -> d
    333:337:void setShowHideAnimationEnabled(boolean) -> e
    875:911:void animateToMode(boolean) -> f
    975:979:boolean collapseActionView() -> f
    518:518:int getDisplayOptions() -> g
    837:865:void doHide(boolean) -> g
    788:834:void doShow(boolean) -> h
    921:933:android.content.Context getThemedContext() -> h
    731:737:void setHideOnContentScrollEnabled(boolean) -> i
    395:396:void setHomeButtonEnabled(boolean) -> j
    263:285:void setHasEmbeddedTabs(boolean) -> k
    312:317:void completeDeferredDestroyActionMode() -> l
    771:785:void updateVisibility(boolean) -> l
    513:513:int getNavigationMode() -> m
    712:719:void hideForActionMode() -> n
    916:916:boolean shouldAnimateContextView() -> o
    686:693:void showForActionMode() -> p
    346:347:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$a:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$b:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$c:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    java.lang.ref.WeakReference mCustomView -> i
    androidx.appcompat.app.WindowDecorActionBar this$0 -> j
    androidx.appcompat.view.menu.MenuBuilder mMenu -> g
    android.content.Context mActionModeContext -> f
    androidx.appcompat.view.ActionMode$Callback mCallback -> h
    993:999:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1013:1040:void finish() -> a
    1070:1072:void setCustomView(android.view.View) -> a
    1076:1077:void setSubtitle(java.lang.CharSequence) -> a
    1091:1092:void setSubtitle(int) -> a
    1106:1108:void setTitleOptionalHint(boolean) -> a
    1122:1125:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    1150:1155:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    1081:1082:void setTitle(java.lang.CharSequence) -> b
    1086:1087:void setTitle(int) -> b
    1117:1117:android.view.View getCustomView() -> b
    1008:1008:android.view.Menu getMenu() -> c
    1003:1003:android.view.MenuInflater getMenuInflater() -> d
    1101:1101:java.lang.CharSequence getSubtitle() -> e
    1096:1096:java.lang.CharSequence getTitle() -> g
    1044:1055:void invalidate() -> i
    1112:1112:boolean isTitleOptional() -> j
    1060:1064:boolean dispatchOnCreate() -> k
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> androidx.appcompat.app.WindowDecorActionBar$TabImpl:
    java.lang.CharSequence mText -> c
    java.lang.CharSequence mContentDesc -> d
    int mPosition -> e
    androidx.appcompat.app.ActionBar$TabListener mCallback -> a
    android.graphics.drawable.Drawable mIcon -> b
    android.view.View mCustomView -> f
    androidx.appcompat.app.WindowDecorActionBar this$0 -> g
    1280:1280:java.lang.CharSequence getContentDescription() -> a
    1194:1194:android.view.View getCustomView() -> b
    1214:1214:android.graphics.drawable.Drawable getIcon() -> c
    1219:1219:int getPosition() -> d
    1228:1228:java.lang.CharSequence getText() -> e
    1261:1262:void select() -> f
    1183:1183:androidx.appcompat.app.ActionBar$TabListener getCallback() -> g
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.a.a.a:
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    java.lang.Object sColorStateCacheLock -> c
    java.util.WeakHashMap sColorStateCaches -> b
    50:55:void <clinit>() -> <clinit>
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> a
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> a
    173:178:android.util.TypedValue getTypedValue() -> a
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> b
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> c
    112:124:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> d
    162:167:boolean isColorInt(android.content.Context,int) -> e
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.a.a.a$a:
    android.content.res.Configuration configuration -> b
    android.content.res.ColorStateList value -> a
    186:189:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition -> s
    boolean mMutated -> v
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState -> r
    int mTransitionToIndex -> t
    int mTransitionFromIndex -> u
    92:92:void <clinit>() -> <clinit>
    111:112:void <init>() -> <init>
    116:122:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> a
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> a
    201:210:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    449:469:void updateStateFromTypedArray(android.content.res.TypedArray) -> a
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> a
    718:722:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    171:174:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
    293:321:boolean selectTransition(int) -> b
    472:473:void init() -> c
    483:500:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> c
    89:89:boolean canApplyTheme() -> canApplyTheme
    564:598:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> d
    89:89:void draw(android.graphics.Canvas) -> draw
    510:548:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> e
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    259:259:boolean isStateful() -> isStateful
    264:272:void jumpToCurrentState() -> jumpToCurrentState
    605:609:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:288:boolean onStateChange(int[]) -> onStateChange
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:223:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1 -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$a:
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$b:
    android.graphics.drawable.Animatable mA -> a
    370:372:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:377:void start() -> c
    381:382:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$c:
    androidx.collection.LongSparseArray mTransitions -> K
    androidx.collection.SparseArrayCompat mStateIds -> L
    634:643:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    652:663:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> a
    667:669:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> a
    673:677:int indexOfKeyframe(int[]) -> b
    685:686:int indexOfTransition(int,int) -> c
    681:681:int getKeyframeIdAt(int) -> d
    690:691:boolean isTransitionReversed(int,int) -> d
    695:696:boolean transitionHasReversibleFlag(int,int) -> e
    712:712:long generateTransitionKey(int,int) -> f
    647:649:void mutate() -> m
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$d:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd -> a
    433:435:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:440:void start() -> c
    444:445:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$e:
    android.animation.ObjectAnimator mAnim -> a
    boolean mHasReversibleFlag -> b
    392:407:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> a
    421:422:void reverse() -> b
    416:417:void start() -> c
    426:427:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$f:
    int[] mFrameTimes -> a
    int mFrames -> b
    int mTotalDuration -> c
    732:734:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    737:750:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> a
    754:754:int getTotalDuration() -> a
    759:776:float getInterpolation(float) -> getInterpolation
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$g:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    363:363:boolean canReverse() -> a
    360:360:void reverse() -> b
    void start() -> c
    void stop() -> d
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.a:
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> d
    android.graphics.drawable.Drawable mCurrDrawable -> f
    android.graphics.drawable.Drawable mLastDrawable -> g
    boolean mHasAlpha -> i
    int mCurIndex -> j
    int mAlpha -> h
    boolean mMutated -> k
    java.lang.Runnable mAnimationRunnable -> l
    android.graphics.Rect mHotspotBounds -> e
    long mExitAnimationEnd -> n
    androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback -> o
    long mEnterAnimationEnd -> m
    53:75:void <init>() -> <init>
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> a
    427:482:boolean selectDrawable(int) -> a
    491:530:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> a
    535:573:void animate(boolean) -> a
    589:590:void updateDensity(android.content.res.Resources) -> a
    1152:1164:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    1204:1205:int resolveDensity(android.content.res.Resources,int) -> a
    595:596:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    414:414:int getCurrentIndex() -> b
    102:102:boolean needsMirroring() -> c
    601:601:boolean canApplyTheme() -> canApplyTheme
    87:93:void draw(android.graphics.Canvas) -> draw
    154:154:int getAlpha() -> getAlpha
    97:97:int getChangingConfigurations() -> getChangingConfigurations
    606:610:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    578:578:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    296:301:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    342:345:int getIntrinsicHeight() -> getIntrinsicHeight
    334:337:int getIntrinsicWidth() -> getIntrinsicWidth
    358:361:int getMinimumHeight() -> getMinimumHeight
    350:353:int getMinimumWidth() -> getMinimumWidth
    405:405:int getOpacity() -> getOpacity
    132:135:void getOutline(android.graphics.Outline) -> getOutline
    108:126:boolean getPadding(android.graphics.Rect) -> getPadding
    369:375:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    249:273:void jumpToCurrentState() -> jumpToCurrentState
    616:622:android.graphics.drawable.Drawable mutate() -> mutate
    218:224:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    329:329:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    316:322:boolean onLevelChange(int) -> onLevelChange
    305:311:boolean onStateChange(int[]) -> onStateChange
    379:382:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    139:150:void setAlpha(int) -> setAlpha
    233:240:void setAutoMirrored(boolean) -> setAutoMirrored
    169:176:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    159:165:void setDither(boolean) -> setDither
    277:280:void setHotspot(float,float) -> setHotspot
    284:292:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:185:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:194:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    393:400:boolean setVisible(boolean,boolean) -> setVisible
    386:389:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.a$a:
    androidx.appcompat.graphics.drawable.DrawableContainer this$0 -> d
    468:468:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    471:473:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.a$b:
    android.graphics.drawable.Drawable$Callback mCallback -> d
    1169:1169:void <init>() -> <init>
    1173:1174:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> a
    1178:1180:android.graphics.drawable.Drawable$Callback unwrap() -> a
    1186:1186:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1190:1193:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1197:1200:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.a$c:
    boolean mCheckedConstantSize -> m
    int mConstantWidth -> n
    boolean mVariablePadding -> i
    int mNumChildren -> h
    boolean mStateful -> u
    int mChangingConfigurations -> d
    boolean mCanConstantState -> w
    int mEnterFadeDuration -> A
    androidx.appcompat.graphics.drawable.DrawableContainer mOwner -> a
    boolean mMutated -> y
    android.content.res.ColorStateList mTintList -> F
    boolean mHasColorFilter -> E
    android.util.SparseArray mDrawableFutures -> f
    android.content.res.Resources mSourceRes -> b
    int mOpacity -> s
    boolean mAutoMirrored -> C
    int mConstantMinimumHeight -> q
    int mConstantHeight -> o
    android.graphics.ColorFilter mColorFilter -> D
    boolean mHasTintMode -> I
    boolean mCheckedPadding -> j
    boolean mConstantSize -> l
    boolean mCheckedConstantState -> v
    int mChildrenChangingConfigurations -> e
    android.graphics.drawable.Drawable[] mDrawables -> g
    boolean mDither -> x
    int mExitFadeDuration -> B
    int mDensity -> c
    boolean mCheckedOpacity -> r
    boolean mCheckedStateful -> t
    android.graphics.Rect mConstantPadding -> k
    int mLayoutDirection -> z
    android.graphics.PorterDuff$Mode mTintMode -> G
    boolean mHasTintList -> H
    int mConstantMinimumWidth -> p
    684:757:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:786:int addChild(android.graphics.drawable.Drawable) -> a
    830:848:android.graphics.drawable.Drawable getChild(int) -> a
    879:891:void updateDensity(android.content.res.Resources) -> a
    895:908:void applyTheme(android.content.res.Resources$Theme) -> a
    993:994:void setConstantSize(boolean) -> a
    1124:1127:void growArray(int,int) -> a
    1133:1132:boolean canConstantState() -> a
    814:819:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> b
    852:869:boolean setLayoutDirection(int,int) -> b
    961:962:void setVariablePadding(boolean) -> b
    1044:1061:void computeConstantSize() -> b
    1064:1065:void setEnterFadeDuration(int) -> b
    798:798:int getCapacity() -> c
    1072:1073:void setExitFadeDuration(int) -> c
    913:928:boolean canApplyTheme() -> canApplyTheme
    823:823:int getChildCount() -> d
    1017:1020:int getConstantHeight() -> e
    1037:1040:int getConstantMinimumHeight() -> f
    1027:1030:int getConstantMinimumWidth() -> g
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    968:972:android.graphics.Rect getConstantPadding() -> h
    1007:1010:int getConstantWidth() -> i
    1083:1095:int getOpacity() -> j
    793:795:void invalidateCache() -> k
    1000:1000:boolean isConstantSize() -> l
    void mutate() -> m
    802:811:void createAllFutures() -> n
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.b:
    android.graphics.drawable.Drawable mDrawable -> d
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> a
    224:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    160:161:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:108:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:169:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:83:void setAlpha(int) -> setAlpha
    186:187:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    87:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:73:void setDither(boolean) -> setDither
    77:78:void setFilterBitmap(boolean) -> setFilterBitmap
    211:212:void setHotspot(float,float) -> setHotspot
    216:217:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:197:void setTint(int) -> setTint
    201:202:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:207:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    176:177:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.c:
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState -> p
    boolean mMutated -> q
    88:89:void <init>() -> <init>
    403:408:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:418:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> a
    234:253:int[] extractStateSet(android.util.AttributeSet) -> a
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> a
    397:401:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    391:393:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    108:108:boolean isStateful() -> isStateful
    310:314:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.c$a:
    int[][] mStateSets -> J
    332:339:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:353:int addStateSet(int[],android.graphics.drawable.Drawable) -> a
    357:364:int indexOfStateSet(int[]) -> a
    381:385:void growArray(int,int) -> a
    343:348:void mutate() -> m
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.b.a:
    java.util.Locale mLocale -> d
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.a:
    android.content.Context mContext -> a
    46:48:void <init>(android.content.Context) -> <init>
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> a
    110:110:boolean enableHomeButtonByDefault() -> a
    86:86:int getEmbeddedMenuWidthLimit() -> b
    56:64:int getMaxActionButtons() -> c
    115:115:int getStackedTabMaxWidth() -> d
    94:104:int getTabContainerHeight() -> e
    90:90:boolean hasEmbeddedTabs() -> f
    78:81:boolean showsOverflowMenuButton() -> g
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.b:
    java.lang.Object mTag -> d
    boolean mTitleOptionalHint -> e
    41:41:void <init>() -> <init>
    void finish() -> a
    void setCustomView(android.view.View) -> a
    void setSubtitle(int) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    57:58:void setTag(java.lang.Object) -> a
    134:135:void setTitleOptionalHint(boolean) -> a
    android.view.View getCustomView() -> b
    void setTitle(int) -> b
    void setTitle(java.lang.CharSequence) -> b
    android.view.Menu getMenu() -> c
    android.view.MenuInflater getMenuInflater() -> d
    java.lang.CharSequence getSubtitle() -> e
    71:71:java.lang.Object getTag() -> f
    java.lang.CharSequence getTitle() -> g
    145:145:boolean getTitleOptionalHint() -> h
    void invalidate() -> i
    boolean isTitleOptional() -> j
androidx.appcompat.view.ActionMode$Callback -> androidx.appcompat.view.b$a:
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
androidx.appcompat.view.CollapsibleActionView -> androidx.appcompat.view.c:
    void onActionViewExpanded() -> b
    void onActionViewCollapsed() -> c
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.d:
    android.content.res.Resources$Theme mTheme -> b
    android.content.res.Configuration mOverrideConfiguration -> d
    android.content.res.Resources mResources -> e
    android.view.LayoutInflater mInflater -> c
    int mThemeResource -> a
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    137:137:int getThemeResId() -> a
    177:178:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> a
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    113:121:android.content.res.Resources getResourcesInternal() -> b
    181:190:void initializeTheme() -> c
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    126:130:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    java.lang.ref.WeakReference mCustomView -> i
    androidx.appcompat.widget.ActionBarContextView mContextView -> g
    boolean mFinished -> j
    androidx.appcompat.view.menu.MenuBuilder mMenu -> k
    android.content.Context mContext -> f
    androidx.appcompat.view.ActionMode$Callback mCallback -> h
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    68:69:void setSubtitle(java.lang.CharSequence) -> a
    78:79:void setSubtitle(int) -> a
    83:85:void setTitleOptionalHint(boolean) -> a
    94:96:void setCustomView(android.view.View) -> a
    105:112:void finish() -> a
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    161:163:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    63:64:void setTitle(java.lang.CharSequence) -> b
    73:74:void setTitle(int) -> b
    131:131:android.view.View getCustomView() -> b
    116:116:android.view.Menu getMenu() -> c
    136:136:android.view.MenuInflater getMenuInflater() -> d
    126:126:java.lang.CharSequence getSubtitle() -> e
    121:121:java.lang.CharSequence getTitle() -> g
    100:101:void invalidate() -> i
    89:89:boolean isTitleOptional() -> j
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    android.content.Context mContext -> a
    androidx.appcompat.view.ActionMode mWrappedObject -> b
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    android.content.Context mContext -> b
    androidx.collection.SimpleArrayMap mMenus -> d
    android.view.ActionMode$Callback mWrappedCallback -> a
    java.util.ArrayList mActionModes -> c
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    165:165:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> a
    159:159:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> b
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.e:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> e
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> f
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object mRealOwner -> d
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    224:227:java.lang.Object getRealOwner() -> a
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> a
    119:135:void inflate(int,android.view.Menu) -> inflate
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.e$a:
    java.lang.Class[] PARAM_TYPES -> f
    java.lang.Object mRealOwner -> d
    java.lang.reflect.Method mMethod -> e
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.e$b:
    int itemCategoryOrder -> j
    char itemAlphabeticShortcut -> n
    java.lang.CharSequence itemTooltipText -> C
    char itemNumericShortcut -> p
    boolean itemEnabled -> u
    int groupOrder -> d
    int groupId -> b
    boolean itemChecked -> s
    java.lang.String itemActionViewClassName -> x
    android.content.res.ColorStateList itemIconTintList -> D
    java.lang.String itemListenerMethodName -> z
    android.view.Menu menu -> a
    boolean groupVisible -> f
    int itemActionViewLayout -> w
    androidx.appcompat.view.SupportMenuInflater this$0 -> F
    boolean itemAdded -> h
    androidx.core.view.ActionProvider itemActionProvider -> A
    int itemNumericModifiers -> q
    int itemAlphabeticModifiers -> o
    int itemIconResId -> m
    java.lang.CharSequence itemContentDescription -> B
    int itemId -> i
    int groupCheckable -> e
    int groupCategory -> c
    java.lang.CharSequence itemTitle -> k
    boolean itemVisible -> t
    java.lang.CharSequence itemTitleCondensed -> l
    java.lang.String itemActionProviderClassName -> y
    android.graphics.PorterDuff$Mode itemIconTintMode -> E
    int itemShowAsAction -> v
    boolean groupEnabled -> g
    int itemCheckable -> r
    349:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    368:380:void readGroup(android.util.AttributeSet) -> a
    459:462:char getShortcut(java.lang.String) -> a
    467:528:void setItem(android.view.MenuItem) -> a
    531:533:void addItem() -> a
    550:557:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    386:456:void readItem(android.util.AttributeSet) -> b
    536:539:android.view.SubMenu addSubMenuItem() -> b
    543:543:boolean hasAddedItem() -> c
    356:362:void resetGroup() -> d
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.f:
    android.view.animation.Interpolator mInterpolator -> c
    androidx.core.view.ViewPropertyAnimatorListener mListener -> d
    long mDuration -> b
    boolean mIsStarted -> e
    androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    java.util.ArrayList mAnimators -> a
    48:50:void <init>() -> <init>
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> a
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> a
    90:97:void cancel() -> a
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> a
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> a
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> a
    86:87:void onAnimationsEnded() -> b
    68:83:void start() -> c
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.f$a:
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0 -> c
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    137:140:void onEnd() -> a
    144:150:void onAnimationEnd(android.view.View) -> a
    127:134:void onAnimationStart(android.view.View) -> b
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.g:
    android.view.Window$Callback mWrapped -> d
    50:52:void <init>(android.view.Window$Callback) -> <init>
    188:188:android.view.Window$Callback getWrapped() -> a
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.a:
    char mShortcutNumericChar -> g
    android.content.res.ColorStateList mIconTintList -> o
    char mShortcutAlphabeticChar -> i
    int mShortcutAlphabeticModifiers -> j
    int mShortcutNumericModifiers -> h
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    int mGroup -> b
    boolean mHasIconTint -> q
    int mOrdering -> c
    boolean mHasIconTintMode -> r
    int mId -> a
    android.content.Intent mIntent -> f
    java.lang.CharSequence mContentDescription -> m
    java.lang.CharSequence mTooltipText -> n
    android.content.Context mContext -> l
    android.graphics.drawable.Drawable mIconDrawable -> k
    int mFlags -> s
    android.graphics.PorterDuff$Mode mIconTintMode -> p
    83:90:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    357:357:androidx.core.view.ActionProvider getSupportActionProvider() -> a
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
    444:456:void applyIconTint() -> b
    378:378:boolean collapseActionView() -> collapseActionView
    373:373:boolean expandActionView() -> expandActionView
    347:347:android.view.ActionProvider getActionProvider() -> getActionProvider
    337:337:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    399:399:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    425:425:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    440:440:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    124:124:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    144:144:android.view.SubMenu getSubMenu() -> getSubMenu
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    410:410:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean hasSubMenu() -> hasSubMenu
    383:383:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    342:342:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    332:332:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    352:352:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:185:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:192:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:198:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:209:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    393:394:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:215:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:224:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:233:android.view.MenuItem setIcon(int) -> setIcon
    415:420:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    430:435:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:239:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:245:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:252:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    388:388:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:258:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:265:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:275:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    318:318:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    367:368:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    280:281:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:287:android.view.MenuItem setTitle(int) -> setTitle
    292:293:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    404:405:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:299:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> k
    boolean mAllowTextWithIcon -> n
    boolean mExpandedFormat -> o
    android.graphics.drawable.Drawable mIcon -> j
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> h
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> m
    int mMaxIconSize -> r
    java.lang.CharSequence mTitle -> i
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> l
    int mMinWidth -> p
    int mSavedPaddingLeft -> q
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> a
    165:165:boolean prefersCondensedTitle() -> a
    264:264:boolean needsDividerAfter() -> b
    259:259:boolean needsDividerBefore() -> c
    237:237:boolean hasText() -> d
    103:107:boolean shouldAllowTextWithIcon() -> e
    188:211:void updateTextButtonVisibility() -> f
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$a:
    androidx.appcompat.view.menu.ActionMenuItemView this$0 -> m
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    314:318:boolean onForwardingStarted() -> b
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$b:
    336:336:void <init>() -> <init>
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> f
    android.view.LayoutInflater mSystemInflater -> g
    int mId -> l
    int mItemLayoutRes -> j
    int mMenuLayoutRes -> i
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> h
    android.content.Context mContext -> e
    android.content.Context mSystemContext -> d
    androidx.appcompat.view.menu.MenuView mMenuView -> k
    61:66:void <init>(android.content.Context,int,int) -> <init>
    void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> a
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    91:125:void updateMenuView(boolean) -> a
    134:139:void addItemView(android.view.View,int) -> a
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> a
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    208:208:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> a
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    220:223:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    238:238:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    243:243:int getId() -> a
    247:248:void setId(int) -> a
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> b
    228:228:boolean flagActionItems() -> b
    233:233:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> d
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.b:
    android.content.Context mContext -> a
    java.util.Map mMenuItems -> b
    java.util.Map mSubMenus -> c
    37:39:void <init>(android.content.Context) -> <init>
    42:61:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    65:81:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    95:108:void internalRemoveGroup(int) -> a
    86:92:void internalClear() -> b
    111:125:void internalRemoveItem(int) -> b
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.c:
    boolean mOverflowOnly -> i
    int mPopupStyleRes -> h
    int mMenuMaxWidth -> f
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> n
    boolean mHasXOffset -> u
    int ITEM_LAYOUT -> E
    android.view.View mAnchorView -> r
    android.content.Context mContext -> e
    androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener -> o
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> A
    boolean mForceShowIcon -> y
    int mXOffset -> w
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> m
    java.util.List mShowingMenus -> l
    int mDropDownGravity -> q
    int mPopupStyleAttr -> g
    boolean mHasYOffset -> v
    android.view.View mShownAnchorView -> s
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> C
    boolean mShowTitle -> z
    int mYOffset -> x
    int mLastPosition -> t
    android.view.ViewTreeObserver mTreeObserver -> B
    android.os.Handler mSubMenuHoverHandler -> j
    int mRawDropDownGravity -> p
    java.util.List mPendingMenus -> k
    boolean mShouldCloseImmediately -> D
    66:66:void <clinit>() -> <clinit>
    222:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:361:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    516:523:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> a
    537:577:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> a
    616:619:void updateMenuView(boolean) -> a
    623:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    629:645:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    667:722:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    736:736:void onRestoreInstanceState(android.os.Parcelable) -> a
    740:745:void setGravity(int) -> a
    749:756:void setAnchorView(android.view.View) -> a
    241:242:void setForceShowIcon(boolean) -> b
    726:726:boolean flagActionItems() -> b
    772:774:void setHorizontalOffset(int) -> b
    655:662:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
    731:731:android.os.Parcelable onSaveInstanceState() -> c
    778:780:void setVerticalOffset(int) -> c
    784:785:void setShowTitle(boolean) -> c
    329:348:int getNextMenuPosition(int) -> d
    369:503:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> d
    588:588:boolean isShowing() -> d
    287:298:void dismiss() -> dismiss
    259:279:void show() -> e
    791:791:boolean closeMenuOnSubMenuOpened() -> f
    765:765:android.widget.ListView getListView() -> g
    245:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> i
    315:316:int getInitialMenuPosition() -> j
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.c$a:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> d
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.c$b:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> d
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.c$c:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> d
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.c$c$a:
    androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1 -> g
    androidx.appcompat.view.menu.MenuBuilder val$menu -> f
    android.view.MenuItem val$item -> e
    androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> d
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.c$d:
    androidx.appcompat.view.menu.MenuBuilder menu -> b
    int position -> c
    androidx.appcompat.widget.MenuPopupWindow window -> a
    800:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> a
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> f
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    int mAnimations -> e
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
    97:97:int getWindowAnimations() -> getWindowAnimations
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    int mTextAppearance -> n
    boolean mPreserveIconSpacing -> p
    android.widget.ImageView mIconView -> e
    boolean mHasListDivider -> r
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> d
    boolean mForceShowIcon -> t
    android.view.LayoutInflater mInflater -> s
    android.widget.RadioButton mRadioButton -> f
    android.widget.ImageView mSubMenuArrowView -> j
    android.widget.LinearLayout mContent -> l
    android.content.Context mTextAppearanceContext -> o
    android.widget.ImageView mGroupDivider -> k
    android.widget.TextView mTitleView -> g
    android.widget.TextView mShortcutView -> i
    android.graphics.drawable.Drawable mBackground -> m
    android.widget.CheckBox mCheckBox -> h
    android.graphics.drawable.Drawable mSubMenuArrow -> q
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    126:138:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> a
    141:142:void addContentView(android.view.View) -> a
    145:150:void addContentView(android.view.View,int) -> a
    245:255:void setShortcut(boolean,char) -> a
    321:321:boolean prefersCondensedTitle() -> a
    350:358:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    312:317:void insertCheckBox() -> b
    297:301:void insertIconView() -> c
    304:309:void insertRadioButton() -> d
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    104:122:void onFinishInflate() -> onFinishInflate
    285:294:void onMeasure(int,int) -> onMeasure
    174:216:void setCheckable(boolean) -> setCheckable
    222:235:void setChecked(boolean) -> setChecked
    153:154:void setForceShowIcon(boolean) -> setForceShowIcon
    342:346:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:281:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    238:241:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    158:165:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> f
    androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> l
    android.view.LayoutInflater mInflater -> e
    int mId -> m
    int mItemLayoutRes -> j
    int mItemIndexOffset -> h
    int mThemeRes -> i
    android.content.Context mContext -> d
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> k
    androidx.appcompat.view.menu.ExpandedMenuView mMenuView -> g
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    133:134:void updateMenuView(boolean) -> a
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    200:204:void restoreHierarchyState(android.os.Bundle) -> a
    212:212:int getId() -> a
    228:229:void onRestoreInstanceState(android.os.Parcelable) -> a
    178:178:boolean flagActionItems() -> b
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    192:197:void saveHierarchyState(android.os.Bundle) -> b
    217:223:android.os.Parcelable onSaveInstanceState() -> c
    125:128:android.widget.ListAdapter getAdapter() -> d
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$a:
    androidx.appcompat.view.menu.ListMenuPresenter this$0 -> e
    int mExpandedIndex -> d
    234:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> a
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.d:
    androidx.appcompat.view.menu.MenuBuilder mAdapterMenu -> d
    int mItemLayoutRes -> i
    boolean mForceShowIcon -> f
    boolean mOverflowOnly -> g
    int mExpandedIndex -> e
    android.view.LayoutInflater mInflater -> h
    44:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    57:58:void setForceShowIcon(boolean) -> a
    114:127:void findExpandedIndex() -> a
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> b
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.e:
    android.content.Context mContext -> a
    int mDefaultShowAsAction -> l
    boolean mIsActionItemsStale -> k
    java.util.ArrayList mVisibleItems -> g
    boolean mIsClosing -> u
    android.view.View mHeaderView -> p
    int[] sCategoryToOrder -> A
    boolean mPreventDispatchingItemsChanged -> q
    boolean mStructureChangedWhileDispatchPrevented -> s
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    boolean mGroupDividerEnabled -> y
    java.util.ArrayList mActionItems -> i
    boolean mIsVisibleItemsStale -> h
    androidx.appcompat.view.menu.MenuItemImpl mExpandedItem -> x
    android.content.res.Resources mResources -> b
    boolean mShortcutsVisible -> d
    androidx.appcompat.view.menu.MenuBuilder$Callback mCallback -> e
    java.util.ArrayList mItems -> f
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> m
    boolean mItemsChangedWhileDispatchPrevented -> r
    boolean mOptionalIconsVisible -> t
    java.lang.CharSequence mHeaderTitle -> n
    java.util.ArrayList mNonActionItems -> j
    boolean mOverrideVisibleItems -> z
    java.util.ArrayList mTempShortcutItemList -> v
    android.graphics.drawable.Drawable mHeaderIcon -> o
    boolean mQwertyMode -> c
    68:68:void <clinit>() -> <clinit>
    229:242:void <init>(android.content.Context) -> <init>
    256:257:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> a
    269:272:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> a
    306:323:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> a
    406:433:void restoreActionViewStates(android.os.Bundle) -> a
    440:441:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    447:460:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> a
    586:586:void removeItemAtInt(int,boolean) -> a
    619:634:void setExclusiveItemChecked(android.view.MenuItem) -> a
    730:730:int findGroupIndex(int) -> a
    734:748:int findGroupIndex(int,int) -> a
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    847:850:void changeMenuMode() -> a
    853:860:int findInsertIndex(java.util.ArrayList,int) -> a
    888:920:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    936:971:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    981:981:boolean performItemAction(android.view.MenuItem,int) -> a
    985:988:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> a
    1036:1048:void close(boolean) -> a
    1228:1255:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    1265:1266:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    1289:1290:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    1313:1314:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> a
    1379:1379:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> a
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:550:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:506:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    281:287:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> b
    375:376:void restorePresenterStates(android.os.Bundle) -> b
    717:726:int findItemIndex(int) -> b
    1063:1076:void onItemsChanged(boolean) -> b
    1169:1206:void flagActionItems() -> b
    1357:1375:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> b
    245:246:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> c
    379:403:void saveActionViewStates(android.os.Bundle) -> c
    1118:1120:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> c
    1209:1210:java.util.ArrayList getActionItems() -> c
    1410:1411:void setOverrideVisibleItems(boolean) -> c
    610:616:void clear() -> clear
    1219:1224:void clearHeader() -> clearHeader
    1052:1053:void close() -> close
    290:302:void dispatchPresenterUpdate(boolean) -> d
    371:372:void savePresenterStates(android.os.Bundle) -> d
    436:436:java.lang.String getActionViewStatesKey() -> d
    1107:1109:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> d
    1301:1302:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> d
    350:352:void dispatchRestoreInstanceState(android.os.Bundle) -> e
    818:822:void setShortcutsVisibleInner(boolean) -> e
    836:836:android.content.Context getContext() -> e
    1277:1278:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> e
    327:347:void dispatchSaveInstanceState(android.os.Bundle) -> f
    785:788:int getOrdering(int) -> f
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> f
    699:713:android.view.MenuItem findItem(int) -> findItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> g
    758:758:android.view.MenuItem getItem(int) -> getItem
    1318:1318:java.lang.CharSequence getHeaderTitle() -> h
    681:694:boolean hasVisibleItems() -> hasVisibleItems
    1326:1326:android.view.View getHeaderView() -> i
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    1214:1215:java.util.ArrayList getNonActionItems() -> j
    1353:1353:boolean getOptionalIconsVisible() -> k
    832:832:android.content.res.Resources getResources() -> l
    1334:1334:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> m
    1124:1139:java.util.ArrayList getVisibleItems() -> n
    520:520:boolean isGroupDividerEnabled() -> o
    798:798:boolean isQwertyMode() -> p
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    865:877:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    828:828:boolean isShortcutsVisible() -> q
    1092:1098:void startDispatchingItemsChanged() -> r
    560:573:void removeGroup(int) -> removeGroup
    555:556:void removeItem(int) -> removeItem
    1084:1089:void stopDispatchingItemsChanged() -> s
    638:647:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:517:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:677:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:665:void setGroupVisible(int,boolean) -> setGroupVisible
    768:771:void setQwertyMode(boolean) -> setQwertyMode
    753:753:int size() -> size
androidx.appcompat.view.menu.MenuBuilder$Callback -> androidx.appcompat.view.menu.e$a:
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> androidx.appcompat.view.menu.e$b:
    boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.f:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    androidx.appcompat.app.AlertDialog mDialog -> e
    androidx.appcompat.view.menu.ListMenuPresenter mPresenter -> f
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> g
    42:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    53:90:void show(android.os.IBinder) -> a
    139:142:void dismiss() -> a
    151:157:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    161:164:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    169:170:void onClick(android.content.DialogInterface,int) -> onClick
    146:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    94:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
androidx.appcompat.view.menu.MenuHelper -> androidx.appcompat.view.menu.g:
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.h:
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> j
    android.content.res.ColorStateList mIconTintList -> t
    android.graphics.PorterDuff$Mode mIconTintMode -> u
    int mOrdering -> d
    java.lang.CharSequence mTitleCondensed -> f
    boolean mHasIconTintMode -> w
    int mGroup -> b
    androidx.appcompat.view.menu.SubMenuBuilder mSubMenu -> o
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> q
    android.content.Intent mIntent -> g
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> E
    java.lang.CharSequence mTooltipText -> s
    int mFlags -> y
    android.graphics.drawable.Drawable mIconDrawable -> l
    int mIconResId -> m
    int mShortcutAlphabeticModifiers -> k
    int mShortcutNumericModifiers -> i
    java.lang.CharSequence mTitle -> e
    boolean mHasIconTint -> v
    boolean mNeedToApplyIconTint -> x
    int mCategoryOrder -> c
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> C
    int mId -> a
    int mShowAsAction -> z
    java.lang.CharSequence mContentDescription -> r
    android.view.View mActionView -> A
    androidx.appcompat.view.menu.MenuBuilder mMenu -> n
    androidx.core.view.ActionProvider mActionProvider -> B
    java.lang.Runnable mItemCallback -> p
    boolean mIsActionViewExpanded -> D
    137:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> a
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    446:446:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> a
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> a
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> a
    799:813:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
    865:867:void setActionViewExpanded(boolean) -> a
    631:636:void setCheckedInt(boolean) -> b
    691:692:void actionFormatChanged() -> b
    218:218:int getOrdering() -> c
    605:606:void setExclusiveCheckable(boolean) -> c
    838:848:boolean collapseActionView() -> collapseActionView
    342:342:char getShortcut() -> d
    720:725:void setIsActionButton(boolean) -> d
    352:398:java.lang.String getShortcutLabel() -> e
    655:657:boolean setVisibleInt(boolean) -> e
    824:830:boolean expandActionView() -> expandActionView
    855:861:boolean hasCollapsibleActionView() -> f
    154:180:boolean invoke() -> g
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:776:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    702:702:boolean isActionButton() -> h
    424:424:boolean hasSubMenu() -> hasSubMenu
    609:609:boolean isExclusiveCheckable() -> i
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> j
    711:711:boolean requiresActionButton() -> k
    698:698:boolean shouldShowIcon() -> l
    414:414:boolean shouldShowShortcut() -> m
    728:728:boolean showsTextAsAction() -> n
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:757:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:765:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:886:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:877:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    733:747:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:819:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:900:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.h$a:
    androidx.appcompat.view.menu.MenuItemImpl this$0 -> a
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:810:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> e
    androidx.core.internal.view.SupportMenuItem mWrappedObject -> d
    56:58:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    387:395:void setExclusiveCheckable(boolean) -> a
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$a:
    android.view.ActionProvider mInner -> c
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> d
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> a
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> a
    439:439:android.view.View onCreateActionView() -> c
    444:444:boolean onPerformDefaultAction() -> d
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$b:
    androidx.core.view.ActionProvider$VisibilityListener mListener -> e
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> a
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> a
    479:479:boolean isVisible() -> b
    474:474:boolean overridesItemVisibility() -> e
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$c:
    android.view.CollapsibleActionView mWrappedView -> d
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> a
    519:520:void onActionViewExpanded() -> b
    524:525:void onActionViewCollapsed() -> c
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$d:
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.MenuItem$OnActionExpandListener mObject -> a
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$e:
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> e
    android.view.MenuItem$OnMenuItemClickListener mObject -> d
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.i:
    android.graphics.Rect mEpicenterBounds -> d
    39:39:void <init>() -> <init>
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    void setAnchorView(android.view.View) -> a
    void setGravity(int) -> a
    71:72:void setEpicenterBounds(android.graphics.Rect) -> a
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    118:118:int getId() -> a
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> a
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> a
    void setForceShowIcon(boolean) -> b
    void setHorizontalOffset(int) -> b
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> b
    void setShowTitle(boolean) -> c
    void setVerticalOffset(int) -> c
    217:217:boolean closeMenuOnSubMenuOpened() -> f
    78:78:android.graphics.Rect getEpicenterBounds() -> h
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    int mDropDownGravity -> g
    int mPopupStyleAttr -> d
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    int mPopupStyleRes -> e
    boolean mForceShowIcon -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> i
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    boolean mOverflowOnly -> c
    android.view.View mAnchorView -> f
    androidx.appcompat.view.menu.MenuPopup mPopup -> j
    79:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:91:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    105:106:void setAnchorView(android.view.View) -> a
    118:122:void setForceShowIcon(boolean) -> a
    132:133:void setGravity(int) -> a
    205:214:boolean tryShow(int,int) -> a
    263:291:void showPopup(int,int,boolean,boolean) -> a
    298:301:void dismiss() -> a
    325:329:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> b
    320:320:boolean isShowing() -> c
    312:317:void onDismiss() -> d
    143:144:void show() -> e
    169:178:boolean tryShow() -> f
    224:259:androidx.appcompat.view.menu.MenuPopup createPopup() -> g
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$a:
    androidx.appcompat.view.menu.MenuPopupHelper this$0 -> d
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuPresenter -> androidx.appcompat.view.menu.j:
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    int getId() -> a
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void updateMenuView(boolean) -> a
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    boolean flagActionItems() -> b
    android.os.Parcelable onSaveInstanceState() -> c
androidx.appcompat.view.menu.MenuPresenter$Callback -> androidx.appcompat.view.menu.j$a:
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuView -> androidx.appcompat.view.menu.k:
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuView$ItemView -> androidx.appcompat.view.menu.k$a:
    void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> a
    boolean prefersCondensedTitle() -> a
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    androidx.core.internal.view.SupportMenu mWrappedObject -> d
    41:43:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:85:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.ShowableListMenu -> androidx.appcompat.view.menu.l:
    boolean isShowing() -> d
    void show() -> e
    android.widget.ListView getListView() -> g
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.m:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> f
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> r
    int mPopupStyleAttr -> j
    int mPopupStyleRes -> k
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> o
    int mPopupMaxWidth -> i
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> n
    android.view.View mShownAnchorView -> q
    boolean mHasContentWidth -> u
    android.view.View mAnchorView -> p
    android.view.ViewTreeObserver mTreeObserver -> s
    boolean mShowTitle -> x
    android.content.Context mContext -> e
    boolean mWasDismissed -> t
    int ITEM_LAYOUT -> y
    int mContentWidth -> v
    androidx.appcompat.view.menu.MenuAdapter mAdapter -> g
    int mDropDownGravity -> w
    androidx.appcompat.widget.MenuPopupWindow mPopup -> l
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> m
    boolean mOverflowOnly -> h
    46:46:void <clinit>() -> <clinit>
    117:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    145:146:void setGravity(int) -> a
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    249:254:void updateMenuView(boolean) -> a
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    321:321:void onRestoreInstanceState(android.os.Parcelable) -> a
    325:326:void setAnchorView(android.view.View) -> a
    140:141:void setForceShowIcon(boolean) -> b
    311:311:boolean flagActionItems() -> b
    350:351:void setHorizontalOffset(int) -> b
    316:316:android.os.Parcelable onSaveInstanceState() -> c
    355:356:void setVerticalOffset(int) -> c
    360:361:void setShowTitle(boolean) -> c
    227:227:boolean isShowing() -> d
    215:218:void dismiss() -> dismiss
    208:209:void show() -> e
    344:344:android.widget.ListView getListView() -> g
    149:154:boolean tryShow() -> i
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.m$a:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> d
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.m$b:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> d
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    androidx.appcompat.view.menu.MenuBuilder mParentMenu -> B
    androidx.appcompat.view.menu.MenuItemImpl mItem -> C
    42:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    79:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    89:89:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> a
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> b
    142:146:java.lang.String getActionViewStatesKey() -> d
    74:74:android.view.MenuItem getItem() -> getItem
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> m
    156:156:boolean isGroupDividerEnabled() -> o
    55:55:boolean isQwertyMode() -> p
    65:65:boolean isShortcutsVisible() -> q
    151:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:102:android.view.SubMenu setIcon(int) -> setIcon
    50:51:void setQwertyMode(boolean) -> setQwertyMode
    69:69:android.view.Menu getParentMenu() -> t
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.n:
    androidx.core.internal.view.SupportSubMenu mSubMenu -> e
    39:41:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:76:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:58:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:64:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:46:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:52:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:70:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:81:android.view.SubMenu setIcon(int) -> setIcon
    86:87:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.a:
    androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> d
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> g
    boolean mEatingTouch -> j
    int mContentHeight -> h
    boolean mEatingHover -> k
    androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim -> i
    androidx.appcompat.widget.ActionMenuView mMenuView -> f
    android.content.Context mPopupContext -> e
    52:53:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> a
    158:174:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    246:252:int measureChildView(android.view.View,int,int,int) -> a
    256:256:int next(int,int,boolean) -> a
    260:270:int positionChild(android.view.View,int,int,int,boolean) -> a
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> b
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    73:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:135:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:110:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    185:191:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.a$a:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.AbsActionBarView this$0 -> c
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    279:281:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> a
    292:296:void onAnimationEnd(android.view.View) -> a
    286:288:void onAnimationStart(android.view.View) -> b
    300:301:void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.b:
    androidx.appcompat.widget.ActionBarContainer mContainer -> a
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    int mHeight -> m
    android.graphics.drawable.Drawable mBackground -> h
    android.graphics.drawable.Drawable mStackedBackground -> i
    boolean mIsSplit -> k
    android.graphics.drawable.Drawable mSplitBackground -> j
    boolean mIsStacked -> l
    android.view.View mTabContainer -> e
    android.view.View mContextView -> g
    boolean mIsTransitioning -> d
    android.view.View mActionBarView -> f
    55:56:void <init>(android.content.Context) -> <init>
    59:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> a
    263:263:boolean isCollapsed(android.view.View) -> b
    168:178:void drawableStateChanged() -> drawableStateChanged
    243:243:android.view.View getTabContainer() -> getTabContainer
    182:192:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:87:void onFinishInflate() -> onFinishInflate
    222:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:347:void onLayout(boolean,int,int,int,int) -> onLayout
    273:299:void onMeasure(int,int) -> onMeasure
    214:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:108:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:149:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:129:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:240:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:205:void setTransitioning(boolean) -> setTransitioning
    153:158:void setVisibility(int) -> setVisibility
    250:250:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    256:259:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:162:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> l
    java.lang.CharSequence mSubtitle -> m
    android.widget.LinearLayout mTitleLayout -> p
    android.widget.TextView mTitleView -> q
    android.widget.TextView mSubtitleView -> r
    android.view.View mCustomView -> o
    android.view.View mClose -> n
    boolean mTitleOptional -> u
    int mCloseItemLayout -> v
    int mSubtitleStyleRes -> t
    int mTitleStyleRes -> s
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    161:190:void initForMode(androidx.appcompat.view.ActionMode) -> a
    193:197:void closeMode() -> a
    378:378:boolean isTitleOptional() -> b
    200:203:void killMode() -> c
    207:210:boolean showOverflowMenu() -> d
    134:158:void initTitle() -> e
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    88:93:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:368:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:350:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:98:void setContentHeight(int) -> setContentHeight
    101:113:void setCustomView(android.view.View) -> setCustomView
    121:123:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    354:354:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$a:
    androidx.appcompat.view.ActionMode val$mode -> d
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:174:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    boolean mHideOnContentScroll -> m
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> D
    android.graphics.drawable.Drawable mWindowContentOverlay -> i
    boolean mOverlayMode -> k
    int mActionBarHeight -> d
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> A
    androidx.appcompat.widget.ContentFrameLayout mContent -> f
    androidx.appcompat.widget.ActionBarContainer mActionBarTop -> g
    java.lang.Runnable mRemoveActionBarHideOffset -> B
    int[] ATTRS -> E
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> h
    android.graphics.Rect mInnerInsets -> v
    android.graphics.Rect mBaseInnerInsets -> t
    android.graphics.Rect mLastBaseContentInsets -> r
    boolean mAnimatingForFling -> n
    int mHideOnContentScrollReference -> o
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> z
    boolean mIgnoreWindowContentOverlay -> j
    boolean mHasNonEmbeddedTabs -> l
    int mWindowVisibility -> e
    androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> x
    java.lang.Runnable mAddActionBarHideOffset -> C
    android.graphics.Rect mLastInnerInsets -> w
    android.widget.OverScroller mFlingEstimator -> y
    android.graphics.Rect mLastBaseInnerInsets -> u
    android.graphics.Rect mContentInsets -> s
    int mLastSystemUiVisibility -> p
    android.graphics.Rect mBaseContentInsets -> q
    131:131:void <clinit>() -> <clinit>
    139:140:void <init>(android.content.Context) -> <init>
    143:147:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:160:void init(android.content.Context) -> a
    266:284:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> a
    474:475:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> a
    486:489:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    493:496:void onStopNestedScroll(android.view.View,int) -> a
    501:504:void onNestedScroll(android.view.View,int,int,int,int,int) -> a
    508:511:void onNestedPreScroll(android.view.View,int,int,int[],int) -> a
    592:598:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> a
    656:658:boolean shouldHideActionBarOnFling(float,float) -> a
    681:693:void initFeature(int) -> a
    744:745:boolean isOverflowMenuShowPending() -> a
    768:770:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    481:481:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> b
    738:739:boolean isOverflowMenuShowing() -> b
    756:757:boolean hideOverflowMenu() -> c
    337:337:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    750:751:boolean showOverflowMenu() -> d
    453:462:void draw(android.graphics.Canvas) -> draw
    762:764:void setMenuPrepared() -> e
    732:733:boolean canShowOverflowMenu() -> f
    289:317:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    786:788:void dismissPopups() -> g
    56:56:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    322:322:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    56:56:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    327:327:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    332:332:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    617:617:int getActionBarHideOffset() -> getActionBarHideOffset
    580:580:int getNestedScrollAxes() -> getNestedScrollAxes
    675:676:java.lang.CharSequence getTitle() -> getTitle
    628:633:void haltActionBarHideOffsetAnimations() -> h
    195:195:boolean isInOverlayMode() -> i
    584:589:void pullChildren() -> j
    651:653:void addActionBarHideOffset() -> k
    641:643:void postAddActionBarHideOffset() -> l
    636:638:void postRemoveActionBarHideOffset() -> m
    646:648:void removeActionBarHideOffset() -> n
    225:228:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    164:166:void onDetachedFromWindow() -> onDetachedFromWindow
    427:449:void onLayout(boolean,int,int,int,int) -> onLayout
    342:423:void onMeasure(int,int) -> onMeasure
    556:557:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    575:575:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    571:571:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    536:538:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    525:531:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    517:518:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    542:552:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    232:253:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    257:262:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    621:625:void setActionBarHideOffset(int) -> setActionBarHideOffset
    169:180:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    199:200:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    603:610:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    714:716:void setIcon(int) -> setIcon
    720:722:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    726:728:void setLogo(int) -> setLogo
    183:192:void setOverlayMode(boolean) -> setOverlayMode
    221:221:void setShowingForActionMode(boolean) -> setShowingForActionMode
    698:698:void setUiOptions(int) -> setUiOptions
    663:665:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    669:671:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    466:466:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$a:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
    98:98:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    107:109:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    101:103:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$b:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> d
    112:112:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    115:118:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$c:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> d
    121:121:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    124:128:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> androidx.appcompat.widget.ActionBarOverlayLayout$d:
    void enableContentAnimations(boolean) -> a
    void onWindowVisibilityChanged(int) -> a
    void showForSystem() -> a
    void onContentScrollStarted() -> b
    void hideForSystem() -> c
    void onContentScrollStopped() -> d
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$e:
    792:793:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    796:797:void <init>(int,int) -> <init>
    800:801:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    boolean mPendingOverflowIconSet -> o
    boolean mReserveOverflow -> p
    androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> E
    boolean mMaxItemsSet -> u
    int mOpenSubMenuId -> F
    boolean mStrictWidthLimit -> v
    android.util.SparseBooleanArray mActionButtonGroups -> z
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> m
    boolean mWidthLimitSet -> w
    boolean mExpandedActionViewsExclusive -> x
    boolean mReserveOverflowSet -> q
    androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> D
    androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> B
    int mMinCellSize -> y
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> A
    int mMaxItems -> t
    android.graphics.drawable.Drawable mPendingOverflowIcon -> n
    int mWidthLimit -> r
    int mActionItemWidthLimit -> s
    androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> C
    87:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> a
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> a
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> a
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> a
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> a
    226:271:void updateMenuView(boolean) -> a
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> a
    552:554:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    565:577:void onRestoreInstanceState(android.os.Parcelable) -> a
    590:592:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> a
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> b
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> b
    417:547:boolean flagActionItems() -> b
    581:587:void onSubUiVisibilityChanged(boolean) -> b
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> c
    158:159:void setExpandedActionViewsExclusive(boolean) -> c
    558:560:android.os.Parcelable onSaveInstanceState() -> c
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> d
    148:150:void setReserveOverflow(boolean) -> d
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> e
    377:379:boolean dismissPopupMenus() -> e
    54:54:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> f
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> f
    358:369:boolean hideOverflowMenu() -> g
    388:392:boolean hideSubMenus() -> h
    403:403:boolean isOverflowMenuShowPending() -> i
    399:399:boolean isOverflowMenuShowing() -> j
    336:349:boolean showOverflowMenu() -> k
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$a:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    738:748:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    752:756:void onDismiss() -> d
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$b:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
    805:806:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    810:810:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$c:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup -> d
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> e
    787:789:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    793:801:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$d:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> f
    633:672:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    692:692:boolean needsDividerAfter() -> b
    687:687:boolean needsDividerBefore() -> c
    676:682:boolean performClick() -> performClick
    697:714:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$d$a:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> m
    643:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    646:650:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    655:656:boolean onForwardingStarted() -> b
    664:669:boolean onForwardingStopped() -> c
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$e:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    720:724:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    728:734:void onDismiss() -> d
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$f:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> d
    760:761:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    765:769:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    774:781:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    int openSubMenuId -> d
    615:615:void <clinit>() -> <clinit>
    598:599:void <init>() -> <init>
    601:603:void <init>(android.os.Parcel) -> <init>
    607:607:int describeContents() -> describeContents
    612:613:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$a:
    616:616:void <init>() -> <init>
    616:616:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    619:619:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    616:616:java.lang.Object[] newArray(int) -> newArray
    624:624:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    androidx.appcompat.widget.ActionMenuPresenter mPresenter -> w
    androidx.appcompat.view.menu.MenuBuilder mMenu -> s
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> y
    boolean mFormatItems -> z
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> D
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> x
    boolean mReserveOverflow -> v
    int mPopupTheme -> u
    int mMinCellSize -> B
    android.content.Context mPopupContext -> t
    int mGeneratedItemPadding -> C
    int mFormatItemsWidth -> A
    76:77:void <init>(android.content.Context) -> <init>
    80:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    404:434:int measureChildForCells(android.view.View,int,int,int,int) -> a
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    178:387:void onMeasureExactFormat(int,int) -> c
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> d
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> d
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> e
    700:700:boolean hideOverflowMenu() -> f
    716:716:boolean isOverflowMenuShowPending() -> g
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    710:710:boolean isOverflowMenuShowing() -> h
    572:572:boolean isOverflowReserved() -> i
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> j
    691:691:boolean showOverflowMenu() -> k
    128:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    439:540:void onLayout(boolean,int,int,int,int) -> onLayout
    147:174:void onMeasure(int,int) -> onMeasure
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    141:142:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    97:105:void setPopupTheme(int) -> setPopupTheme
    122:124:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> androidx.appcompat.widget.ActionMenuView$a:
    boolean needsDividerAfter() -> b
    boolean needsDividerBefore() -> c
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$b:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    boolean expandable -> f
    int cellsUsed -> d
    boolean preventEdgeOffset -> g
    int extraPixels -> e
    boolean expanded -> h
    boolean isOverflowButton -> c
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$c:
    androidx.appcompat.widget.ActionMenuView this$0 -> d
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:780:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> androidx.appcompat.widget.ActionMenuView$d:
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.c:
    boolean mCanReadHistoricalData -> i
    androidx.appcompat.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> g
    boolean mReadShareHistoryCalled -> j
    int mHistoryMaxSize -> h
    boolean mHistoricalRecordsChanged -> k
    boolean mReloadActivities -> l
    java.lang.String LOG_TAG -> n
    android.content.Context mContext -> d
    java.util.List mActivities -> b
    android.content.Intent mIntent -> f
    java.util.List mHistoricalRecords -> c
    java.lang.Object mInstanceLock -> a
    androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> m
    java.lang.String mHistoryFileName -> e
    157:223:void <clinit>() -> <clinit>
    395:398:int getActivityCount() -> a
    424:435:int getActivityIndex(android.content.pm.ResolveInfo) -> a
    457:488:android.content.Intent chooseActivity(int) -> a
    727:735:boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) -> a
    410:413:android.content.pm.ResolveInfo getActivity(int) -> b
    512:517:android.content.pm.ResolveInfo getDefaultActivity() -> b
    532:553:void setDefaultActivity(int) -> c
    641:644:int getHistorySize() -> c
    654:661:void ensureConsistentState() -> d
    687:699:boolean loadActivitiesIfNeeded() -> e
    566:567:void persistHistoricalDataIfNeeded() -> f
    742:753:void pruneExcessiveHistoricalRecordsIfNeeded() -> g
    710:717:boolean readHistoricalDataIfNeeded() -> h
    964:971:void readHistoricalDataImpl() -> i
    671:677:boolean sortActivitiesIfNeeded() -> j
    497:499:void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient -> androidx.appcompat.widget.c$a:
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo -> androidx.appcompat.widget.c$b:
    float weight -> e
    android.content.pm.ResolveInfo resolveInfo -> d
    869:871:void <init>(android.content.pm.ResolveInfo) -> <init>
    898:898:int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    852:852:int compareTo(java.lang.Object) -> compareTo
    880:893:boolean equals(java.lang.Object) -> equals
    875:875:int hashCode() -> hashCode
    903:908:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter -> androidx.appcompat.widget.c$c:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord -> androidx.appcompat.widget.c$d:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    783:784:void <init>(java.lang.String,long,float) -> <init>
    793:797:void <init>(android.content.ComponentName,long,float) -> <init>
    811:834:boolean equals(java.lang.Object) -> equals
    801:806:int hashCode() -> hashCode
    839:845:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener -> androidx.appcompat.widget.c$e:
    boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> a
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask -> androidx.appcompat.widget.c$f:
    androidx.appcompat.widget.ActivityChooserModel this$0 -> a
    1039:1040:void <init>(androidx.appcompat.widget.ActivityChooserModel) -> <init>
    1037:1037:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1045:1054:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    android.widget.FrameLayout mExpandActivityOverflowButton -> h
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> q
    int mListPopupMaxWidth -> l
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> g
    android.widget.FrameLayout mDefaultActivityButton -> j
    androidx.core.view.ActionProvider mProvider -> m
    android.database.DataSetObserver mModelDataSetObserver -> n
    boolean mIsSelectingDefaultActivity -> r
    boolean mIsAttachedToWindow -> t
    android.widget.ImageView mExpandActivityOverflowButtonImage -> i
    androidx.appcompat.widget.ListPopupWindow mListPopupWindow -> p
    android.widget.ImageView mDefaultActivityButtonImage -> k
    androidx.appcompat.widget.ActivityChooserView$Callbacks mCallbacks -> e
    int mDefaultActionButtonContentDescription -> u
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> o
    androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> d
    int mInitialActivityCount -> s
    android.view.View mActivityChooserContent -> f
    200:201:void <init>(android.content.Context) -> <init>
    210:211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    221:292:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    365:366:void showPopupUnchecked(int) -> a
    410:417:boolean dismissPopup() -> a
    426:426:boolean isShowingPopup() -> b
    351:352:boolean showPopup() -> c
    539:567:void updateAppearance() -> d
    479:479:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    523:531:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    431:437:void onAttachedToWindow() -> onAttachedToWindow
    441:454:void onDetachedFromWindow() -> onDetachedFromWindow
    472:476:void onLayout(boolean,int,int,int,int) -> onLayout
    458:468:void onMeasure(int,int) -> onMeasure
    299:304:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    514:515:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    332:334:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    318:319:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    500:501:void setInitialActivityCount(int) -> setInitialActivityCount
    488:489:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    342:343:void setProvider(androidx.core.view.ActionProvider) -> setProvider
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$a:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    134:134:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    138:140:void onChanged() -> onChanged
    143:145:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$b:
    androidx.appcompat.widget.ActivityChooserView this$0 -> d
    148:148:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    151:161:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$c:
    250:250:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    253:255:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$d:
    androidx.appcompat.widget.ActivityChooserView this$0 -> m
    257:257:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    260:260:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    265:266:boolean onForwardingStarted() -> b
    271:272:boolean onForwardingStopped() -> c
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$e:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    281:281:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    284:286:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$f:
    androidx.appcompat.widget.ActivityChooserModel mDataModel -> d
    boolean mShowDefaultActivity -> f
    boolean mHighlightDefaultActivity -> g
    int mMaxActivityCount -> e
    boolean mShowFooterView -> h
    androidx.appcompat.widget.ActivityChooserView this$0 -> i
    685:686:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    689:698:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> a
    813:817:void setMaxActivityCount(int) -> a
    824:828:void setShowFooterView(boolean) -> a
    831:831:int getActivityCount() -> a
    844:850:void setShowDefaultActivity(boolean,boolean) -> a
    839:839:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> b
    820:820:android.content.pm.ResolveInfo getDefaultActivity() -> c
    835:835:int getHistorySize() -> d
    853:853:boolean getShowDefaultActivity() -> e
    791:809:int measureContentWidth() -> f
    716:725:int getCount() -> getCount
    730:738:java.lang.Object getItem(int) -> getItem
    746:746:long getItemId(int) -> getItemId
    702:705:int getItemViewType(int) -> getItemViewType
    751:782:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    711:711:int getViewTypeCount() -> getViewTypeCount
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$g:
    androidx.appcompat.widget.ActivityChooserView this$0 -> d
    575:576:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    654:657:void notifyOnDismissListener() -> a
    613:626:void onClick(android.view.View) -> onClick
    647:651:void onDismiss() -> onDismiss
    581:608:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    633:639:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> d
    864:864:void <clinit>() -> <clinit>
    869:873:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> a
    217:236:void forceUniformWidth(int,int) -> c
    248:260:int resolveMinimumHeight(android.view.View) -> c
    71:206:boolean tryOnMeasure(int,int) -> d
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    int[] TINT_ATTRS -> f
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> e
    58:58:void <clinit>() -> <clinit>
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    136:136:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:164:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    199:201:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:94:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.d:
    androidx.appcompat.widget.TintInfo mTmpInfo -> f
    androidx.appcompat.widget.TintInfo mInternalBackgroundTint -> d
    androidx.appcompat.widget.TintInfo mBackgroundTint -> e
    android.view.View mView -> a
    androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager -> b
    int mBackgroundResId -> c
    41:44:void <init>(android.view.View) -> <init>
    47:70:void loadFromAttributes(android.util.AttributeSet,int) -> a
    75:81:void onSetBackgroundResource(int) -> a
    84:88:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    104:111:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    118:135:void applySupportBackgroundTint() -> a
    138:148:void setInternalBackgroundTint(android.content.res.ColorStateList) -> a
    91:97:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> b
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> b
    173:192:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> b
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> c
    151:163:boolean shouldApplyFrameworkTintUsingColorFilter() -> d
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> e
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    155:162:void drawableStateChanged() -> drawableStateChanged
    321:328:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    305:312:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    289:296:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    337:344:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    271:280:int getAutoSizeTextType() -> getAutoSizeTextType
    121:121:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    149:149:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    174:176:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    180:182:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    186:190:void onLayout(boolean,int,int,int,int) -> onLayout
    205:209:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    237:246:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    255:262:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    218:225:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    91:95:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    83:87:void setBackgroundResource(int) -> setBackgroundResource
    368:370:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    357:360:void setSupportAllCaps(boolean) -> setSupportAllCaps
    106:109:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    134:137:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    166:170:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    194:201:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> e
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> f
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> d
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    224:231:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    174:174:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:202:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    208:212:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    216:220:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    159:162:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:190:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    int[] TINT_ATTRS -> e
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> d
    40:40:void <clinit>() -> <clinit>
    47:48:void <init>(android.content.Context) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:86:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:70:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    100:102:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:78:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.e:
    android.content.res.ColorStateList mButtonTintList -> b
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    android.widget.CompoundButton mView -> a
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    52:54:void <init>(android.widget.CompoundButton) -> <init>
    57:93:void loadFromAttributes(android.util.AttributeSet,int) -> a
    98:102:void setSupportButtonTintList(android.content.res.ColorStateList) -> a
    109:113:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> a
    130:148:void applyButtonTint() -> a
    151:159:int getCompoundPaddingLeft(int) -> a
    105:105:android.content.res.ColorStateList getSupportButtonTintList() -> b
    116:116:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> c
    120:127:void onSetButtonDrawable() -> d
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.f:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> b
    androidx.appcompat.widget.ResourceManagerInternal mResourceManager -> a
    androidx.appcompat.widget.AppCompatDrawableManager INSTANCE -> c
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> a
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> a
    415:414:void onConfigurationChanged(android.content.Context) -> a
    433:434:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> a
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> a
    397:396:androidx.appcompat.widget.AppCompatDrawableManager get() -> b
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> b
    54:53:void preload() -> c
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.f$a:
    int[] TINT_CHECKABLE_BUTTON_LIST -> f
    int[] TINT_COLOR_CONTROL_NORMAL -> b
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> c
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> d
    int[] TINT_COLOR_CONTROL_STATE_LIST -> e
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> a
    57:126:void <init>() -> <init>
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> a
    232:240:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> a
    244:249:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> a
    291:296:boolean arrayContains(int[],int) -> a
    303:317:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> a
    333:376:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    381:387:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> a
    146:146:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> b
    152:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> b
    254:285:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> b
    134:134:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> c
    183:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> d
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> e
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> f
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    173:180:void drawableStateChanged() -> drawableStateChanged
    139:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    167:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    91:96:android.text.Editable getText() -> getText
    230:231:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    192:192:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    109:113:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    101:105:void setBackgroundResource(int) -> setBackgroundResource
    202:204:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:127:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    152:155:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    184:188:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    212:214:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.g:
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> a
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> e
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:248:void drawableStateChanged() -> drawableStateChanged
    152:152:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:180:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:207:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:235:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:126:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:118:void setBackgroundResource(int) -> setBackgroundResource
    98:102:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:94:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:86:void setImageResource(int) -> setImageResource
    106:110:void setImageURI(android.net.Uri) -> setImageURI
    137:140:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:168:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:195:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:223:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.h:
    androidx.appcompat.widget.TintInfo mTmpInfo -> d
    android.widget.ImageView mView -> a
    androidx.appcompat.widget.TintInfo mInternalImageTint -> b
    androidx.appcompat.widget.TintInfo mImageTint -> c
    45:47:void <init>(android.widget.ImageView) -> <init>
    50:80:void loadFromAttributes(android.util.AttributeSet,int) -> a
    85:96:void setImageResource(int) -> a
    110:116:void setSupportImageTintList(android.content.res.ColorStateList) -> a
    123:130:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> a
    137:158:void applySupportImageTint() -> a
    196:215:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> a
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> b
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> c
    99:106:boolean hasOverlappingRendering() -> d
    174:186:boolean shouldApplyFrameworkTintUsingColorFilter() -> e
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> e
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:259:void drawableStateChanged() -> drawableStateChanged
    162:162:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:190:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:218:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:246:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:136:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:128:void setBackgroundResource(int) -> setBackgroundResource
    108:112:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:104:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:96:void setImageResource(int) -> setImageResource
    116:120:void setImageURI(android.net.Uri) -> setImageURI
    147:150:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:206:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:234:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    int[] TINT_ATTRS -> f
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> e
    55:55:void <clinit>() -> <clinit>
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:133:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:161:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    90:91:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.i:
    boolean mOverlapAnchor -> a
    boolean COMPAT_OVERLAP_ANCHOR -> b
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> a
    90:95:void setSupportOverlapAnchor(boolean) -> a
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.j:
    android.widget.ProgressBar mView -> a
    android.graphics.Bitmap mSampleTile -> b
    int[] TINT_ATTRS -> c
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> a
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    145:145:android.graphics.Bitmap getSampleTile() -> a
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> b
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> e
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> f
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> d
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    225:232:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    175:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    203:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    209:213:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    217:221:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    160:163:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    188:191:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> d
    40:41:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:55:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> d
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:63:void drawableStateChanged() -> drawableStateChanged
    67:69:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:54:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.k:
    android.graphics.drawable.Drawable mTickMark -> e
    boolean mHasTickMarkTintMode -> i
    android.content.res.ColorStateList mTickMarkTintList -> f
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> g
    boolean mHasTickMarkTint -> h
    android.widget.SeekBar mView -> d
    42:44:void <init>(android.widget.SeekBar) -> <init>
    48:74:void loadFromAttributes(android.util.AttributeSet,int) -> a
    77:93:void setTickMark(android.graphics.drawable.Drawable) -> a
    162:182:void drawTickMarks(android.graphics.Canvas) -> a
    151:156:void drawableStateChanged() -> b
    145:148:void jumpDrawablesToCurrentState() -> c
    125:142:void applyTickMarkTint() -> d
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    int mDropDownWidth -> j
    android.graphics.Rect mTempRect -> k
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> f
    android.widget.SpinnerAdapter mTempAdapter -> g
    boolean mPopupSet -> h
    android.content.Context mPopupContext -> e
    androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup -> i
    int[] ATTRS_ANDROID_SPINNERMODE -> l
    78:78:void <clinit>() -> <clinit>
    114:115:void <init>(android.content.Context) -> <init>
    140:141:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:156:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:175:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    203:294:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    550:590:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    599:604:void showPopup() -> a
    543:547:void drawableStateChanged() -> drawableStateChanged
    365:370:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    339:344:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    384:389:int getDropDownWidth() -> getDropDownWidth
    595:595:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    320:325:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    301:301:android.content.Context getPopupContext() -> getPopupContext
    464:464:java.lang.CharSequence getPrompt() -> getPrompt
    508:508:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    537:537:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    411:416:void onDetachedFromWindow() -> onDetachedFromWindow
    428:437:void onMeasure(int,int) -> onMeasure
    617:643:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    609:612:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    420:423:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    441:450:boolean performClick() -> performClick
    76:76:void setAdapter(android.widget.Adapter) -> setAdapter
    396:407:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    477:481:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    469:473:void setBackgroundResource(int) -> setBackgroundResource
    349:355:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    330:335:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    375:380:void setDropDownWidth(int) -> setDropDownWidth
    306:311:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    315:316:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    455:460:void setPrompt(java.lang.CharSequence) -> setPrompt
    493:496:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    522:525:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$a:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> n
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup -> m
    256:256:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    259:259:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    265:268:boolean onForwardingStarted() -> b
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$b:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> d
    624:624:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    627:638:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$c:
    android.widget.ListAdapter mListAdapter -> e
    androidx.appcompat.app.AlertDialog mPopup -> d
    androidx.appcompat.widget.AppCompatSpinner this$0 -> g
    java.lang.CharSequence mPrompt -> f
    848:848:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    869:870:void setAdapter(android.widget.ListAdapter) -> a
    874:875:void setPromptText(java.lang.CharSequence) -> a
    884:899:void show(int,int) -> a
    912:913:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    922:923:void setHorizontalOffset(int) -> a
    937:937:int getHorizontalOffset() -> a
    917:918:void setVerticalOffset(int) -> b
    932:932:int getVerticalOffset() -> b
    927:927:android.graphics.drawable.Drawable getBackground() -> c
    942:943:void setHorizontalOriginalOffset(int) -> c
    864:864:boolean isShowing() -> d
    856:860:void dismiss() -> dismiss
    879:879:java.lang.CharSequence getHintText() -> f
    903:908:void onClick(android.content.DialogInterface,int) -> onClick
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$d:
    android.widget.ListAdapter mListAdapter -> e
    android.widget.SpinnerAdapter mAdapter -> d
    693:715:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    768:772:boolean areAllItemsEnabled() -> areAllItemsEnabled
    719:719:int getCount() -> getCount
    739:739:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    724:724:java.lang.Object getItem(int) -> getItem
    729:729:long getItemId(int) -> getItemId
    792:792:int getItemViewType(int) -> getItemViewType
    734:734:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    797:797:int getViewTypeCount() -> getViewTypeCount
    745:745:boolean hasStableIds() -> hasStableIds
    802:802:boolean isEmpty() -> isEmpty
    782:786:boolean isEnabled(int) -> isEnabled
    750:753:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    757:760:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$e:
    java.lang.CharSequence mHintText -> L
    int mOriginalHorizontalOffset -> O
    androidx.appcompat.widget.AppCompatSpinner this$0 -> P
    android.graphics.Rect mVisibleRect -> N
    android.widget.ListAdapter mAdapter -> M
    958:976:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    952:952:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> a
    980:982:void setAdapter(android.widget.ListAdapter) -> a
    992:993:void setPromptText(java.lang.CharSequence) -> a
    1035:1086:void show(int,int) -> a
    1092:1092:boolean isVisibleToUser(android.view.View) -> b
    1097:1098:void setHorizontalOriginalOffset(int) -> c
    986:986:java.lang.CharSequence getHintText() -> f
    996:1031:void computeContentWidth() -> m
    1102:1102:int getHorizontalOriginalOffset() -> n
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$e$a:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> d
    965:965:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    968:974:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$e$b:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> d
    1061:1061:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1064:1073:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$e$c:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> e
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> d
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1079:1083:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    boolean mShowDropdown -> d
    663:663:void <clinit>() -> <clinit>
    649:650:void <init>(android.os.Parcelable) -> <init>
    653:655:void <init>(android.os.Parcel) -> <init>
    659:661:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$a:
    664:664:void <init>() -> <init>
    664:664:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    666:666:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    664:664:java.lang.Object[] newArray(int) -> newArray
    670:670:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> androidx.appcompat.widget.AppCompatSpinner$f:
    int getHorizontalOffset() -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setHorizontalOffset(int) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show(int,int) -> a
    int getVerticalOffset() -> b
    void setVerticalOffset(int) -> b
    android.graphics.drawable.Drawable getBackground() -> c
    void setHorizontalOriginalOffset(int) -> c
    boolean isShowing() -> d
    java.lang.CharSequence getHintText() -> f
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.l:
    android.widget.TextView mTextView -> a
    android.view.textclassifier.TextClassifier mTextClassifier -> b
    42:44:void <init>(android.widget.TextView) -> <init>
    51:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> a
    62:70:android.view.textclassifier.TextClassifier getTextClassifier() -> a
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.m:
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> i
    boolean mAsyncFontPending -> m
    int mStyle -> j
    int mFontWeight -> k
    androidx.appcompat.widget.TintInfo mDrawableLeftTint -> b
    androidx.appcompat.widget.TintInfo mDrawableTopTint -> c
    androidx.appcompat.widget.TintInfo mDrawableStartTint -> f
    androidx.appcompat.widget.TintInfo mDrawableEndTint -> g
    android.widget.TextView mView -> a
    androidx.appcompat.widget.TintInfo mDrawableRightTint -> d
    androidx.appcompat.widget.TintInfo mDrawableBottomTint -> e
    android.graphics.Typeface mFontTypeface -> l
    androidx.appcompat.widget.TintInfo mDrawableTint -> h
    73:76:void <init>(android.widget.TextView) -> <init>
    80:330:void loadFromAttributes(android.util.AttributeSet,int) -> a
    333:403:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> a
    428:435:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> a
    438:478:void onSetTextAppearance(android.content.Context,int) -> a
    481:482:void setAllCaps(boolean) -> a
    489:504:void applyCompoundDrawablesTints() -> a
    507:510:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> a
    514:521:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> a
    527:530:void onLayout(boolean,int,int,int,int) -> a
    535:540:void setTextSize(int,float) -> a
    559:560:void setAutoSizeTextTypeWithDefaults(int) -> a
    567:569:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> a
    573:574:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> a
    603:609:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> a
    617:623:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> a
    638:670:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    545:546:void autoSizeText() -> b
    555:556:void setTextSizeInternal(int,float) -> b
    590:590:int getAutoSizeMaxTextSize() -> c
    586:586:int getAutoSizeMinTextSize() -> d
    582:582:int getAutoSizeStepGranularity() -> e
    594:594:int[] getAutoSizeTextAvailableSizes() -> f
    578:578:int getAutoSizeTextType() -> g
    599:599:android.content.res.ColorStateList getCompoundDrawableTintList() -> h
    613:613:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> i
    551:551:boolean isAutoSizeEnabled() -> j
    485:486:void onSetCompoundDrawables() -> k
    626:632:void setCompoundTints() -> l
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.m$a:
    androidx.appcompat.widget.AppCompatTextHelper this$0 -> d
    java.lang.ref.WeakReference val$textViewWeak -> c
    int val$style -> b
    int val$fontWeight -> a
    353:353:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    356:363:void onFontRetrieved(android.graphics.Typeface) -> a
    368:368:void onFontRetrievalFailed(int) -> a
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> e
    java.util.concurrent.Future mPrecomputedTextFuture -> g
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> f
    90:91:void <init>(android.content.Context) -> <init>
    94:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:108:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    479:488:void consumeTextFutureAndSetBlocking() -> d
    192:199:void drawableStateChanged() -> drawableStateChanged
    362:369:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    343:350:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    324:331:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    381:388:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    303:312:int getAutoSizeTextType() -> getAutoSizeTextType
    419:419:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    424:424:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    150:150:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    178:178:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    631:631:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    674:674:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    492:493:java.lang.CharSequence getText() -> getText
    520:521:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    451:451:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    393:393:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    203:207:void onLayout(boolean,int,int,int,int) -> onLayout
    547:549:void onMeasure(int,int) -> onMeasure
    222:226:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    262:271:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    284:291:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    239:246:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    120:124:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    112:116:void setBackgroundResource(int) -> setBackgroundResource
    554:558:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    564:568:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    596:600:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    606:615:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    573:577:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    581:590:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    438:440:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    399:404:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    409:415:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    429:430:void setLineHeight(int) -> setLineHeight
    475:476:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    135:138:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    163:166:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    654:656:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    694:696:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    184:188:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    502:504:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    539:543:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    462:463:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    211:218:void setTextSize(int,float) -> setTextSize
    700:706:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.n:
    float mAutoSizeMaxTextSizeInPx -> e
    float mAutoSizeMinTextSizeInPx -> d
    float mAutoSizeStepGranularityInPx -> c
    android.content.Context mContext -> j
    android.graphics.RectF TEMP_RECTF -> k
    int mAutoSizeTextType -> a
    int[] mAutoSizeTextSizesInPx -> f
    boolean mHasPresetAutoSizeValues -> g
    android.widget.TextView mTextView -> i
    java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache -> m
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> l
    boolean mNeedsAutoSizeText -> b
    android.text.TextPaint mTempTextPaint -> h
    63:76:void <clinit>() -> <clinit>
    105:108:void <init>(android.widget.TextView) -> <init>
    111:186:void loadFromAttributes(android.util.AttributeSet,int) -> a
    271:287:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> a
    314:344:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> a
    427:437:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> a
    453:477:int[] cleanupAutoSizePresetSizes(int[]) -> a
    491:492:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> a
    546:581:void autoSizeText() -> a
    595:600:void setTextSizeInternal(int,float) -> a
    603:634:void setRawTextSize(float) -> a
    641:643:int findLargestTextSizeWhichFits(android.graphics.RectF) -> a
    666:673:void initTempTextPaint(int) -> a
    678:683:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> a
    688:716:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> a
    769:776:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> a
    807:815:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> a
    842:854:java.lang.reflect.Field getTextViewField(java.lang.String) -> a
    204:234:void setAutoSizeTextTypeWithDefaults(int) -> b
    410:410:int getAutoSizeMaxTextSize() -> b
    723:746:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> b
    752:758:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> b
    785:797:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> b
    822:835:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> b
    394:394:int getAutoSizeMinTextSize() -> c
    378:378:int getAutoSizeStepGranularity() -> d
    423:423:int[] getAutoSizeTextAvailableSizes() -> e
    364:364:int getAutoSizeTextType() -> f
    866:866:boolean isAutoSizeEnabled() -> g
    584:590:void clearAutoSizeConfiguration() -> h
    516:536:boolean setupAutoSizeText() -> i
    440:448:boolean setupAutoSizeUniformPresetSizesConfiguration() -> j
    875:875:boolean supportsAutoSizeText() -> k
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> d
    38:39:void <init>(android.content.Context) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    int mMinimumHeight -> f
    int mLastWidthSize -> e
    boolean mAllowStacking -> d
    50:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    140:145:int getNextVisibleChildIndex(int) -> a
    171:171:boolean isStacked() -> a
    150:150:int getMinimumHeight() -> getMinimumHeight
    68:137:void onMeasure(int,int) -> onMeasure
    57:64:void setAllowStacking(boolean) -> setAllowStacking
    154:168:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    android.util.TypedValue mMinWidthMajor -> d
    android.graphics.Rect mDecorPadding -> j
    android.util.TypedValue mFixedHeightMinor -> i
    android.util.TypedValue mFixedHeightMajor -> h
    android.util.TypedValue mFixedWidthMinor -> g
    android.util.TypedValue mFixedWidthMajor -> f
    androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener -> k
    android.util.TypedValue mMinWidthMinor -> e
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:77:void dispatchFitSystemWindows(android.graphics.Rect) -> a
    91:95:void setDecorPadding(int,int,int,int) -> a
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:210:void onAttachedToWindow() -> onAttachedToWindow
    214:218:void onDetachedFromWindow() -> onDetachedFromWindow
    99:172:void onMeasure(int,int) -> onMeasure
    80:81:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> androidx.appcompat.widget.ContentFrameLayout$a:
    void onAttachedFromWindow() -> a
androidx.appcompat.widget.DecorContentParent -> androidx.appcompat.widget.o:
    void initFeature(int) -> a
    boolean isOverflowMenuShowPending() -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    boolean isOverflowMenuShowing() -> b
    boolean hideOverflowMenu() -> c
    boolean showOverflowMenu() -> d
    void setMenuPrepared() -> e
    boolean canShowOverflowMenu() -> f
    void dismissPopups() -> g
androidx.appcompat.widget.DecorToolbar -> androidx.appcompat.widget.p:
    boolean isOverflowMenuShowPending() -> a
    void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> a
    void setHomeButtonEnabled(boolean) -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    void setVisibility(int) -> a
    androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    boolean isOverflowMenuShowing() -> b
    void setCollapsible(boolean) -> b
    void setLogo(int) -> b
    boolean hideOverflowMenu() -> c
    void setDisplayOptions(int) -> c
    boolean showOverflowMenu() -> d
    void setMenuPrepared() -> e
    boolean canShowOverflowMenu() -> f
    void dismissPopupMenus() -> g
    int getDisplayOptions() -> h
    android.view.Menu getMenu() -> i
    android.view.ViewGroup getViewGroup() -> j
    android.content.Context getContext() -> k
    int getNavigationMode() -> l
    void initProgress() -> m
    boolean hasExpandedActionView() -> n
    void initIndeterminateProgress() -> o
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    40:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:49:void <init>(android.content.Context) -> <init>
    53:80:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.q:
    int[] EMPTY_STATE_SET -> b
    int[] CHECKED_STATE_SET -> a
    android.graphics.Rect INSETS_NONE -> c
    java.lang.Class sInsetsClazz -> d
    45:64:void <clinit>() -> <clinit>
    133:167:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> a
    191:192:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> a
    122:126:void fixDrawable(android.graphics.drawable.Drawable) -> b
    175:185:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> c
    73:113:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> d
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.r:
    boolean mHijackFocus -> m
    boolean mDrawsInPressedState -> n
    androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation -> o
    int mSelectionBottomPadding -> h
    int mMotionPosition -> i
    boolean mListSelectionHidden -> l
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> q
    int mSelectionLeftPadding -> e
    android.graphics.Rect mSelectorRect -> d
    androidx.core.widget.ListViewAutoScrollHelper mScrollHelper -> p
    java.lang.reflect.Field mIsChildViewEnabled -> j
    androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector -> k
    118:128:void <init>(android.content.Context,boolean) -> <init>
    290:369:int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    482:534:boolean onForwardedEvent(android.view.MotionEvent,int) -> a
    542:544:void clickPressedItem(android.view.View,int) -> a
    565:572:void drawSelectorCompat(android.graphics.Canvas) -> a
    575:581:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> a
    604:626:void positionSelectorCompat(int,android.view.View) -> a
    629:643:void clearPressedItem() -> a
    646:690:void setPressedItem(android.view.View,int,float,float) -> a
    586:601:void positionSelectorLikeFocusCompat(int,android.view.View) -> b
    693:693:boolean touchModeDrawsInPressedStateCompat() -> b
    558:562:void updateSelectorStateCompat() -> c
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    471:473:void onDetachedFromWindow() -> onDetachedFromWindow
    430:466:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    554:555:void setListSelectionHidden(boolean) -> setListSelectionHidden
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:376:void setSelectorEnabled(boolean) -> setSelectorEnabled
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.r$a:
    boolean mEnabled -> e
    382:384:void <init>(android.graphics.drawable.Drawable) -> <init>
    387:388:void setEnabled(boolean) -> a
    400:403:void draw(android.graphics.Canvas) -> draw
    407:410:void setHotspot(float,float) -> setHotspot
    414:417:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:395:boolean setState(int[]) -> setState
    421:424:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.r$b:
    androidx.appcompat.widget.DropDownListView this$0 -> d
    700:701:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:713:void cancel() -> a
    716:717:void post() -> b
    706:708:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> d
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> d
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsViewGroup -> androidx.appcompat.widget.s:
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> androidx.appcompat.widget.s$a:
    void onFitSystemWindows(android.graphics.Rect) -> a
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.t:
    java.lang.Runnable mTriggerLongPress -> i
    java.lang.Runnable mDisallowIntercept -> h
    boolean mForwarding -> j
    int mActivePointerId -> k
    float mScaledTouchSlop -> d
    int mLongPressTimeout -> f
    int mTapTimeout -> e
    android.view.View mSrc -> g
    int[] mTmpLocation -> l
    68:78:void <init>(android.view.View) -> <init>
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    259:262:boolean onTouchForwarded(android.view.MotionEvent) -> a
    288:288:boolean pointInView(android.view.View,float,float,float) -> a
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> a
    boolean onForwardingStarted() -> b
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> b
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> b
    156:160:boolean onForwardingStopped() -> c
    226:232:void onLongPress() -> d
    216:223:void clearCallbacks() -> e
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.t$a:
    androidx.appcompat.widget.ForwardingListener this$0 -> d
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.t$b:
    androidx.appcompat.widget.ForwardingListener this$0 -> d
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    int mDividerWidth -> o
    float mWeightSum -> j
    int mGravity -> h
    boolean mUseLargestChild -> k
    int mTotalLength -> i
    int mBaselineChildTop -> f
    int mOrientation -> g
    int mBaselineAlignedChildIndex -> e
    android.graphics.drawable.Drawable mDivider -> n
    int mDividerPadding -> r
    int[] mMaxAscent -> l
    int mDividerHeight -> p
    boolean mBaselineAligned -> d
    int[] mMaxDescent -> m
    int mShowDividers -> q
    149:150:void <init>(android.content.Context) -> <init>
    153:154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    157:189:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    326:364:void drawDividersHorizontal(android.graphics.Canvas) -> a
    367:370:void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    509:509:android.view.View getVirtualChildAt(int) -> a
    932:1315:void measureHorizontal(int,int) -> a
    1351:1351:int getChildrenSkipCount(android.view.View,int) -> a
    1381:1383:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> a
    1393:1393:int getLocationOffset(android.view.View) -> a
    1525:1646:void layoutHorizontal(int,int,int,int) -> a
    1649:1650:void setChildFrame(android.view.View,int,int,int,int) -> a
    299:323:void drawDividersVertical(android.graphics.Canvas) -> b
    373:376:void drawVerticalDivider(android.graphics.Canvas,int) -> b
    570:584:boolean hasDividerBeforeChildAt(int) -> b
    599:895:void measureVertical(int,int) -> b
    1405:1405:int getNextLocationOffset(android.view.View) -> b
    1430:1510:void layoutVertical(int,int,int,int) -> b
    1321:1340:void forceUniformHeight(int,int) -> c
    1362:1362:int measureNullChild(int) -> c
    1755:1755:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    899:918:void forceUniformWidth(int,int) -> d
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1738:1743:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1725:1725:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1748:1748:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    427:432:int getBaseline() -> getBaseline
    484:484:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    225:225:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    272:272:int getDividerPadding() -> getDividerPadding
    282:282:int getDividerWidth() -> getDividerWidth
    1704:1704:int getGravity() -> getGravity
    1671:1671:int getOrientation() -> getOrientation
    216:216:int getShowDividers() -> getShowDividers
    522:522:int getVirtualChildCount() -> getVirtualChildCount
    533:533:float getWeightSum() -> getWeightSum
    287:296:void onDraw(android.graphics.Canvas) -> onDraw
    1760:1762:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1766:1768:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1410:1415:void onLayout(boolean,int,int,int,int) -> onLayout
    554:559:void onMeasure(int,int) -> onMeasure
    396:397:void setBaselineAligned(boolean) -> setBaselineAligned
    492:494:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    236:249:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    261:262:void setDividerPadding(int) -> setDividerPadding
    1683:1695:void setGravity(int) -> setGravity
    1708:1713:void setHorizontalGravity(int) -> setHorizontalGravity
    422:423:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1658:1662:void setOrientation(int) -> setOrientation
    199:203:void setShowDividers(int) -> setShowDividers
    1716:1721:void setVerticalGravity(int) -> setVerticalGravity
    549:550:void setWeightSum(float) -> setWeightSum
    207:207:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$a:
    float weight -> a
    int gravity -> b
    1793:1801:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1807:1809:void <init>(int,int) -> <init>
    1830:1831:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> K
    boolean mOverlapAnchor -> m
    android.database.DataSetObserver mObserver -> u
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> x
    int mDropDownVerticalOffset -> j
    java.lang.reflect.Method sClipToWindowEnabledMethod -> I
    int mDropDownWidth -> h
    androidx.appcompat.widget.DropDownListView mDropDownList -> f
    android.graphics.Rect mEpicenterBounds -> F
    boolean mForceIgnoreOutsideTouch -> q
    android.view.View mDropDownAnchorView -> v
    android.os.Handler mHandler -> D
    boolean mModal -> G
    boolean mOverlapAnchorSet -> n
    int mDropDownGravity -> o
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> y
    androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> z
    androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector -> C
    boolean mDropDownAlwaysVisible -> p
    int mDropDownWindowLayoutType -> k
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> J
    int mDropDownHorizontalOffset -> i
    boolean mDropDownVerticalOffsetSet -> l
    int mDropDownHeight -> g
    android.view.View mPromptView -> s
    android.graphics.Rect mTempRect -> E
    android.content.Context mContext -> d
    android.widget.PopupWindow mPopup -> H
    android.widget.ListAdapter mAdapter -> e
    android.graphics.drawable.Drawable mDropDownListHighlight -> w
    androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> A
    int mPromptPosition -> t
    int mListItemExpandMaximum -> r
    androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener -> B
    84:102:void <clinit>() -> <clinit>
    218:219:void <init>(android.content.Context) -> <init>
    242:243:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    255:272:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    281:294:void setAdapter(android.widget.ListAdapter) -> a
    329:331:void setModal(boolean) -> a
    426:427:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    464:465:void setAnchorView(android.view.View) -> a
    471:471:int getHorizontalOffset() -> a
    480:481:void setHorizontalOffset(int) -> a
    511:512:void setEpicenterBounds(android.graphics.Rect) -> a
    940:940:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    1431:1440:int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    487:490:int getVerticalOffset() -> b
    499:501:void setVerticalOffset(int) -> b
    1328:1330:void setOverlapAnchor(boolean) -> b
    417:417:android.graphics.drawable.Drawable getBackground() -> c
    1421:1428:void setPopupClipToScreenEnabled(boolean) -> c
    435:436:void setAnimationStyle(int) -> d
    850:850:boolean isShowing() -> d
    762:767:void dismiss() -> dismiss
    559:566:void setContentWidth(int) -> e
    657:755:void show() -> e
    532:533:void setDropDownGravity(int) -> f
    801:802:void setInputMethodMode(int) -> g
    936:936:android.widget.ListView getListView() -> g
    306:307:void setPromptPosition(int) -> h
    836:843:void clearListSelection() -> h
    454:454:android.view.View getAnchorView() -> i
    820:829:void setSelection(int) -> i
    539:539:int getWidth() -> j
    549:550:void setWidth(int) -> j
    858:858:boolean isInputMethodNotNeeded() -> k
    339:339:boolean isModal() -> l
    1146:1287:int buildDropDown() -> m
    779:786:void removePromptView() -> n
    775:776:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    613:614:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    624:625:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$a:
    androidx.appcompat.widget.ListPopupWindow this$0 -> d
    1157:1157:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1161:1165:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$b:
    androidx.appcompat.widget.ListPopupWindow this$0 -> d
    1176:1176:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1181:1188:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1192:1192:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$c:
    androidx.appcompat.widget.ListPopupWindow this$0 -> d
    1351:1352:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1356:1357:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$d:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1333:1334:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1338:1342:void onChanged() -> onChanged
    1346:1347:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$e:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1397:1398:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1404:1404:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1408:1413:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$f:
    androidx.appcompat.widget.ListPopupWindow this$0 -> d
    1376:1377:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1381:1392:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$g:
    androidx.appcompat.widget.ListPopupWindow this$0 -> d
    1361:1362:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1366:1372:void run() -> run
androidx.appcompat.widget.MenuItemHoverListener -> androidx.appcompat.widget.u:
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> L
    java.lang.reflect.Method sSetTouchModalMethod -> M
    60:65:void <clinit>() -> <clinit>
    70:71:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    75:77:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    81:84:void setEnterTransition(java.lang.Object) -> a
    93:94:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> a
    113:116:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    87:90:void setExitTransition(java.lang.Object) -> b
    121:124:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
    101:108:void setTouchModal(boolean) -> c
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    android.view.MenuItem mHoveredMenuItem -> u
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> t
    int mAdvanceKey -> r
    int mRetreatKey -> s
    138:150:void <init>(android.content.Context,boolean) -> <init>
    129:129:int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    129:129:boolean onForwardedEvent(android.view.MotionEvent,int) -> a
    129:129:boolean hasFocus() -> hasFocus
    129:129:boolean hasWindowFocus() -> hasWindowFocus
    129:129:boolean isFocused() -> isFocused
    129:129:boolean isInTouchMode() -> isInTouchMode
    184:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    162:178:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    129:129:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    153:154:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    129:129:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.v:
    androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE -> j
    androidx.appcompat.widget.ResourceManagerInternal INSTANCE -> i
    androidx.collection.SparseArrayCompat mKnownDrawableIdTags -> c
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> h
    androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks -> g
    boolean mHasCheckedVectorDrawableSetup -> f
    java.util.WeakHashMap mDrawableCaches -> d
    java.util.WeakHashMap mTintLists -> a
    androidx.collection.ArrayMap mDelegates -> b
    android.util.TypedValue mTypedValue -> e
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    94:93:androidx.appcompat.widget.ResourceManagerInternal get() -> a
    105:110:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> a
    128:127:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> a
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    137:136:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> a
    159:158:void onConfigurationChanged(android.content.Context) -> a
    167:167:long createCacheKey(android.util.TypedValue) -> a
    200:225:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> a
    315:314:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> a
    336:335:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> a
    351:350:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> a
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    367:371:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> a
    389:389:android.graphics.PorterDuff$Mode getTintMode(int) -> a
    417:426:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> a
    451:471:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> a
    475:476:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> a
    485:484:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> a
    513:513:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> a
    394:393:android.content.res.ColorStateList getTintList(android.content.Context,int) -> b
    497:507:void checkVectorDrawableSetup(android.content.Context) -> b
    172:195:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> c
    408:412:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> d
    229:310:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> e
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.v$a:
    552:552:void <init>() -> <init>
    557:561:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.v$b:
    535:536:void <init>() -> <init>
    542:546:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.v$c:
    431:432:void <init>(int) -> <init>
    435:435:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> a
    439:439:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> a
    443:446:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> b
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> androidx.appcompat.widget.v$d:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> androidx.appcompat.widget.v$e:
    android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> a
    android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> a
    android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> a
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> b
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.v$f:
    518:519:void <init>() -> <init>
    525:529:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.w:
    android.content.res.Resources mResources -> a
    48:50:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:210:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:223:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:217:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:283:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:277:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:236:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.x:
    int mExplicitRight -> f
    int mEnd -> d
    boolean mIsRtl -> g
    int mExplicitLeft -> e
    boolean mIsRelative -> h
    int mRight -> b
    int mStart -> c
    int mLeft -> a
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> a
    68:71:void setAbsolute(int,int) -> a
    74:90:void setDirection(boolean) -> a
    39:39:int getLeft() -> b
    55:65:void setRelative(int,int) -> b
    43:43:int getRight() -> c
    47:47:int getStart() -> d
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> d
    androidx.appcompat.widget.LinearLayoutCompat mTabLayout -> f
    int mSelectedTabIndex -> l
    int mStackedTabMaxWidth -> j
    int mContentHeight -> k
    android.widget.Spinner mTabSpinner -> g
    int mMaxTabWidth -> i
    boolean mAllowCollapse -> h
    androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> e
    android.view.ViewPropertyAnimator mVisibilityAnim -> m
    77:77:void <clinit>() -> <clinit>
    82:93:void <init>(android.content.Context) -> <init>
    214:220:android.widget.Spinner createSpinner() -> a
    260:273:void animateToTab(int) -> a
    293:306:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> a
    204:210:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> b
    146:146:boolean isCollapsed() -> c
    154:170:void performCollapse() -> d
    173:179:boolean performExpand() -> e
    277:282:void onAttachedToWindow() -> onAttachedToWindow
    225:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:290:void onDetachedFromWindow() -> onDetachedFromWindow
    371:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:138:void onMeasure(int,int) -> onMeasure
    378:378:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    150:151:void setAllowCollapse(boolean) -> setAllowCollapse
    199:201:void setContentHeight(int) -> setContentHeight
    183:196:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$a:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> e
    android.view.View val$tabView -> d
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:270:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$b:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> d
    526:527:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    531:531:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    541:541:long getItemId(int) -> getItemId
    546:551:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$c:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> d
    556:557:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    561:568:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$d:
    android.view.View mCustomView -> h
    android.widget.ImageView mIconView -> g
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> i
    int[] BG_ATTRS -> d
    androidx.appcompat.app.ActionBar$Tab mTab -> e
    android.widget.TextView mTextView -> f
    394:410:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    413:415:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> a
    521:521:androidx.appcompat.app.ActionBar$Tab getTab() -> a
    453:518:void update() -> b
    428:431:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    435:439:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    443:450:void onMeasure(int,int) -> onMeasure
    419:424:void setSelected(boolean) -> setSelected
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$e:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> c
    571:572:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    598:599:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:594:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    584:586:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    android.widget.ImageView mGoButton -> x
    boolean mVoiceButtonEnabled -> d0
    androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter -> U
    androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> s
    boolean mClearingFocus -> b0
    android.view.View mSearchEditFrame -> t
    boolean mIconified -> T
    java.lang.Runnable mUpdateDrawableStateRunnable -> k0
    android.view.View$OnClickListener mOnClickListener -> n0
    int[] mTemp -> E
    android.content.Intent mVoiceAppSearchIntent -> L
    android.widget.ImageView mSearchButton -> w
    android.text.TextWatcher mTextWatcher -> s0
    int mCollapsedImeOptions -> h0
    android.graphics.Rect mSearchSrcTextViewBounds -> C
    android.app.SearchableInfo mSearchable -> i0
    java.lang.CharSequence mOldQueryText -> e0
    androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> B
    android.view.View mDropDownAnchor -> A
    androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener -> O
    java.lang.CharSequence mQueryHint -> W
    androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> t0
    android.content.Intent mVoiceWebSearchIntent -> K
    boolean mExpandedInActionView -> g0
    android.graphics.drawable.Drawable mSearchHintIcon -> H
    boolean mQueryRefinement -> a0
    android.widget.ImageView mVoiceButton -> z
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> q0
    int mSuggestionRowLayout -> I
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> P
    boolean mSubmitButtonEnabled -> V
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> D
    android.view.View mSubmitArea -> v
    java.lang.Runnable mReleaseCursorRunnable -> l0
    android.os.Bundle mAppSearchData -> j0
    java.util.WeakHashMap mOutsideDrawablesCache -> m0
    androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> N
    android.widget.ImageView mCloseButton -> y
    int mMaxWidth -> c0
    android.view.View$OnKeyListener mTextKeyListener -> o0
    int mSuggestionCommitIconResId -> J
    android.view.View mSearchPlate -> u
    boolean mIconifiedByDefault -> S
    int[] mTemp2 -> F
    java.lang.CharSequence mUserQuery -> f0
    java.lang.CharSequence mDefaultQueryHint -> M
    android.widget.ImageView mCollapsedIcon -> G
    android.view.View$OnClickListener mOnSearchClickListener -> R
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> r0
    androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> Q
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> p0
    175:175:void <clinit>() -> <clinit>
    266:267:void <init>(android.content.Context) -> <init>
    270:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    274:386:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    570:580:void setQuery(java.lang.CharSequence,boolean) -> a
    850:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> a
    913:919:void updateSubmitButton(boolean) -> a
    972:973:void onQueryRefine(java.lang.CharSequence) -> a
    1042:1081:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    1387:1392:boolean onItemClicked(int,int,java.lang.String) -> a
    1493:1503:void launchIntent(android.content.Intent) -> a
    1515:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    1536:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    1581:1636:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    1655:1691:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    1701:1701:boolean isLandscapeMode(android.content.Context) -> a
    868:889:void updateViewsVisibility(boolean) -> b
    1173:1184:void onTextChanged(java.lang.CharSequence) -> b
    1290:1297:void onActionViewExpanded() -> b
    1476:1486:boolean launchSuggestion(int,int,java.lang.String) -> b
    1566:1570:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    1087:1088:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> c
    1152:1158:void updateVoiceButton(boolean) -> c
    1278:1283:void onActionViewCollapsed() -> c
    496:501:void clearFocus() -> clearFocus
    1363:1384:void adjustDropDownSizeAndPosition() -> d
    1398:1401:boolean onItemSelected(int) -> d
    1443:1463:void rewriteQueryFromSuggestion(int) -> e
    1696:1698:void forceSuggestionQuery() -> e
    682:682:boolean isIconified() -> f
    1205:1222:void onCloseClicked() -> g
    451:451:int getImeOptions() -> getImeOptions
    473:473:int getInputType() -> getInputType
    776:776:int getMaxWidth() -> getMaxWidth
    863:863:int getPreferredHeight() -> getPreferredHeight
    858:858:int getPreferredWidth() -> getPreferredWidth
    558:558:java.lang.CharSequence getQuery() -> getQuery
    618:625:java.lang.CharSequence getQueryHint() -> getQueryHint
    393:393:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    389:389:int getSuggestionRowLayout() -> getSuggestionRowLayout
    754:754:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    1225:1231:void onSearchClicked() -> h
    1187:1198:void onSubmitQuery() -> i
    1257:1264:void onTextFocusChanged() -> j
    1235:1254:void onVoiceClicked() -> k
    948:959:void updateFocusedState() -> l
    1201:1202:void dismissSuggestions() -> m
    892:905:boolean hasVoiceSearch() -> n
    909:909:boolean isSubmitAreaEnabled() -> o
    963:966:void onDetachedFromWindow() -> onDetachedFromWindow
    831:847:void onLayout(boolean,int,int,int,int) -> onLayout
    782:827:void onMeasure(int,int) -> onMeasure
    1352:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1344:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1268:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    944:945:void postUpdateFocusedState() -> p
    932:941:void updateCloseButton() -> q
    1101:1103:void updateQueryHint() -> r
    479:490:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1109:1143:void updateSearchAutoComplete() -> s
    428:429:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    668:673:void setIconified(boolean) -> setIconified
    641:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    440:441:void setImeOptions(int) -> setImeOptions
    463:464:void setInputType(int) -> setInputType
    763:766:void setMaxWidth(int) -> setMaxWidth
    519:520:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    528:529:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    510:511:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    549:550:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    537:538:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    1509:1512:void setQuery(java.lang.CharSequence) -> setQuery
    593:595:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    722:727:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    405:419:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    694:696:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    744:747:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    922:929:void updateSubmitArea() -> t
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$b:
    androidx.appcompat.widget.SearchView this$0 -> d
    177:177:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    180:181:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$a:
    androidx.appcompat.widget.SearchView this$0 -> d
    1708:1708:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1720:1720:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1710:1710:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1715:1716:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$c:
    androidx.appcompat.widget.SearchView this$0 -> d
    184:184:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    187:190:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$d:
    androidx.appcompat.widget.SearchView this$0 -> d
    330:330:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    333:336:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$e:
    androidx.appcompat.widget.SearchView this$0 -> a
    375:375:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    379:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$f:
    androidx.appcompat.widget.SearchView this$0 -> d
    975:975:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    978:989:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$g:
    androidx.appcompat.widget.SearchView this$0 -> d
    997:997:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1001:1031:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$h:
    androidx.appcompat.widget.SearchView this$0 -> a
    1160:1160:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1167:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$i:
    androidx.appcompat.widget.SearchView this$0 -> d
    1406:1406:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1414:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$j:
    androidx.appcompat.widget.SearchView this$0 -> d
    1418:1418:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1426:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1436:1436:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$k:
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    2025:2047:void <init>() -> <init>
    2059:2065:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> a
    2068:2074:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    2050:2056:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> b
androidx.appcompat.widget.SearchView$OnCloseListener -> androidx.appcompat.widget.SearchView$l:
    boolean onClose() -> a
androidx.appcompat.widget.SearchView$OnQueryTextListener -> androidx.appcompat.widget.SearchView$m:
    boolean onQueryTextChange(java.lang.String) -> a
    boolean onQueryTextSubmit(java.lang.String) -> b
androidx.appcompat.widget.SearchView$OnSuggestionListener -> androidx.appcompat.widget.SearchView$n:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    boolean isIconified -> f
    1324:1324:void <clinit>() -> <clinit>
    1303:1304:void <init>(android.os.Parcelable) -> <init>
    1307:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1319:1319:java.lang.String toString() -> toString
    1313:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$a:
    1324:1324:void <init>() -> <init>
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1327:1327:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1332:1332:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object[] newArray(int) -> newArray
    1337:1337:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    androidx.appcompat.widget.SearchView mSearchView -> h
    boolean mHasPendingShowSoftInputRequest -> i
    int mThreshold -> g
    java.lang.Runnable mRunShowSoftInputIfNecessary -> j
    1837:1838:void <init>(android.content.Context) -> <init>
    1841:1842:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1845:1847:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1871:1871:boolean isEmpty() -> a
    1987:1993:void showSoftInputIfNecessary() -> b
    1926:1926:boolean enoughToFilter() -> enoughToFilter
    1959:1967:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1978:1983:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1851:1855:void onFinishInflate() -> onFinishInflate
    1916:1918:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1931:1952:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1898:1912:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1890:1890:void performCompletion() -> performCompletion
    1880:1880:void replaceText(java.lang.CharSequence) -> replaceText
    1996:2017:void setImeVisibility(boolean) -> setImeVisibility
    1858:1859:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1863:1865:void setThreshold(int) -> setThreshold
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$a:
    androidx.appcompat.widget.SearchView$SearchAutoComplete this$0 -> d
    1829:1829:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1832:1833:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$o:
    android.view.View mDelegateView -> a
    boolean mDelegateTargeted -> f
    int mSlop -> e
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    android.graphics.Rect mTargetBounds -> b
    1755:1762:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1765:1769:void setBounds(android.graphics.Rect,android.graphics.Rect) -> a
    1773:1814:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.y:
    android.content.res.ColorStateList mUrlColor -> v
    java.util.WeakHashMap mOutsideDrawablesCache -> r
    int mFlagsCol -> B
    boolean mClosed -> t
    int mIconName2Col -> A
    android.content.Context mProviderContext -> q
    androidx.appcompat.widget.SearchView mSearchView -> o
    int mIconName1Col -> z
    int mText2Col -> x
    int mText2UrlCol -> y
    int mText1Col -> w
    android.app.SearchableInfo mSearchable -> p
    int mQueryRefinement -> u
    int mCommitIconResId -> s
    96:107:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    119:120:void setQueryRefinement(int) -> a
    147:155:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    276:326:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    353:360:void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    389:404:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    416:439:java.lang.CharSequence convertToString(android.database.Cursor) -> a
    584:589:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> a
    593:596:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    648:654:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> a
    677:678:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    682:691:java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    700:703:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    738:779:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
    218:238:void changeCursor(android.database.Cursor) -> b
    245:251:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    337:348:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    508:509:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> b
    551:577:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    626:637:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> b
    607:613:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> d
    363:371:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    375:379:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    196:209:void updateSpinnerState(android.database.Cursor) -> g
    474:484:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    451:461:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    136:136:boolean hasStableIds() -> hasStableIds
    182:185:void notifyDataSetChanged() -> notifyDataSetChanged
    190:193:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    330:334:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.y$a:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    android.widget.ImageView mIcon1 -> c
    265:271:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    boolean mHasTrackTintMode -> m
    int mThumbTextPadding -> n
    int[] CHECKED_STATE_SET -> R
    android.graphics.drawable.Drawable mTrackDrawable -> i
    int mSwitchRight -> G
    int mSwitchLeft -> E
    boolean mSplitTrack -> q
    int mSwitchHeight -> C
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> O
    android.graphics.PorterDuff$Mode mTrackTintMode -> k
    float mTouchX -> w
    android.content.res.ColorStateList mThumbTintList -> e
    java.lang.CharSequence mTextOff -> s
    android.text.Layout mOnLayout -> K
    android.content.res.ColorStateList mTextColors -> J
    boolean mHasThumbTintMode -> h
    int mTouchMode -> u
    android.util.Property THUMB_POS -> Q
    android.text.TextPaint mTextPaint -> I
    android.graphics.drawable.Drawable mThumbDrawable -> d
    int mSwitchMinWidth -> o
    int mSwitchBottom -> H
    boolean mHasTrackTint -> l
    int mSwitchTop -> F
    android.animation.ObjectAnimator mPositionAnimator -> N
    int mThumbWidth -> D
    float mThumbPosition -> A
    int mSwitchWidth -> B
    boolean mShowText -> t
    android.graphics.Rect mTempRect -> P
    android.text.method.TransformationMethod mSwitchTransformationMethod -> M
    android.graphics.PorterDuff$Mode mThumbTintMode -> f
    float mTouchY -> x
    int mMinFlingVelocity -> z
    java.lang.CharSequence mTextOn -> r
    int mTouchSlop -> v
    android.view.VelocityTracker mVelocityTracker -> y
    android.text.Layout mOffLayout -> L
    boolean mHasThumbTint -> g
    android.content.res.ColorStateList mTrackTintList -> j
    int mSwitchPadding -> p
    101:184:void <clinit>() -> <clinit>
    194:195:void <init>(android.content.Context) -> <init>
    205:206:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:295:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    304:340:void setSwitchTextAppearance(android.content.Context,int) -> a
    343:359:void setSwitchTypefaceByIndex(int,int) -> a
    368:386:void setSwitchTypeface(android.graphics.Typeface,int) -> a
    698:715:void applyThumbTint() -> a
    878:882:android.text.Layout makeLayout(java.lang.CharSequence) -> a
    892:905:boolean hitThumb(float,float) -> a
    988:992:void cancelSuperTouch(android.view.MotionEvent) -> a
    1028:1035:void animateThumbToCheckedState(boolean) -> a
    1430:1430:float constrain(float,float,float) -> a
    575:592:void applyTrackTint() -> b
    1000:1025:void stopDrag(android.view.MotionEvent) -> b
    1038:1041:void cancelPositionAnimator() -> c
    1137:1198:void draw(android.graphics.Canvas) -> draw
    1357:1368:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1335:1353:void drawableStateChanged() -> drawableStateChanged
    1267:1274:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1279:1286:int getCompoundPaddingRight() -> getCompoundPaddingRight
    796:796:boolean getShowText() -> getShowText
    737:737:boolean getSplitTrack() -> getSplitTrack
    450:450:int getSwitchMinWidth() -> getSwitchMinWidth
    425:425:int getSwitchPadding() -> getSwitchPadding
    1044:1044:boolean getTargetCheckedState() -> getTargetCheckedState
    765:765:java.lang.CharSequence getTextOff() -> getTextOff
    746:746:java.lang.CharSequence getTextOn() -> getTextOn
    634:634:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1297:1302:int getThumbOffset() -> getThumbOffset
    1306:1320:int getThumbScrollRange() -> getThumbScrollRange
    473:473:int getThumbTextPadding() -> getThumbTextPadding
    665:665:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    694:694:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    513:513:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    543:543:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    571:571:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    1377:1391:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    1326:1330:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1202:1263:void onDraw(android.graphics.Canvas) -> onDraw
    1395:1397:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1401:1414:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1081:1133:void onLayout(boolean,int,int,int,int) -> onLayout
    801:865:void onMeasure(int,int) -> onMeasure
    869:875:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    910:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1077:void setChecked(boolean) -> setChecked
    1422:1424:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    785:789:void setShowText(boolean) -> setShowText
    727:729:void setSplitTrack(boolean) -> setSplitTrack
    437:439:void setSwitchMinWidth(int) -> setSwitchMinWidth
    413:415:void setSwitchPadding(int) -> setSwitchPadding
    396:403:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    774:776:void setTextOff(java.lang.CharSequence) -> setTextOff
    755:757:void setTextOn(java.lang.CharSequence) -> setTextOn
    603:611:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1053:1055:void setThumbPosition(float) -> setThumbPosition
    622:623:void setThumbResource(int) -> setThumbResource
    461:463:void setThumbTextPadding(int) -> setThumbTextPadding
    652:656:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    680:684:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    484:492:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    502:503:void setTrackResource(int) -> setTrackResource
    530:534:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    557:561:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1059:1060:void toggle() -> toggle
    1372:1372:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$a:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> a
    110:111:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> a
    102:102:java.lang.Object get(java.lang.Object) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.z:
    int[] EMPTY_STATE_SET -> f
    int[] TEMP_ARRAY -> g
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> d
    int[] CHECKED_STATE_SET -> e
    28:40:void <clinit>() -> <clinit>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> a
    100:105:android.util.TypedValue getTypedValue() -> a
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> a
    63:68:int getThemeAttrColor(android.content.Context,int) -> b
    73:78:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> c
androidx.appcompat.widget.ThemedSpinnerAdapter -> androidx.appcompat.widget.a0:
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.b0:
    android.content.res.Resources$Theme mTheme -> b
    java.lang.Object CACHE_LOCK -> c
    java.util.ArrayList sCache -> d
    android.content.res.Resources mResources -> a
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    78:83:boolean shouldWrap(android.content.Context) -> a
    46:74:android.content.Context wrap(android.content.Context) -> b
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.c0:
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
    28:28:void <init>() -> <init>
    35:39:void clear() -> a
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.d0:
    java.lang.ref.WeakReference mContextRef -> b
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.e0:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.util.TypedValue mTypedValue -> c
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> a
    59:59:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> a
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> a
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> a
    151:151:boolean getBoolean(int,boolean) -> a
    163:163:int getColor(int,int) -> a
    167:177:android.content.res.ColorStateList getColorStateList(int) -> a
    185:185:float getDimension(int,float) -> a
    245:246:void recycle() -> a
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> b
    159:159:float getFloat(int,float) -> b
    189:189:int getDimensionPixelOffset(int,int) -> b
    83:89:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> c
    193:193:int getDimensionPixelSize(int,int) -> c
    143:143:java.lang.String getString(int) -> d
    155:155:int getInt(int,int) -> d
    139:139:java.lang.CharSequence getText(int) -> e
    181:181:int getInteger(int,int) -> e
    201:201:int getLayoutDimension(int,int) -> f
    213:213:java.lang.CharSequence[] getTextArray(int) -> f
    209:209:int getResourceId(int,int) -> g
    233:233:boolean hasValue(int) -> g
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    int mPopupTheme -> n
    androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper -> L
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> O
    java.lang.CharSequence mTitleText -> A
    android.graphics.drawable.Drawable mCollapseIcon -> i
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> J
    java.lang.CharSequence mCollapseDescription -> j
    int[] mTempMargins -> I
    android.content.Context mPopupContext -> m
    android.content.res.ColorStateList mSubtitleTextColor -> D
    androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> N
    int mContentInsetEndWithActions -> y
    java.util.ArrayList mHiddenViews -> H
    boolean mEatingTouch -> E
    android.widget.TextView mSubtitleTextView -> f
    int mTitleMarginTop -> u
    int mTitleMarginStart -> s
    int mButtonGravity -> q
    androidx.appcompat.widget.RtlSpacingHelper mContentInsets -> w
    int mTitleTextAppearance -> o
    java.lang.Runnable mShowOverflowMenuRunnable -> R
    java.lang.CharSequence mSubtitleText -> B
    java.util.ArrayList mTempViews -> G
    boolean mCollapsible -> Q
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> P
    androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter -> M
    android.widget.ImageView mLogoView -> h
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> K
    androidx.appcompat.widget.ActionMenuView mMenuView -> d
    android.widget.ImageButton mCollapseButtonView -> k
    int mGravity -> z
    android.view.View mExpandedActionView -> l
    android.content.res.ColorStateList mTitleTextColor -> C
    android.widget.TextView mTitleTextView -> e
    int mContentInsetStartWithNavigation -> x
    android.widget.ImageButton mNavButtonView -> g
    int mTitleMarginBottom -> v
    boolean mEatingHover -> F
    int mTitleMarginEnd -> t
    int mMaxButtonHeight -> r
    int mSubtitleTextAppearance -> p
    228:229:void <init>(android.content.Context) -> <init>
    232:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    236:351:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    555:587:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> a
    856:860:void setSubtitleTextAppearance(android.content.Context,int) -> a
    1191:1192:void inflateMenu(int) -> a
    1225:1227:void setContentInsetsRelative(int,int) -> a
    1510:1527:void addSystemView(android.view.View,boolean) -> a
    1627:1644:void measureChildConstrained(android.view.View,int,int,int,int,int) -> a
    1652:1669:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> a
    2043:2058:int getViewListMeasuredWidth(java.util.List,int[]) -> a
    2063:2071:int layoutChildLeft(android.view.View,int,int[],int) -> a
    2088:2093:int getChildTop(android.view.View,int) -> a
    2139:2165:void addCustomViewsWithGravity(java.util.List,int) -> a
    2186:2187:int getHorizontalMargins(android.view.View) -> a
    2251:2257:void addChildrenForExpandedActionView() -> a
    2280:2285:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    515:515:boolean canShowOverflowMenu() -> b
    845:849:void setTitleTextAppearance(android.content.Context,int) -> b
    2076:2084:int layoutChildRight(android.view.View,int,int[],int) -> b
    2168:2175:int getChildHorizontalGravity(int) -> b
    2192:2193:int getVerticalMargins(android.view.View) -> b
    723:728:void collapseActionView() -> c
    2120:2125:int getChildVerticalGravity(int) -> c
    2260:2260:boolean isChildOrHidden(android.view.View) -> c
    2221:2221:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    593:596:void dismissPopupMenus() -> d
    2182:2182:boolean shouldLayout(android.view.View) -> d
    1491:1507:void ensureCollapseButtonView() -> e
    709:709:boolean hasExpandedActionView() -> f
    549:549:boolean hideOverflowMenu() -> g
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2216:2216:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2198:2198:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2203:2210:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1035:1035:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1080:1080:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1266:1266:int getContentInsetEnd() -> getContentInsetEnd
    1388:1388:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1309:1309:int getContentInsetLeft() -> getContentInsetLeft
    1329:1329:int getContentInsetRight() -> getContentInsetRight
    1246:1246:int getContentInsetStart() -> getContentInsetStart
    1345:1345:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1440:1445:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1460:1460:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1475:1475:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1426:1426:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    651:651:android.graphics.drawable.Drawable getLogo() -> getLogo
    689:689:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1126:1127:android.view.Menu getMenu() -> getMenu
    1178:1178:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    915:915:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1007:1007:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2315:2315:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1147:1148:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2319:2319:android.content.Context getPopupContext() -> getPopupContext
    377:377:int getPopupTheme() -> getPopupTheme
    792:792:java.lang.CharSequence getSubtitle() -> getSubtitle
    2308:2308:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    736:736:java.lang.CharSequence getTitle() -> getTitle
    474:474:int getTitleMarginBottom() -> getTitleMarginBottom
    452:452:int getTitleMarginEnd() -> getTitleMarginEnd
    408:408:int getTitleMarginStart() -> getTitleMarginStart
    430:430:int getTitleMarginTop() -> getTitleMarginTop
    2299:2299:android.widget.TextView getTitleTextView() -> getTitleTextView
    2231:2234:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    531:531:boolean isOverflowMenuShowPending() -> h
    525:525:boolean isOverflowMenuShowing() -> i
    2238:2248:void removeChildrenForExpandedActionView() -> j
    540:540:boolean showOverflowMenu() -> k
    2288:2291:void ensureContentInsets() -> l
    693:696:void ensureLogoView() -> m
    1152:1162:void ensureMenu() -> n
    1165:1175:void ensureMenuView() -> o
    1571:1573:void onDetachedFromWindow() -> onDetachedFromWindow
    1606:1622:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1825:2040:void onLayout(boolean,int,int,int,int) -> onLayout
    1691:1821:void onMeasure(int,int) -> onMeasure
    1543:1562:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    491:497:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1531:1538:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1582:1598:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1481:1488:void ensureNavButtonView() -> p
    1565:1567:void postShowOverflowMenu() -> q
    1676:1686:boolean shouldCollapse() -> r
    1049:1050:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1063:1069:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1094:1095:void setCollapseIcon(int) -> setCollapseIcon
    1108:1114:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2270:2272:void setCollapsible(boolean) -> setCollapsible
    1406:1415:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1364:1373:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    509:510:void setLogo(int) -> setLogo
    629:641:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    663:664:void setLogoDescription(int) -> setLogoDescription
    675:681:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    929:930:void setNavigationContentDescription(int) -> setNavigationContentDescription
    943:949:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    966:967:void setNavigationIcon(int) -> setNavigationIcon
    984:996:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1020:1022:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1203:1204:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1136:1138:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    361:369:void setPopupTheme(int) -> setPopupTheme
    803:804:void setSubtitle(int) -> setSubtitle
    814:838:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    889:890:void setSubtitleTextColor(int) -> setSubtitleTextColor
    898:902:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    748:749:void setTitle(int) -> setTitle
    760:784:void setTitle(java.lang.CharSequence) -> setTitle
    485:487:void setTitleMarginBottom(int) -> setTitleMarginBottom
    463:466:void setTitleMarginEnd(int) -> setTitleMarginEnd
    419:422:void setTitleMarginStart(int) -> setTitleMarginStart
    441:444:void setTitleMarginTop(int) -> setTitleMarginTop
    868:869:void setTitleTextColor(int) -> setTitleTextColor
    877:881:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$a:
    androidx.appcompat.widget.Toolbar this$0 -> a
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:209:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$b:
    androidx.appcompat.widget.Toolbar this$0 -> d
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:224:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$c:
    androidx.appcompat.widget.Toolbar this$0 -> d
    1500:1500:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1503:1504:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$d:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    androidx.appcompat.widget.Toolbar this$0 -> f
    androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem -> e
    2447:2448:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2453:2457:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    2467:2486:void updateMenuView(boolean) -> a
    2494:2494:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    2499:2499:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    2545:2558:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    2563:2563:int getId() -> a
    2573:2573:void onRestoreInstanceState(android.os.Parcelable) -> a
    2503:2503:boolean flagActionItems() -> b
    2508:2538:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    2568:2568:android.os.Parcelable onSaveInstanceState() -> c
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    int mViewType -> b
    2354:2355:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2358:2360:void <init>(int,int) -> <init>
    2372:2375:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2378:2379:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2382:2386:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2389:2390:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2393:2397:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> a
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> androidx.appcompat.widget.Toolbar$e:
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    int expandedMenuItemId -> f
    boolean isOverflowOpen -> g
    2425:2425:void <clinit>() -> <clinit>
    2409:2412:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2415:2416:void <init>(android.os.Parcelable) -> <init>
    2420:2423:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$a:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2428:2428:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2433:2433:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    boolean mMenuPrepared -> m
    int mNavigationMode -> o
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.view.Window$Callback mWindowCallback -> l
    android.graphics.drawable.Drawable mNavIcon -> g
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> n
    int mDisplayOpts -> b
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    androidx.appcompat.widget.Toolbar mToolbar -> a
    android.view.View mTabView -> c
    boolean mTitleSet -> h
    android.view.View mCustomView -> d
    int mDefaultNavigationContentDescription -> p
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> q
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    101:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    317:319:void setLogo(android.graphics.drawable.Drawable) -> a
    345:345:boolean isOverflowMenuShowPending() -> a
    365:371:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    422:434:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> a
    454:454:void setHomeButtonEnabled(boolean) -> a
    540:547:void setCustomView(android.view.View) -> a
    566:566:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> a
    661:662:void setVisibility(int) -> a
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    273:277:void setSubtitle(java.lang.CharSequence) -> b
    312:313:void setLogo(int) -> b
    340:340:boolean isOverflowMenuShowing() -> b
    448:449:void setCollapsible(boolean) -> b
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> b
    260:264:void setTitleInt(java.lang.CharSequence) -> c
    355:355:boolean hideOverflowMenu() -> c
    385:418:void setDisplayOptions(int) -> c
    232:233:void collapseActionView() -> collapseActionView
    196:203:void setDefaultNavigationContentDescription(int) -> d
    350:350:boolean showOverflowMenu() -> d
    360:361:void setMenuPrepared() -> e
    626:627:void setNavigationContentDescription(int) -> e
    335:335:boolean canShowOverflowMenu() -> f
    375:376:void dismissPopupMenus() -> g
    250:250:java.lang.CharSequence getTitle() -> getTitle
    380:380:int getDisplayOptions() -> h
    677:677:android.view.Menu getMenu() -> i
    217:217:android.view.ViewGroup getViewGroup() -> j
    222:222:android.content.Context getContext() -> k
    458:458:int getNavigationMode() -> l
    281:282:void initProgress() -> m
    227:227:boolean hasExpandedActionView() -> n
    286:287:void initIndeterminateProgress() -> o
    206:212:int detectDisplayOptions() -> p
    630:637:void updateHomeAccessibility() -> q
    611:616:void updateNavigationIcon() -> r
    322:331:void updateToolbarLogo() -> s
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$a:
    androidx.appcompat.view.menu.ActionMenuItem mNavItem -> d
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> e
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$b:
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
    boolean mCanceled -> a
    int val$visibility -> b
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    579:582:void onAnimationEnd(android.view.View) -> a
    574:575:void onAnimationStart(android.view.View) -> b
    586:587:void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.f0:
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> a
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.g0:
    androidx.appcompat.widget.TooltipCompatHandler sActiveHandler -> n
    androidx.appcompat.widget.TooltipCompatHandler sPendingHandler -> m
    int mAnchorY -> j
    java.lang.Runnable mHideRunnable -> h
    java.lang.Runnable mShowRunnable -> g
    int mAnchorX -> i
    boolean mFromTouch -> l
    int mHoverSlop -> f
    java.lang.CharSequence mTooltipText -> e
    android.view.View mAnchor -> d
    androidx.appcompat.widget.TooltipPopup mPopup -> k
    108:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> a
    163:189:void show(boolean) -> a
    192:207:void hide() -> a
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> a
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> a
    224:225:void cancelPendingShow() -> b
    250:252:void clearAnchorPos() -> c
    220:221:void scheduleShow() -> d
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.g0$a:
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> d
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.g0$b:
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> d
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.h0:
    android.content.Context mContext -> a
    int[] mTmpAnchorPos -> f
    int[] mTmpAppPos -> g
    android.widget.TextView mMessageView -> c
    android.graphics.Rect mTmpDisplayFrame -> e
    android.view.View mContentView -> b
    android.view.WindowManager$LayoutParams mLayoutParams -> d
    58:73:void <init>(android.content.Context) -> <init>
    77:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> a
    90:96:void hide() -> a
    104:184:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> a
    187:207:android.view.View getAppRootView(android.view.View) -> a
    99:99:boolean isShowing() -> b
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.i0:
    java.lang.ref.WeakReference mContextRef -> a
    boolean sCompatVectorFromResourcesEnabled -> b
    39:39:void <clinit>() -> <clinit>
    55:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> a
    93:93:boolean isCompatVectorFromResourcesEnabled() -> a
    42:42:boolean shouldBeUsed() -> b
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    android.view.LayoutInflater mInflater -> g
    androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener -> h
    java.lang.ref.WeakReference mInflatedViewRef -> f
    int mLayoutResource -> d
    int mInflatedId -> e
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    196:235:android.view.View inflate() -> a
    159:159:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    155:155:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    149:150:void onMeasure(int,int) -> onMeasure
    97:98:void setInflatedId(int) -> setInflatedId
    137:138:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:130:void setLayoutResource(int) -> setLayoutResource
    248:249:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:186:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> androidx.appcompat.widget.ViewStubCompat$a:
    void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View) -> a
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.j0:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    42:53:void <clinit>() -> <clinit>
    58:58:boolean isLayoutRtl(android.view.View) -> a
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> a
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> b
androidx.appcompat.widget.WithHint -> androidx.appcompat.widget.k0:
    java.lang.CharSequence getHint() -> a
androidx.arch.core.executor.ArchTaskExecutor -> a.a.a.a.a:
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    java.util.concurrent.Executor sIOThreadExecutor -> d
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> a
    116:116:boolean isMainThread() -> a
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> b
    69:76:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> c
    101:102:void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.executor.ArchTaskExecutor$1 -> a.a.a.a.a$a:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> a.a.a.a.a$b:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> a.a.a.a.b:
    android.os.Handler mMainHandler -> c
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    37:41:void <init>() -> <init>
    59:60:void executeOnDiskIO(java.lang.Runnable) -> a
    77:77:boolean isMainThread() -> a
    81:96:android.os.Handler createAsync(android.os.Looper) -> a
    64:73:void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.executor.DefaultTaskExecutor$1 -> a.a.a.a.b$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:50:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> a.a.a.a.c:
    31:31:void <init>() -> <init>
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> a
    54:59:void executeOnMainThread(java.lang.Runnable) -> b
    void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.internal.FastSafeIterableMap -> a.a.a.b.a:
    java.util.HashMap mHashMap -> h
    35:37:void <init>() -> <init>
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> b
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> b
    66:66:boolean contains(java.lang.Object) -> contains
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> a.a.a.b.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> d
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> e
    java.util.WeakHashMap mIterators -> f
    int mSize -> g
    35:43:void <init>() -> <init>
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> a
    150:152:java.util.Iterator descendingIterator() -> a
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> b
    169:169:java.util.Map$Entry eldest() -> b
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> c
    176:176:java.util.Map$Entry newest() -> d
    181:201:boolean equals(java.lang.Object) -> equals
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> a.a.a.b.b$a:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> a.a.a.b.b$b:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$Entry -> a.a.a.b.b$c:
    java.lang.Object mKey -> d
    java.lang.Object mValue -> e
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> f
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> g
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> a.a.a.b.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> d
    boolean mBeforeStart -> e
    androidx.arch.core.internal.SafeIterableMap this$0 -> f
    318:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> a.a.a.b.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> d
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> e
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    263:264:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> a
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> a.a.a.b.b$f:
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
androidx.camera.camera2.Camera2AppConfig -> androidx.camera.camera2.a:
    55:77:androidx.camera.core.AppConfig create(android.content.Context) -> a
androidx.camera.camera2.Camera2Config -> androidx.camera.camera2.b:
    androidx.camera.core.Config$Option CAMERA_EVENT_CALLBACK_OPTION -> d
    androidx.camera.core.Config mConfig -> c
    49:62:void <clinit>() -> <clinit>
    73:75:void <init>(androidx.camera.core.Config) -> <init>
    81:81:androidx.camera.core.Config$Option createCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key) -> a
    180:180:androidx.camera.camera2.impl.CameraEventCallbacks getCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks) -> a
    200:200:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    208:208:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
    215:216:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
    222:222:java.util.Set listOptions() -> a
    107:117:java.util.Set getCaptureRequestOptions() -> b
androidx.camera.camera2.Camera2Config$1 -> androidx.camera.camera2.b$a:
    java.util.Set val$optionSet -> a
    110:110:void <init>(androidx.camera.camera2.Camera2Config,java.util.Set) -> <init>
    113:114:boolean onOptionMatched(androidx.camera.core.Config$Option) -> a
androidx.camera.camera2.Camera2Config$Builder -> androidx.camera.camera2.b$b:
    androidx.camera.core.MutableOptionsBundle mMutableOptionsBundle -> a
    365:367:void <init>() -> <init>
    379:381:androidx.camera.camera2.Camera2Config$Builder setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> a
    395:395:androidx.camera.camera2.Camera2Config build() -> a
androidx.camera.camera2.impl.CamcorderProfileHelper -> androidx.camera.camera2.impl.a:
    boolean hasProfile(int,int) -> a
androidx.camera.camera2.impl.Camera -> androidx.camera.camera2.impl.b:
    android.hardware.camera2.CameraManager mCameraManager -> d
    android.hardware.camera2.CameraDevice mCameraDevice -> h
    android.os.Handler mHandler -> e
    androidx.camera.camera2.impl.CaptureSession mCaptureSession -> i
    androidx.camera.core.UseCaseAttachState mUseCaseAttachState -> b
    java.util.concurrent.atomic.AtomicReference mState -> f
    androidx.camera.core.SessionConfig mCameraControlSessionConfig -> j
    java.lang.Object mAttachedUseCaseLock -> a
    androidx.camera.camera2.impl.Camera$StateCallback mStateCallback -> g
    java.lang.String mCameraId -> c
    java.util.List mClosedCaptureSessions -> k
    122:129:void <init>(android.hardware.camera2.CameraManager,java.lang.String,android.os.Handler) -> <init>
    590:600:void openCameraDevice() -> a
    700:708:boolean checkAndAttachRepeatingSurface(androidx.camera.core.CaptureConfig$Builder) -> a
    778:780:void onCameraControlUpdateSessionConfig(androidx.camera.core.SessionConfig) -> a
    785:786:void onCameraControlCaptureRequests(java.util.List) -> a
    626:628:void openCaptureSession() -> b
    744:773:void submitCaptureRequests(java.util.List) -> b
    653:677:void resetCaptureSession() -> c
    680:689:android.hardware.camera2.CameraDevice$StateCallback createDeviceStateCallback() -> d
    605:607:void updateCaptureSessionConfig() -> e
androidx.camera.camera2.impl.Camera$12 -> androidx.camera.camera2.impl.b$a:
    java.util.List val$captureConfigs -> d
    androidx.camera.camera2.impl.Camera this$0 -> e
    745:745:void <init>(androidx.camera.camera2.impl.Camera,java.util.List) -> <init>
    748:749:void run() -> run
androidx.camera.camera2.impl.Camera$13 -> androidx.camera.camera2.impl.b$b:
    int[] $SwitchMap$androidx$camera$camera2$impl$Camera$State -> a
    149:149:void <clinit>() -> <clinit>
androidx.camera.camera2.impl.Camera$State -> androidx.camera.camera2.impl.b$c:
    androidx.camera.camera2.impl.Camera$State[] $VALUES -> d
    790:788:void <clinit>() -> <clinit>
    788:788:void <init>(java.lang.String,int) -> <init>
    788:788:androidx.camera.camera2.impl.Camera$State valueOf(java.lang.String) -> valueOf
    788:788:androidx.camera.camera2.impl.Camera$State[] values() -> values
androidx.camera.camera2.impl.Camera$StateCallback -> androidx.camera.camera2.impl.b$d:
    androidx.camera.camera2.impl.Camera this$0 -> a
    847:847:void <init>(androidx.camera.camera2.impl.Camera) -> <init>
    925:931:java.lang.String getErrorMessage(int) -> a
    872:895:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    899:922:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    943:971:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    851:868:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
androidx.camera.camera2.impl.Camera2CameraCaptureResult -> androidx.camera.camera2.impl.c:
    40:43:void <init>(java.lang.Object,android.hardware.camera2.CaptureResult) -> <init>
androidx.camera.camera2.impl.Camera2CameraControl -> androidx.camera.camera2.impl.d:
    androidx.camera.core.FlashMode mFlashMode -> g
    android.graphics.Rect mCropRect -> h
    androidx.camera.camera2.impl.Camera2CameraControl$CameraControlSessionCallback mSessionCallback -> c
    androidx.camera.core.OnFocusListener mFocusListener -> m
    android.os.Handler mHandler -> b
    boolean mIsTorchOn -> e
    boolean mIsFocusLocked -> f
    java.lang.Integer mCurrentAfState -> l
    android.os.Handler mFocusListenerHandler -> n
    android.hardware.camera2.params.MeteringRectangle mAwbRect -> k
    androidx.camera.core.CameraControl$ControlUpdateListener mControlUpdateListener -> a
    androidx.camera.core.SessionConfig$Builder mSessionConfigBuilder -> d
    android.hardware.camera2.params.MeteringRectangle mAfRect -> i
    android.hardware.camera2.params.MeteringRectangle mAeRect -> j
    java.lang.Runnable mHandleFocusTimeoutRunnable -> p
    androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener mSessionListenerForFocus -> o
    96:104:void <init>(androidx.camera.core.CameraControl$ControlUpdateListener,android.os.Handler) -> <init>
    214:217:void runInFocusListenerHandler(java.lang.Runnable) -> a
    222:252:void cancelFocus() -> a
    402:412:void notifyCaptureRequests(java.util.List) -> a
    469:519:androidx.camera.core.Config getSharedOptions() -> b
    308:308:boolean isFocusLocked() -> c
    415:426:void updateSessionConfig() -> d
    457:459:androidx.camera.core.CaptureConfig$Builder createCaptureBuilderWithSharedOptions() -> e
    398:398:int getDefaultTemplate() -> f
androidx.camera.camera2.impl.Camera2CameraControl$1 -> androidx.camera.camera2.impl.d$a:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> d
    76:76:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    79:93:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$1$1 -> androidx.camera.camera2.impl.d$a$a:
    androidx.camera.camera2.impl.Camera2CameraControl$1 this$1 -> d
    86:86:void <init>(androidx.camera.camera2.impl.Camera2CameraControl$1) -> <init>
    89:90:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$10 -> androidx.camera.camera2.impl.d$b:
    java.util.List val$captureConfigs -> d
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> e
    403:403:void <init>(androidx.camera.camera2.impl.Camera2CameraControl,java.util.List) -> <init>
    406:407:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$11 -> androidx.camera.camera2.impl.d$c:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> d
    416:416:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    419:420:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$13 -> androidx.camera.camera2.impl.d$d:
    int[] $SwitchMap$androidx$camera$core$FlashMode -> a
    485:485:void <clinit>() -> <clinit>
androidx.camera.camera2.impl.Camera2CameraControl$5 -> androidx.camera.camera2.impl.d$e:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> d
    223:223:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    226:227:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$CameraControlSessionCallback -> androidx.camera.camera2.impl.d$f:
    java.util.Set mResultListeners -> a
    533:535:void <init>() -> <init>
    544:549:void removeListener(androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener) -> a
    558:563:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener -> androidx.camera.camera2.impl.d$g:
    boolean onCaptureResult(android.hardware.camera2.TotalCaptureResult) -> a
androidx.camera.camera2.impl.Camera2CameraFactory -> androidx.camera.camera2.impl.e:
    android.hardware.camera2.CameraManager mCameraManager -> a
    android.os.Handler sHandler -> c
    android.os.HandlerThread sHandlerThread -> b
    49:55:void <clinit>() -> <clinit>
    59:61:void <init>(android.content.Context) -> <init>
    65:65:androidx.camera.core.BaseCamera getCamera(java.lang.String) -> a
    70:74:java.util.Set getAvailableCameraIds() -> a
androidx.camera.camera2.impl.Camera2CaptureCallbacks -> androidx.camera.camera2.impl.f:
    53:53:android.hardware.camera2.CameraCaptureSession$CaptureCallback createComboCallback(java.util.List) -> a
androidx.camera.camera2.impl.Camera2CaptureCallbacks$ComboSessionCaptureCallback -> androidx.camera.camera2.impl.f$a:
    java.util.List mCallbacks -> a
    108:115:void <init>(java.util.List) -> <init>
    121:124:void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long) -> onCaptureBufferLost
    129:132:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    137:140:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    145:148:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    152:155:void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
    160:163:void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    168:171:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager -> androidx.camera.camera2.impl.g:
    java.util.Map mCameraSupportedSurfaceCombinationMap -> a
    boolean mIsInitialized -> b
    53:53:void <clinit>() -> <clinit>
    58:65:void <init>(android.content.Context) -> <init>
    189:206:void init(android.content.Context,androidx.camera.camera2.impl.CamcorderProfileHelper) -> a
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager$1 -> androidx.camera.camera2.impl.g$a:
    59:59:void <init>(androidx.camera.camera2.impl.Camera2DeviceSurfaceManager) -> <init>
    62:62:boolean hasProfile(int,int) -> a
androidx.camera.camera2.impl.Camera2Initializer -> androidx.camera.camera2.impl.Camera2Initializer:
    37:37:void <init>() -> <init>
    73:73:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    62:62:java.lang.String getType(android.net.Uri) -> getType
    68:68:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    42:45:boolean onCreate() -> onCreate
    56:56:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    82:82:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.camera.camera2.impl.CameraBurstCaptureCallback -> androidx.camera.camera2.impl.h:
    java.util.Map mCallbackMap -> a
    48:50:void <init>() -> <init>
    112:113:java.util.List getCallbacks(android.hardware.camera2.CaptureRequest) -> a
    119:130:void addCamera2Callbacks(android.hardware.camera2.CaptureRequest,java.util.List) -> a
    57:60:void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long) -> onCaptureBufferLost
    65:68:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    73:76:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    83:86:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    103:103:void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
    109:109:void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    94:97:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
androidx.camera.camera2.impl.CameraEventCallback -> androidx.camera.camera2.impl.i:
    30:30:void <init>() -> <init>
    76:76:androidx.camera.core.CaptureConfig onDisableSession() -> a
    53:53:androidx.camera.core.CaptureConfig onEnableSession() -> b
    41:41:androidx.camera.core.CaptureConfig onPresetSession() -> c
    64:64:androidx.camera.core.CaptureConfig onRepeating() -> d
androidx.camera.camera2.impl.CameraEventCallbacks -> androidx.camera.camera2.impl.j:
    38:40:void <init>(androidx.camera.camera2.impl.CameraEventCallback[]) -> <init>
    44:44:androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback createComboCallback() -> b
    49:49:androidx.camera.camera2.impl.CameraEventCallbacks createEmptyCallback() -> c
    35:35:java.lang.Object clone() -> clone
    54:56:androidx.camera.core.MultiValueSet clone() -> clone
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback -> androidx.camera.camera2.impl.j$a:
    java.util.List mCallbacks -> a
    66:70:void <init>(java.util.List) -> <init>
    130:137:java.util.List onDisableSession() -> a
    96:103:java.util.List onEnableSession() -> b
    79:86:java.util.List onPresetSession() -> c
    113:120:java.util.List onRepeating() -> d
androidx.camera.camera2.impl.CaptureCallbackAdapter -> androidx.camera.camera2.impl.k:
    androidx.camera.core.CameraCaptureCallback mCameraCaptureCallback -> a
    36:38:void <init>(androidx.camera.core.CameraCaptureCallback) -> <init>
    48:52:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    59:65:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
androidx.camera.camera2.impl.CaptureCallbackContainer -> androidx.camera.camera2.impl.l:
    android.hardware.camera2.CameraCaptureSession$CaptureCallback mCaptureCallback -> a
    32:34:void <init>(android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> <init>
    40:40:androidx.camera.camera2.impl.CaptureCallbackContainer create(android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    45:45:android.hardware.camera2.CameraCaptureSession$CaptureCallback getCaptureCallback() -> a
androidx.camera.camera2.impl.CaptureCallbackConverter -> androidx.camera.camera2.impl.m:
    40:45:android.hardware.camera2.CameraCaptureSession$CaptureCallback toCaptureCallback(androidx.camera.core.CameraCaptureCallback) -> a
    63:79:void toCaptureCallback(androidx.camera.core.CameraCaptureCallback,java.util.List) -> a
androidx.camera.camera2.impl.CaptureSession -> androidx.camera.camera2.impl.n:
    android.hardware.camera2.CameraCaptureSession$CaptureCallback mCaptureCallback -> e
    android.os.Handler mHandler -> a
    java.lang.Object mStateLock -> d
    java.util.concurrent.Executor mExecutor -> b
    java.util.List mCaptureConfigs -> c
    java.util.List mConfiguredDeferrableSurfaces -> j
    java.util.List mConfiguredSurfaces -> i
    android.hardware.camera2.CameraCaptureSession mCameraCaptureSession -> g
    androidx.camera.camera2.impl.CaptureSession$State mState -> l
    androidx.camera.camera2.impl.CaptureSession$StateCallback mCaptureSessionStateCallback -> f
    androidx.camera.core.SessionConfig mSessionConfig -> h
    java.util.List mConfiguredRepeatingSurfaces -> k
    108:112:void <init>(android.os.Handler) -> <init>
    136:163:void setSessionConfig(androidx.camera.core.SessionConfig) -> a
    180:259:void open(androidx.camera.core.SessionConfig,android.hardware.camera2.CameraDevice) -> a
    272:302:void close() -> a
    366:386:void issueCaptureRequests(java.util.List) -> a
    453:475:void applyImplementationOptionTCaptureBuilder(android.hardware.camera2.CaptureRequest$Builder,androidx.camera.core.Config) -> a
    520:526:android.hardware.camera2.CameraCaptureSession$CaptureCallback createCamera2CaptureCallback(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback[]) -> a
    391:393:java.util.List getCaptureConfigs() -> b
    679:689:java.util.List setupConfiguredSurface(java.util.List) -> b
    120:122:androidx.camera.core.SessionConfig getSessionConfig() -> c
    479:515:void issueBurstCaptureRequest() -> d
    409:449:void issueRepeatingCaptureRequests() -> e
    341:345:void notifySurfaceAttached() -> f
    350:357:void notifySurfaceDetached() -> g
    315:336:void release() -> h
    695:699:java.util.concurrent.Executor getExecutor() -> i
androidx.camera.camera2.impl.CaptureSession$1 -> androidx.camera.camera2.impl.n$a:
    74:74:void <init>(androidx.camera.camera2.impl.CaptureSession) -> <init>
    80:80:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
androidx.camera.camera2.impl.CaptureSession$2 -> androidx.camera.camera2.impl.n$b:
    int[] $SwitchMap$androidx$camera$camera2$impl$CaptureSession$State -> a
    137:137:void <clinit>() -> <clinit>
androidx.camera.camera2.impl.CaptureSession$State -> androidx.camera.camera2.impl.n$c:
    androidx.camera.camera2.impl.CaptureSession$State[] $VALUES -> d
    531:529:void <clinit>() -> <clinit>
    529:529:void <init>(java.lang.String,int) -> <init>
    529:529:androidx.camera.camera2.impl.CaptureSession$State valueOf(java.lang.String) -> valueOf
    529:529:androidx.camera.camera2.impl.CaptureSession$State[] values() -> values
androidx.camera.camera2.impl.CaptureSession$StateCallback -> androidx.camera.camera2.impl.n$d:
    androidx.camera.camera2.impl.CaptureSession this$0 -> a
    569:569:void <init>(androidx.camera.camera2.impl.CaptureSession) -> <init>
    633:646:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    651:669:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    578:615:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    620:628:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
androidx.camera.camera2.impl.ImageAnalysisConfigProvider -> androidx.camera.camera2.impl.o:
    46:47:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
androidx.camera.camera2.impl.ImageCaptureConfigProvider -> androidx.camera.camera2.impl.p:
    46:47:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
androidx.camera.camera2.impl.PreviewConfigProvider -> androidx.camera.camera2.impl.q:
    48:51:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
androidx.camera.camera2.impl.SupportedSurfaceCombination -> androidx.camera.camera2.impl.r:
    java.util.List mSurfaceCombinations -> a
    android.util.Size QUALITY_480P_SIZE -> l
    android.util.Size QUALITY_720P_SIZE -> k
    android.util.Size QUALITY_1080P_SIZE -> j
    android.hardware.camera2.CameraCharacteristics mCharacteristics -> c
    android.util.Size QUALITY_2160P_SIZE -> i
    android.util.Size MAX_PREVIEW_SIZE -> h
    androidx.camera.camera2.impl.CamcorderProfileHelper mCamcorderProfileHelper -> g
    boolean mIsRawSupported -> e
    boolean mIsBurstCaptureSupported -> f
    int mHardwareLevel -> d
    java.lang.String mCameraId -> b
    65:71:void <clinit>() -> <clinit>
    83:87:void <init>(android.content.Context,java.lang.String,androidx.camera.camera2.impl.CamcorderProfileHelper) -> <init>
    505:514:void init(android.content.Context) -> a
    788:814:java.util.List getBurstSupportedCombinationList() -> a
    849:897:void generateSupportedCombinationList(android.hardware.camera2.CameraManager) -> a
    907:912:void generateSurfaceSizeDefinition(android.view.WindowManager) -> a
    650:706:java.util.List getFullSupportedCombinationList() -> b
    919:937:android.util.Size getPreviewSize(android.view.WindowManager) -> b
    523:586:java.util.List getLegacySupportedCombinationList() -> c
    818:844:java.util.List getLevel3SupportedCombinationList() -> d
    590:646:java.util.List getLimitedSupportedCombinationList() -> e
    710:784:java.util.List getRAWSupportedCombinationList() -> f
    901:901:void checkCustomization() -> g
    945:962:android.util.Size getRecordSize() -> h
androidx.camera.camera2.impl.SupportedSurfaceCombination$CompareSizesByArea -> androidx.camera.camera2.impl.r$a:
    boolean mReverse -> d
    969:970:void <init>() -> <init>
    979:988:int compare(android.util.Size,android.util.Size) -> a
    966:966:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.camera2.impl.VideoCaptureConfigProvider -> androidx.camera.camera2.impl.s:
    46:47:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
androidx.camera.core.AppConfig -> androidx.camera.core.a:
    androidx.camera.core.Config$Option OPTION_CAMERA_FACTORY -> d
    androidx.camera.core.Config$Option OPTION_DEVICE_SURFACE_MANAGER -> e
    androidx.camera.core.Config$Option OPTION_USECASE_CONFIG_FACTORY -> f
    androidx.camera.core.OptionsBundle mConfig -> c
    39:45:void <clinit>() -> <clinit>
    54:56:void <init>(androidx.camera.core.OptionsBundle) -> <init>
    65:65:androidx.camera.core.CameraFactory getCameraFactory(androidx.camera.core.CameraFactory) -> a
    76:76:androidx.camera.core.CameraDeviceSurfaceManager getDeviceSurfaceManager(androidx.camera.core.CameraDeviceSurfaceManager) -> a
    89:89:androidx.camera.core.UseCaseConfigFactory getUseCaseConfigRepository(androidx.camera.core.UseCaseConfigFactory) -> a
    110:110:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    118:118:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
    125:126:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
    132:132:java.util.Set listOptions() -> a
androidx.camera.core.AppConfig$Builder -> androidx.camera.core.a$a:
    androidx.camera.core.MutableOptionsBundle mMutableConfig -> a
    187:188:void <init>() -> <init>
    190:204:void <init>(androidx.camera.core.MutableOptionsBundle) -> <init>
    223:224:androidx.camera.core.AppConfig$Builder setCameraFactory(androidx.camera.core.CameraFactory) -> a
    234:235:androidx.camera.core.AppConfig$Builder setDeviceSurfaceManager(androidx.camera.core.CameraDeviceSurfaceManager) -> a
    248:249:androidx.camera.core.AppConfig$Builder setUseCaseConfigFactory(androidx.camera.core.UseCaseConfigFactory) -> a
    269:269:androidx.camera.core.AppConfig build() -> a
    278:286:androidx.camera.core.AppConfig$Builder setTargetClass(java.lang.Class) -> a
    293:294:androidx.camera.core.AppConfig$Builder setTargetName(java.lang.String) -> a
    260:260:androidx.camera.core.MutableConfig getMutableConfig() -> b
androidx.camera.core.AutoValue_Config_Option -> androidx.camera.core.b:
    java.lang.Object token -> c
    java.lang.String id -> a
    java.lang.Class valueClass -> b
    19:21:void <init>(java.lang.String,java.lang.Class,java.lang.Object) -> <init>
    33:33:java.lang.String getId() -> a
    44:44:java.lang.Object getToken() -> b
    38:38:java.lang.Class getValueClass() -> c
    58:67:boolean equals(java.lang.Object) -> equals
    72:79:int hashCode() -> hashCode
    49:49:java.lang.String toString() -> toString
androidx.camera.core.AutoValue_SurfaceConfig -> androidx.camera.core.c:
    androidx.camera.core.SurfaceConfig$ConfigSize configSize -> b
    androidx.camera.core.SurfaceConfig$ConfigType configType -> a
    14:16:void <init>(androidx.camera.core.SurfaceConfig$ConfigType,androidx.camera.core.SurfaceConfig$ConfigSize) -> <init>
    32:32:androidx.camera.core.SurfaceConfig$ConfigSize getConfigSize() -> a
    27:27:androidx.camera.core.SurfaceConfig$ConfigType getConfigType() -> b
    45:53:boolean equals(java.lang.Object) -> equals
    58:63:int hashCode() -> hashCode
    37:37:java.lang.String toString() -> toString
androidx.camera.core.AutoValue_SurfaceSizeDefinition -> androidx.camera.core.d:
    android.util.Size recordSize -> c
    android.util.Size previewSize -> b
    android.util.Size analysisSize -> a
    19:21:void <init>(android.util.Size,android.util.Size,android.util.Size) -> <init>
    36:36:android.util.Size getAnalysisSize() -> a
    41:41:android.util.Size getPreviewSize() -> b
    46:46:android.util.Size getRecordSize() -> c
    60:69:boolean equals(java.lang.Object) -> equals
    74:81:int hashCode() -> hashCode
    51:51:java.lang.String toString() -> toString
androidx.camera.core.BaseCamera -> androidx.camera.core.e:
androidx.camera.core.CameraCaptureCallback -> androidx.camera.core.f:
    29:29:void <init>() -> <init>
    38:38:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> a
    47:47:void onCaptureFailed(androidx.camera.core.CameraCaptureFailure) -> a
androidx.camera.core.CameraCaptureCallbacks$ComboCameraCaptureCallback -> androidx.camera.core.g:
    java.util.List mCallbacks -> a
    85:88:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> a
    92:95:void onCaptureFailed(androidx.camera.core.CameraCaptureFailure) -> a
    99:99:java.util.List getCallbacks() -> a
androidx.camera.core.CameraCaptureFailure -> androidx.camera.core.h:
    34:36:void <init>(androidx.camera.core.CameraCaptureFailure$Reason) -> <init>
androidx.camera.core.CameraCaptureFailure$Reason -> androidx.camera.core.h$a:
    androidx.camera.core.CameraCaptureFailure$Reason[] $VALUES -> d
    54:53:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    53:53:androidx.camera.core.CameraCaptureFailure$Reason valueOf(java.lang.String) -> valueOf
    53:53:androidx.camera.core.CameraCaptureFailure$Reason[] values() -> values
androidx.camera.core.CameraCaptureResult -> androidx.camera.core.i:
androidx.camera.core.CameraCaptureSessionStateCallbacks -> androidx.camera.core.j:
    45:45:android.hardware.camera2.CameraCaptureSession$StateCallback createNoOpCallback() -> a
    53:58:android.hardware.camera2.CameraCaptureSession$StateCallback createComboCallback(java.util.List) -> a
androidx.camera.core.CameraCaptureSessionStateCallbacks$ComboSessionStateCallback -> androidx.camera.core.j$a:
    java.util.List mCallbacks -> a
    103:110:void <init>(java.util.List) -> <init>
    121:124:void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
    143:146:void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession) -> onCaptureQueueEmpty
    128:131:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    158:161:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    114:117:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    135:138:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
    151:154:void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface) -> onSurfacePrepared
androidx.camera.core.CameraCaptureSessionStateCallbacks$NoOpSessionStateCallback -> androidx.camera.core.j$b:
    69:69:void <init>() -> <init>
    76:76:void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
    88:88:void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession) -> onCaptureQueueEmpty
    80:80:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    96:96:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    72:72:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    84:84:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
    92:92:void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface) -> onSurfacePrepared
androidx.camera.core.CameraControl -> androidx.camera.core.k:
    116:116:void <clinit>() -> <clinit>
androidx.camera.core.CameraControl$1 -> androidx.camera.core.k$a:
    116:116:void <init>() -> <init>
androidx.camera.core.CameraControl$ControlUpdateListener -> androidx.camera.core.k$b:
    void onCameraControlCaptureRequests(java.util.List) -> a
    void onCameraControlUpdateSessionConfig(androidx.camera.core.SessionConfig) -> a
androidx.camera.core.CameraDeviceConfig -> androidx.camera.core.l:
    44:44:void <clinit>() -> <clinit>
androidx.camera.core.CameraDeviceStateCallbacks -> androidx.camera.core.m:
    42:42:android.hardware.camera2.CameraDevice$StateCallback createNoOpCallback() -> a
    50:55:android.hardware.camera2.CameraDevice$StateCallback createComboCallback(java.util.List) -> a
androidx.camera.core.CameraDeviceStateCallbacks$ComboDeviceStateCallback -> androidx.camera.core.m$a:
    java.util.List mCallbacks -> a
    87:94:void <init>(java.util.List) -> <init>
    105:108:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    112:115:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    119:122:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    98:101:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
androidx.camera.core.CameraDeviceStateCallbacks$NoOpDeviceStateCallback -> androidx.camera.core.m$b:
    66:66:void <init>() -> <init>
    73:73:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    77:77:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    81:81:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    69:69:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
androidx.camera.core.CameraDeviceSurfaceManager -> androidx.camera.core.n:
androidx.camera.core.CameraFactory -> androidx.camera.core.o:
    java.util.Set getAvailableCameraIds() -> a
    androidx.camera.core.BaseCamera getCamera(java.lang.String) -> a
androidx.camera.core.CameraInfoUnavailableException -> androidx.camera.core.p:
    27:28:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    33:34:void <init>(java.lang.String) -> <init>
androidx.camera.core.CameraRepository -> androidx.camera.core.q:
    java.util.Map mCameras -> b
    java.lang.Object mCamerasLock -> a
    37:42:void <init>() -> <init>
    54:64:void init(androidx.camera.core.CameraFactory) -> a
androidx.camera.core.CameraX -> androidx.camera.core.r:
    androidx.camera.core.CameraRepository mCameraRepository -> a
    androidx.camera.core.UseCaseConfigFactory mDefaultConfigFactory -> f
    androidx.camera.core.ErrorHandler mErrorHandler -> c
    androidx.camera.core.CameraDeviceSurfaceManager mSurfaceManager -> e
    java.util.concurrent.atomic.AtomicBoolean mInitialized -> b
    androidx.camera.core.CameraX INSTANCE -> g
    androidx.camera.core.CameraFactory mCameraFactory -> d
    113:113:void <clinit>() -> <clinit>
    124:125:void <init>() -> <init>
    371:372:void postError(androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> a
    386:387:void init(android.content.Context,androidx.camera.core.AppConfig) -> a
    545:552:void initInternal(android.content.Context,androidx.camera.core.AppConfig) -> b
androidx.camera.core.CameraX$ErrorCode -> androidx.camera.core.r$a:
    androidx.camera.core.CameraX$ErrorCode[] $VALUES -> d
    588:586:void <clinit>() -> <clinit>
    586:586:void <init>(java.lang.String,int) -> <init>
    586:586:androidx.camera.core.CameraX$ErrorCode valueOf(java.lang.String) -> valueOf
    586:586:androidx.camera.core.CameraX$ErrorCode[] values() -> values
androidx.camera.core.CameraX$ErrorListener -> androidx.camera.core.r$b:
    void onError(androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> a
androidx.camera.core.CameraX$LensFacing -> androidx.camera.core.r$c:
    androidx.camera.core.CameraX$LensFacing[] $VALUES -> d
    596:594:void <clinit>() -> <clinit>
    594:594:void <init>(java.lang.String,int) -> <init>
    594:594:androidx.camera.core.CameraX$LensFacing valueOf(java.lang.String) -> valueOf
    594:594:androidx.camera.core.CameraX$LensFacing[] values() -> values
androidx.camera.core.CaptureBundle -> androidx.camera.core.s:
androidx.camera.core.CaptureConfig -> androidx.camera.core.t:
    java.util.List mSurfaces -> a
    java.util.Map mCaptureRequestParameters -> b
    java.util.List mCameraCaptureCallbacks -> e
    java.lang.Object mTag -> g
    androidx.camera.core.Config mImplementationOptions -> c
    boolean mUseRepeatingSurface -> f
    int mTemplateType -> d
    95:103:void <init>(java.util.List,java.util.Map,androidx.camera.core.Config,int,java.util.List,boolean,java.lang.Object) -> <init>
    133:133:java.util.List getCameraCaptureCallbacks() -> a
    148:170:android.hardware.camera2.CaptureRequest$Builder buildCaptureRequest(android.hardware.camera2.CameraDevice) -> a
    116:116:java.util.Map getCameraCharacteristics() -> b
    185:195:android.hardware.camera2.CaptureRequest$Builder buildCaptureRequestNoTarget(android.hardware.camera2.CameraDevice) -> b
    120:120:androidx.camera.core.Config getImplementationOptions() -> c
    112:112:java.util.List getSurfaces() -> d
    137:137:java.lang.Object getTag() -> e
    124:124:int getTemplateType() -> f
    128:128:boolean isUseRepeatingSurface() -> g
androidx.camera.core.CaptureConfig$Builder -> androidx.camera.core.t$a:
    java.util.Map mCaptureRequestParameters -> b
    java.util.List mCameraCaptureCallbacks -> e
    java.lang.Object mTag -> g
    androidx.camera.core.MutableConfig mImplementationOptions -> c
    boolean mUseRepeatingSurface -> f
    java.util.Set mSurfaces -> a
    int mTemplateType -> d
    230:231:void <init>() -> <init>
    233:241:void <init>(androidx.camera.core.CaptureConfig) -> <init>
    265:265:androidx.camera.core.CaptureConfig$Builder from(androidx.camera.core.CaptureConfig) -> a
    279:280:void setTemplateType(int) -> a
    287:288:void addCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback) -> a
    299:302:void addAllCameraCaptureCallbacks(java.util.Collection) -> a
    306:307:void addSurface(androidx.camera.core.DeferrableSurface) -> a
    340:355:void addImplementationOptions(androidx.camera.core.Config) -> a
    366:367:void setUseRepeatingSurface(boolean) -> a
    378:378:androidx.camera.core.CaptureConfig build() -> a
    335:336:void setImplementationOptions(androidx.camera.core.Config) -> b
    358:358:java.util.Map getCharacteristic() -> b
    321:321:java.util.Set getSurfaces() -> c
    269:269:int getTemplateType() -> d
androidx.camera.core.CaptureConfig$OptionUnpacker -> androidx.camera.core.t$b:
androidx.camera.core.CaptureProcessor -> androidx.camera.core.u:
androidx.camera.core.CaptureRequestParameter -> androidx.camera.core.v:
    40:41:void <init>() -> <init>
    android.hardware.camera2.CaptureRequest$Key getKey() -> a
    59:63:void apply(android.hardware.camera2.CaptureRequest$Builder) -> a
    java.lang.Object getValue() -> b
androidx.camera.core.Config -> androidx.camera.core.w:
    void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
    java.util.Set listOptions() -> a
    java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
androidx.camera.core.Config$ExtendableBuilder -> androidx.camera.core.w$a:
androidx.camera.core.Config$Option -> androidx.camera.core.w$b:
    155:156:void <init>() -> <init>
    java.lang.String getId() -> a
    170:170:androidx.camera.core.Config$Option create(java.lang.String,java.lang.Class) -> a
    190:190:androidx.camera.core.Config$Option create(java.lang.String,java.lang.Class,java.lang.Object) -> a
    java.lang.Object getToken() -> b
    java.lang.Class getValueClass() -> c
androidx.camera.core.Config$OptionMatcher -> androidx.camera.core.w$c:
    boolean onOptionMatched(androidx.camera.core.Config$Option) -> a
androidx.camera.core.ConfigProvider -> androidx.camera.core.x:
androidx.camera.core.DeferrableSurface -> androidx.camera.core.y:
    androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener mOnSurfaceDetachedListener -> b
    java.lang.Object mLock -> d
    java.util.concurrent.Executor mListenerExecutor -> c
    int mAttachedCount -> a
    48:48:void <clinit>() -> <clinit>
    43:64:void <init>() -> <init>
    androidx.concurrent.ListenableFuture getSurface() -> a
    152:161:void callOnSurfaceDetachedListener(androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener,java.util.concurrent.Executor) -> a
    76:86:void notifySurfaceAttached() -> b
    94:116:void notifySurfaceDetached() -> c
    72:72:void refresh() -> d
androidx.camera.core.DeferrableSurface$1 -> androidx.camera.core.y$a:
    androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener val$listener -> d
    155:155:void <init>(androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener) -> <init>
    158:159:void run() -> run
androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener -> androidx.camera.core.y$b:
    void onSurfaceDetached() -> a
androidx.camera.core.DeferrableSurfaces -> androidx.camera.core.z:
    98:101:void refresh(java.util.Collection) -> a
    54:68:java.util.List surfaceList(java.util.Collection) -> b
    80:92:java.util.Set surfaceSet(java.util.Collection) -> c
androidx.camera.core.ErrorHandler -> androidx.camera.core.a0:
    androidx.camera.core.CameraX$ErrorListener mListener -> b
    android.os.Handler mHandler -> c
    java.lang.Object mErrorLock -> a
    35:43:void <init>() -> <init>
    53:61:void postError(androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> a
androidx.camera.core.ErrorHandler$1 -> androidx.camera.core.a0$a:
    java.lang.String val$message -> f
    androidx.camera.core.CameraX$ErrorListener val$listenerReference -> d
    androidx.camera.core.CameraX$ErrorCode val$error -> e
    55:55:void <init>(androidx.camera.core.ErrorHandler,androidx.camera.core.CameraX$ErrorListener,androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> <init>
    58:59:void run() -> run
androidx.camera.core.ErrorHandler$PrintingErrorListener -> androidx.camera.core.a0$b:
    86:86:void <init>() -> <init>
    89:90:void onError(androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> a
androidx.camera.core.ExtendableUseCaseConfigFactory -> androidx.camera.core.b0:
    java.util.Map mDefaultProviders -> a
    32:33:void <init>() -> <init>
    38:39:void installDefaultProvider(java.lang.Class,androidx.camera.core.ConfigProvider) -> a
androidx.camera.core.FlashMode -> androidx.camera.core.c0:
    androidx.camera.core.FlashMode[] $VALUES -> d
    25:20:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    20:20:androidx.camera.core.FlashMode valueOf(java.lang.String) -> valueOf
    20:20:androidx.camera.core.FlashMode[] values() -> values
androidx.camera.core.ImageAnalysis$ImageReaderMode -> androidx.camera.core.d0:
    androidx.camera.core.ImageAnalysis$ImageReaderMode[] $VALUES -> d
    333:331:void <clinit>() -> <clinit>
    331:331:void <init>(java.lang.String,int) -> <init>
    331:331:androidx.camera.core.ImageAnalysis$ImageReaderMode valueOf(java.lang.String) -> valueOf
    331:331:androidx.camera.core.ImageAnalysis$ImageReaderMode[] values() -> values
androidx.camera.core.ImageAnalysisConfig -> androidx.camera.core.e0:
    androidx.camera.core.OptionsBundle mConfig -> c
    43:45:void <clinit>() -> <clinit>
    130:130:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    138:138:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
    145:146:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
    152:152:java.util.Set listOptions() -> a
    195:195:java.lang.String getTargetName(java.lang.String) -> a
androidx.camera.core.ImageCapture$CaptureMode -> androidx.camera.core.f0:
    androidx.camera.core.ImageCapture$CaptureMode[] $VALUES -> d
    973:968:void <clinit>() -> <clinit>
    968:968:void <init>(java.lang.String,int) -> <init>
    968:968:androidx.camera.core.ImageCapture$CaptureMode valueOf(java.lang.String) -> valueOf
    968:968:androidx.camera.core.ImageCapture$CaptureMode[] values() -> values
androidx.camera.core.ImageCaptureConfig -> androidx.camera.core.g0:
    androidx.camera.core.OptionsBundle mConfig -> c
    43:54:void <clinit>() -> <clinit>
    233:233:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    241:241:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
    248:249:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
    255:255:java.util.Set listOptions() -> a
    298:298:java.lang.String getTargetName(java.lang.String) -> a
androidx.camera.core.ImageInfoProcessor -> androidx.camera.core.h0:
androidx.camera.core.ImageOutputConfig -> androidx.camera.core.i0:
    56:80:void <clinit>() -> <clinit>
androidx.camera.core.ImmediateSurface -> androidx.camera.core.j0:
    android.view.Surface mSurface -> e
    35:37:void <init>(android.view.Surface) -> <init>
    41:41:androidx.concurrent.ListenableFuture getSurface() -> a
androidx.camera.core.MultiValueSet -> androidx.camera.core.k0:
    java.util.Set mSet -> a
    36:38:void <init>() -> <init>
    47:48:void addAll(java.util.List) -> a
    55:55:java.util.List getAllItems() -> a
    35:35:java.lang.Object clone() -> clone
androidx.camera.core.MutableConfig -> androidx.camera.core.l0:
    void insertOption(androidx.camera.core.Config$Option,java.lang.Object) -> b
androidx.camera.core.MutableOptionsBundle -> androidx.camera.core.m0:
    java.util.Comparator ID_COMPARE -> d
    34:34:void <clinit>() -> <clinit>
    43:44:void <init>(java.util.TreeMap) -> <init>
    62:67:androidx.camera.core.MutableOptionsBundle from(androidx.camera.core.Config) -> a
    52:52:androidx.camera.core.MutableOptionsBundle create() -> b
    81:82:void insertOption(androidx.camera.core.Config$Option,java.lang.Object) -> b
androidx.camera.core.MutableOptionsBundle$1 -> androidx.camera.core.m0$a:
    35:35:void <init>() -> <init>
    38:38:int compare(androidx.camera.core.Config$Option,androidx.camera.core.Config$Option) -> a
    35:35:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.core.OnFocusListener -> androidx.camera.core.n0:
    void onFocusTimedOut(android.graphics.Rect) -> a
androidx.camera.core.OptionsBundle -> androidx.camera.core.o0:
    java.util.TreeMap mOptions -> c
    40:40:void <clinit>() -> <clinit>
    50:52:void <init>(java.util.TreeMap) -> <init>
    64:79:androidx.camera.core.OptionsBundle from(androidx.camera.core.Config) -> a
    95:95:java.util.Set listOptions() -> a
    105:107:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    117:122:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
    127:140:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
androidx.camera.core.OptionsBundle$1 -> androidx.camera.core.o0$a:
    41:41:void <init>() -> <init>
    44:44:int compare(androidx.camera.core.Config$Option,androidx.camera.core.Config$Option) -> a
    41:41:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.core.OptionsBundle$2 -> androidx.camera.core.o0$b:
    69:69:void <init>() -> <init>
    72:72:int compare(androidx.camera.core.Config$Option,androidx.camera.core.Config$Option) -> a
    69:69:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.core.PreviewConfig -> androidx.camera.core.p0:
    androidx.camera.core.OptionsBundle mConfig -> c
    44:44:void <clinit>() -> <clinit>
    71:71:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    79:79:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
    86:87:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
    93:93:java.util.Set listOptions() -> a
    136:136:java.lang.String getTargetName(java.lang.String) -> a
androidx.camera.core.SessionConfig -> androidx.camera.core.q0:
    java.util.List mDeviceStateCallbacks -> b
    java.util.List mSurfaces -> a
    java.util.List mSingleCameraCaptureCallbacks -> d
    java.util.List mSessionStateCallbacks -> c
    androidx.camera.core.CaptureConfig mRepeatingCaptureConfig -> e
    77:84:void <init>(java.util.List,java.util.List,java.util.List,java.util.List,androidx.camera.core.CaptureConfig) -> <init>
    114:114:java.util.List getDeviceStateCallbacks() -> a
    105:105:androidx.camera.core.Config getImplementationOptions() -> b
    124:124:java.util.List getRepeatingCameraCaptureCallbacks() -> c
    133:133:androidx.camera.core.CaptureConfig getRepeatingCaptureConfig() -> d
    119:119:java.util.List getSessionStateCallbacks() -> e
    129:129:java.util.List getSingleCameraCaptureCallbacks() -> f
    97:97:java.util.List getSurfaces() -> g
    88:88:androidx.camera.core.SessionConfig defaultEmptySessionConfig() -> h
androidx.camera.core.SessionConfig$BaseBuilder -> androidx.camera.core.q0$a:
    java.util.List mInteropCameraCaptureCallbacks -> e
    java.util.List mSessionStateCallbacks -> d
    java.util.List mDeviceStateCallbacks -> c
    java.util.Set mSurfaces -> a
    androidx.camera.core.CaptureConfig$Builder mCaptureConfigBuilder -> b
    161:167:void <init>() -> <init>
androidx.camera.core.SessionConfig$Builder -> androidx.camera.core.q0$b:
    177:177:void <init>() -> <init>
    207:208:void setTemplateType(int) -> a
    263:264:void addRepeatingCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback) -> a
    344:345:void setImplementationOptions(androidx.camera.core.Config) -> a
    357:357:androidx.camera.core.SessionConfig build() -> a
androidx.camera.core.SessionConfig$OptionUnpacker -> androidx.camera.core.q0$c:
androidx.camera.core.SessionConfig$ValidatingBuilder -> androidx.camera.core.q0$d:
    java.util.List mDeviceStateCallbacks -> f
    boolean mValid -> i
    boolean mTemplateSet -> j
    java.util.List mSingleCameraCaptureCallbacks -> h
    java.util.List mSessionStateCallbacks -> g
    373:381:void <init>() -> <init>
    388:456:void add(androidx.camera.core.SessionConfig) -> a
    468:469:androidx.camera.core.SessionConfig build() -> a
    460:460:boolean isValid() -> b
androidx.camera.core.SurfaceCombination -> androidx.camera.core.r0:
    java.util.List mSurfaceConfigList -> a
    40:41:void <init>() -> <init>
    69:73:boolean addSurfaceConfig(androidx.camera.core.SurfaceConfig) -> a
androidx.camera.core.SurfaceConfig -> androidx.camera.core.s0:
    43:44:void <init>() -> <init>
    androidx.camera.core.SurfaceConfig$ConfigSize getConfigSize() -> a
    50:50:androidx.camera.core.SurfaceConfig create(androidx.camera.core.SurfaceConfig$ConfigType,androidx.camera.core.SurfaceConfig$ConfigSize) -> a
    androidx.camera.core.SurfaceConfig$ConfigType getConfigType() -> b
androidx.camera.core.SurfaceConfig$ConfigSize -> androidx.camera.core.s0$a:
    androidx.camera.core.SurfaceConfig$ConfigSize[] $VALUES -> d
    99:97:void <clinit>() -> <clinit>
    120:122:void <init>(java.lang.String,int,int) -> <init>
    125:125:int getId() -> getId
    97:97:androidx.camera.core.SurfaceConfig$ConfigSize valueOf(java.lang.String) -> valueOf
    97:97:androidx.camera.core.SurfaceConfig$ConfigSize[] values() -> values
androidx.camera.core.SurfaceConfig$ConfigType -> androidx.camera.core.s0$b:
    androidx.camera.core.SurfaceConfig$ConfigType[] $VALUES -> d
    85:84:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:androidx.camera.core.SurfaceConfig$ConfigType valueOf(java.lang.String) -> valueOf
    84:84:androidx.camera.core.SurfaceConfig$ConfigType[] values() -> values
androidx.camera.core.SurfaceSizeDefinition -> androidx.camera.core.t0:
    40:41:void <init>() -> <init>
    android.util.Size getAnalysisSize() -> a
    58:58:androidx.camera.core.SurfaceSizeDefinition create(android.util.Size,android.util.Size,android.util.Size) -> a
    android.util.Size getPreviewSize() -> b
    android.util.Size getRecordSize() -> c
androidx.camera.core.TargetConfig -> androidx.camera.core.u0:
    androidx.camera.core.Config$Option OPTION_TARGET_NAME -> a
    androidx.camera.core.Config$Option OPTION_TARGET_CLASS -> b
    42:49:void <clinit>() -> <clinit>
    java.lang.String getTargetName(java.lang.String) -> a
androidx.camera.core.TargetConfig$Builder -> androidx.camera.core.u0$a:
androidx.camera.core.ThreadConfig -> androidx.camera.core.v0:
    43:43:void <clinit>() -> <clinit>
androidx.camera.core.UseCase -> androidx.camera.core.w0:
    java.util.Map mAttachedCameraIdToSessionConfigMap -> a
    androidx.camera.core.UseCaseConfig mUseCaseConfig -> b
    255:257:androidx.camera.core.SessionConfig getSessionConfig(java.lang.String) -> a
    342:342:java.lang.String getName() -> a
androidx.camera.core.UseCase$EventListener -> androidx.camera.core.w0$a:
androidx.camera.core.UseCase$StateChangeListener -> androidx.camera.core.w0$b:
androidx.camera.core.UseCaseAttachState -> androidx.camera.core.x0:
    java.util.Map mAttachedUseCasesToInfoMap -> b
    java.lang.String mCameraId -> a
    51:53:void <init>(java.lang.String) -> <init>
    163:176:androidx.camera.core.SessionConfig$ValidatingBuilder getActiveAndOnlineBuilder() -> a
    217:224:java.util.Collection getUseCases(androidx.camera.core.UseCaseAttachState$AttachStateFilter) -> a
    129:129:java.util.Collection getActiveAndOnlineUseCases() -> b
    181:193:androidx.camera.core.SessionConfig$ValidatingBuilder getOnlineBuilder() -> c
androidx.camera.core.UseCaseAttachState$2 -> androidx.camera.core.x0$a:
    131:131:void <init>(androidx.camera.core.UseCaseAttachState) -> <init>
    134:134:boolean filter(androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo) -> a
androidx.camera.core.UseCaseAttachState$AttachStateFilter -> androidx.camera.core.x0$b:
    boolean filter(androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo) -> a
androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo -> androidx.camera.core.x0$c:
    androidx.camera.core.SessionConfig mSessionConfig -> a
    boolean mOnline -> b
    boolean mActive -> c
    264:264:boolean getActive() -> a
    256:256:boolean getOnline() -> b
    252:252:androidx.camera.core.SessionConfig getSessionConfig() -> c
androidx.camera.core.UseCaseConfig -> androidx.camera.core.y0:
    41:81:void <clinit>() -> <clinit>
androidx.camera.core.UseCaseConfigFactory -> androidx.camera.core.z0:
androidx.camera.core.UseCaseEventConfig -> androidx.camera.core.a1:
    31:31:void <clinit>() -> <clinit>
androidx.camera.core.UseCaseGroup -> androidx.camera.core.b1:
    void clear() -> a
    boolean isActive() -> b
    void start() -> c
    void stop() -> d
androidx.camera.core.UseCaseGroup$StateChangeListener -> androidx.camera.core.b1$a:
androidx.camera.core.UseCaseGroupLifecycleController -> androidx.camera.core.UseCaseGroupLifecycleController:
    androidx.camera.core.UseCaseGroup mUseCaseGroup -> b
    java.lang.Object mUseCaseGroupLock -> a
    89:91:androidx.camera.core.UseCaseGroup getUseCaseGroup() -> a
    64:66:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    50:52:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    57:59:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
androidx.camera.core.UseCaseGroupRepository -> androidx.camera.core.c1:
    java.util.Map mLifecycleToUseCaseGroupControllerMap -> b
    java.util.List mActiveLifecycleOwnerList -> c
    androidx.lifecycle.LifecycleOwner mCurrentActiveLifecycleOwner -> d
    java.lang.Object mUseCasesLock -> a
    40:49:void <init>() -> <init>
androidx.camera.core.UseCaseGroupRepository$2 -> androidx.camera.core.UseCaseGroupRepository$2:
    androidx.camera.core.UseCaseGroupRepository this$0 -> a
    185:187:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    139:153:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    161:175:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
androidx.camera.core.VideoCaptureConfig -> androidx.camera.core.d1:
    androidx.camera.core.OptionsBundle mConfig -> c
    46:60:void <clinit>() -> <clinit>
    276:276:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> a
    284:284:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> a
    291:292:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> a
    298:298:java.util.Set listOptions() -> a
    340:340:java.lang.String getTargetName(java.lang.String) -> a
androidx.camera.core.impl.utils.Absent -> androidx.camera.core.e1.a.a:
    29:29:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    75:75:boolean equals(java.lang.Object) -> equals
    46:46:java.lang.Object get() -> get
    80:80:int hashCode() -> hashCode
    41:41:boolean isPresent() -> isPresent
    51:51:java.lang.Object or(java.lang.Object) -> or
    58:58:androidx.camera.core.impl.utils.Optional or(androidx.camera.core.impl.utils.Optional) -> or
    63:63:java.lang.Object or(androidx.core.util.Supplier) -> or
    70:70:java.lang.Object orNull() -> orNull
    89:89:java.lang.Object readResolve() -> readResolve
    85:85:java.lang.String toString() -> toString
    33:33:androidx.camera.core.impl.utils.Optional withType() -> withType
androidx.camera.core.impl.utils.Optional -> androidx.camera.core.e1.a.b:
    107:108:void <init>() -> <init>
    79:79:androidx.camera.core.impl.utils.Optional absent() -> absent
    103:103:androidx.camera.core.impl.utils.Optional fromNullable(java.lang.Object) -> fromNullable
    91:91:androidx.camera.core.impl.utils.Optional of(java.lang.Object) -> of
androidx.camera.core.impl.utils.Present -> androidx.camera.core.e1.a.c:
    31:33:void <init>(java.lang.Object) -> <init>
    71:75:boolean equals(java.lang.Object) -> equals
    42:42:java.lang.Object get() -> get
    80:80:int hashCode() -> hashCode
    37:37:boolean isPresent() -> isPresent
    47:49:java.lang.Object or(java.lang.Object) -> or
    54:55:androidx.camera.core.impl.utils.Optional or(androidx.camera.core.impl.utils.Optional) -> or
    60:61:java.lang.Object or(androidx.core.util.Supplier) -> or
    66:66:java.lang.Object orNull() -> orNull
    85:85:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.executor.CameraXExecutors -> androidx.camera.core.e1.a.d.a:
    47:47:java.util.concurrent.Executor directExecutor() -> a
    79:79:java.util.concurrent.Executor newHandlerExecutor(android.os.Handler) -> a
    37:37:java.util.concurrent.Executor mainThreadExecutor() -> b
    70:70:java.util.concurrent.Executor myLooperExecutor() -> c
androidx.camera.core.impl.utils.executor.DirectExecutor -> androidx.camera.core.e1.a.d.b:
    androidx.camera.core.impl.utils.executor.DirectExecutor sDirectExecutor -> a
    25:25:void <init>() -> <init>
    29:36:java.util.concurrent.Executor getInstance() -> a
    43:44:void execute(java.lang.Runnable) -> execute
androidx.camera.core.impl.utils.executor.HandlerAdapterExecutor -> androidx.camera.core.e1.a.d.c:
    java.lang.ThreadLocal sHandlerThreadLocal -> b
    android.os.Handler mHandler -> a
    33:33:void <clinit>() -> <clinit>
    49:51:void <init>(android.os.Handler) -> <init>
    57:68:java.util.concurrent.Executor currentThreadExecutor() -> a
    73:74:void execute(java.lang.Runnable) -> execute
androidx.camera.core.impl.utils.executor.HandlerAdapterExecutor$1 -> androidx.camera.core.e1.a.d.c$a:
    34:34:void <init>() -> <init>
    34:34:java.lang.Object initialValue() -> initialValue
    37:44:java.util.concurrent.Executor initialValue() -> initialValue
androidx.camera.core.impl.utils.executor.MainThreadExecutor -> androidx.camera.core.e1.a.d.d:
    java.util.concurrent.Executor sExecutor -> a
    30:30:void <init>() -> <init>
    33:40:java.util.concurrent.Executor getInstance() -> a
androidx.camera.core.impl.utils.futures.AbstractFuture -> androidx.camera.core.e1.a.e.a:
    java.lang.Object NULL -> j
    androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter mWaiters -> f
    java.util.logging.Logger LOG -> h
    java.lang.Object mValue -> d
    androidx.camera.core.impl.utils.futures.AbstractFuture$AtomicHelper ATOMIC_HELPER -> i
    boolean GENERATE_CANCELLATION_CAUSES -> g
    androidx.camera.core.impl.utils.futures.AbstractFuture$Listener mListeners -> e
    72:266:void <clinit>() -> <clinit>
    361:362:void <init>() -> <init>
    221:247:void removeWaiter(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    696:727:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> a
    745:750:boolean set(java.lang.Object) -> a
    770:775:boolean setException(java.lang.Throwable) -> a
    863:922:java.lang.Object getFutureValue(androidx.concurrent.ListenableFuture) -> a
    939:946:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> a
    958:1003:void complete(androidx.camera.core.impl.utils.futures.AbstractFuture) -> a
    1046:1052:java.lang.Throwable tryInternalFastPathGetFailure() -> a
    1092:1093:androidx.camera.core.impl.utils.futures.AbstractFuture$Listener clearListeners(androidx.camera.core.impl.utils.futures.AbstractFuture$Listener) -> a
    1156:1165:void addDoneString(java.lang.StringBuilder) -> a
    1318:1320:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> a
    557:558:java.lang.Object getDoneValue(java.lang.Object) -> b
    1018:1018:void afterDone() -> b
    1186:1197:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> b
    676:676:void interruptTask() -> c
    1174:1177:java.lang.String userObjectToString(java.lang.Object) -> c
    599:660:boolean cancel(boolean) -> cancel
    1143:1151:java.lang.String pendingToString() -> d
    685:686:boolean wasInterrupted() -> e
    1070:1071:void releaseWaiters() -> f
    401:405:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    514:515:java.lang.Object get() -> get
    579:580:boolean isCancelled() -> isCancelled
    573:574:boolean isDone() -> isDone
    1107:1133:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.futures.AbstractFuture$1 -> androidx.camera.core.e1.a.e.a$a:
androidx.camera.core.impl.utils.futures.AbstractFuture$AtomicHelper -> androidx.camera.core.e1.a.e.a$b:
    1199:1199:void <init>() -> <init>
    1199:1199:void <init>(androidx.camera.core.impl.utils.futures.AbstractFuture$1) -> <init>
    boolean casListeners(androidx.camera.core.impl.utils.futures.AbstractFuture,androidx.camera.core.impl.utils.futures.AbstractFuture$Listener,androidx.camera.core.impl.utils.futures.AbstractFuture$Listener) -> a
    boolean casValue(androidx.camera.core.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object) -> a
    boolean casWaiters(androidx.camera.core.impl.utils.futures.AbstractFuture,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    void putNext(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    void putThread(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread) -> a
androidx.camera.core.impl.utils.futures.AbstractFuture$Cancellation -> androidx.camera.core.e1.a.e.a$c:
    androidx.camera.core.impl.utils.futures.AbstractFuture$Cancellation CAUSELESS_INTERRUPTED -> c
    java.lang.Throwable mCause -> b
    androidx.camera.core.impl.utils.futures.AbstractFuture$Cancellation CAUSELESS_CANCELLED -> d
    boolean mWasInterrupted -> a
    291:298:void <clinit>() -> <clinit>
    303:306:void <init>(boolean,java.lang.Throwable) -> <init>
androidx.camera.core.impl.utils.futures.AbstractFuture$Failure -> androidx.camera.core.e1.a.e.a$d:
    java.lang.Throwable mException -> a
    270:270:void <clinit>() -> <clinit>
    279:281:void <init>(java.lang.Throwable) -> <init>
androidx.camera.core.impl.utils.futures.AbstractFuture$Failure$1 -> androidx.camera.core.e1.a.e.a$d$a:
    271:271:void <init>(java.lang.String) -> <init>
    274:274:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.camera.core.impl.utils.futures.AbstractFuture$Listener -> androidx.camera.core.e1.a.e.a$e:
    java.util.concurrent.Executor mExecutor -> b
    androidx.camera.core.impl.utils.futures.AbstractFuture$Listener mNext -> c
    androidx.camera.core.impl.utils.futures.AbstractFuture$Listener TOMBSTONE -> d
    java.lang.Runnable mTask -> a
    251:251:void <clinit>() -> <clinit>
    259:262:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
androidx.camera.core.impl.utils.futures.AbstractFuture$SafeAtomicHelper -> androidx.camera.core.e1.a.e.a$f:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater mWaiterNextUpdater -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater mWaitersUpdater -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater mWaiterThreadUpdater -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater mListenersUpdater -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater mValueUpdater -> e
    1229:1235:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1239:1240:void putThread(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread) -> a
    1244:1245:void putNext(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    1249:1249:boolean casWaiters(androidx.camera.core.impl.utils.futures.AbstractFuture,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    1254:1254:boolean casListeners(androidx.camera.core.impl.utils.futures.AbstractFuture,androidx.camera.core.impl.utils.futures.AbstractFuture$Listener,androidx.camera.core.impl.utils.futures.AbstractFuture$Listener) -> a
    1259:1259:boolean casValue(androidx.camera.core.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object) -> a
androidx.camera.core.impl.utils.futures.AbstractFuture$SetFuture -> androidx.camera.core.e1.a.e.a$g:
    androidx.camera.core.impl.utils.futures.AbstractFuture mOwner -> d
    androidx.concurrent.ListenableFuture mFuture -> e
    321:329:void run() -> run
androidx.camera.core.impl.utils.futures.AbstractFuture$SynchronizedHelper -> androidx.camera.core.e1.a.e.a$h:
    1271:1271:void <init>() -> <init>
    1274:1275:void putThread(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread) -> a
    1279:1280:void putNext(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    1284:1290:boolean casWaiters(androidx.camera.core.impl.utils.futures.AbstractFuture,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter,androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    1295:1301:boolean casListeners(androidx.camera.core.impl.utils.futures.AbstractFuture,androidx.camera.core.impl.utils.futures.AbstractFuture$Listener,androidx.camera.core.impl.utils.futures.AbstractFuture$Listener) -> a
    1306:1312:boolean casValue(androidx.camera.core.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object) -> a
androidx.camera.core.impl.utils.futures.AbstractFuture$Trusted -> androidx.camera.core.e1.a.e.a$i:
androidx.camera.core.impl.utils.futures.AbstractFuture$TrustedFuture -> androidx.camera.core.e1.a.e.a$j:
    89:89:void <init>() -> <init>
    113:114:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> a
    118:118:boolean cancel(boolean) -> cancel
    92:92:java.lang.Object get() -> get
    98:98:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    108:108:boolean isCancelled() -> isCancelled
    103:103:boolean isDone() -> isDone
androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter -> androidx.camera.core.e1.a.e.a$k:
    java.lang.Thread mThread -> a
    androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter TOMBSTONE -> c
    androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter mNext -> b
    173:173:void <clinit>() -> <clinit>
    182:183:void <init>(boolean) -> <init>
    185:188:void <init>() -> <init>
    193:194:void setNext(androidx.camera.core.impl.utils.futures.AbstractFuture$Waiter) -> a
    201:206:void unpark() -> a
androidx.camera.core.impl.utils.futures.AggregateFuture -> androidx.camera.core.e1.a.e.b:
    java.util.logging.Logger sLogger -> l
    androidx.camera.core.impl.utils.futures.AggregateFuture$RunningState mRunningState -> k
    41:41:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    90:92:void init(androidx.camera.core.impl.utils.futures.AggregateFuture$RunningState) -> a
    298:311:boolean addCausalChain(java.util.Set,java.lang.Throwable) -> a
    53:72:void afterDone() -> b
    76:85:java.lang.String pendingToString() -> d
androidx.camera.core.impl.utils.futures.AggregateFuture$RunningState -> androidx.camera.core.e1.a.e.b$a:
    androidx.camera.core.impl.utils.futures.AggregateFuture this$0 -> k
    boolean mAllMustSucceed -> i
    boolean mCollectsValues -> j
    java.util.Collection mFutures -> h
    103:108:void <init>(androidx.camera.core.impl.utils.futures.AggregateFuture,java.util.Collection,boolean,boolean) -> <init>
    void collectOneValue(boolean,int,java.lang.Object) -> a
    175:203:void handleException(java.lang.Throwable) -> a
    207:210:void addInitialException(java.util.Set) -> a
    217:247:void handleOneInputDone(int,java.util.concurrent.Future) -> a
    250:255:void decrementCountAndMaybeComplete() -> c
    void handleAllCompleted() -> d
    124:166:void init() -> e
    293:293:void interruptTask() -> f
    278:279:void releaseResourcesAfterFailure() -> g
    261:268:void processCompleted() -> h
    113:114:void run() -> run
androidx.camera.core.impl.utils.futures.AggregateFuture$RunningState$1 -> androidx.camera.core.e1.a.e.b$a$a:
    int val$index -> d
    androidx.camera.core.impl.utils.futures.AggregateFuture$RunningState this$1 -> f
    androidx.concurrent.ListenableFuture val$listenable -> e
    146:146:void <init>(androidx.camera.core.impl.utils.futures.AggregateFuture$RunningState,int,androidx.concurrent.ListenableFuture) -> <init>
    150:152:void run() -> run
androidx.camera.core.impl.utils.futures.AggregateFutureState -> androidx.camera.core.e1.a.e.c:
    androidx.camera.core.impl.utils.futures.AggregateFutureState$AtomicHelper ATOMIC_HELPER -> f
    java.util.Set mSeenExceptions -> d
    java.util.logging.Logger sLogger -> g
    int mRemaining -> e
    53:79:void <clinit>() -> <clinit>
    81:83:void <init>(int) -> <init>
    void addInitialException(java.util.Set) -> a
    132:132:int decrementRemainingAndGet() -> a
    104:125:java.util.Set getOrInitSeenExceptions() -> b
androidx.camera.core.impl.utils.futures.AggregateFutureState$1 -> androidx.camera.core.e1.a.e.c$a:
androidx.camera.core.impl.utils.futures.AggregateFutureState$AtomicHelper -> androidx.camera.core.e1.a.e.c$b:
    135:135:void <init>() -> <init>
    135:135:void <init>(androidx.camera.core.impl.utils.futures.AggregateFutureState$1) -> <init>
    void compareAndSetSeenExceptions(androidx.camera.core.impl.utils.futures.AggregateFutureState,java.util.Set,java.util.Set) -> a
    int decrementAndGetRemainingCount(androidx.camera.core.impl.utils.futures.AggregateFutureState) -> a
androidx.camera.core.impl.utils.futures.AggregateFutureState$SafeAtomicHelper -> androidx.camera.core.e1.a.e.c$c:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater mRemainingCountUpdater -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater mSeenExceptionsUpdater -> a
    152:155:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicIntegerFieldUpdater) -> <init>
    160:161:void compareAndSetSeenExceptions(androidx.camera.core.impl.utils.futures.AggregateFutureState,java.util.Set,java.util.Set) -> a
    165:165:int decrementAndGetRemainingCount(androidx.camera.core.impl.utils.futures.AggregateFutureState) -> a
androidx.camera.core.impl.utils.futures.AggregateFutureState$SynchronizedAtomicHelper -> androidx.camera.core.e1.a.e.c$d:
    169:169:void <init>() -> <init>
    173:177:void compareAndSetSeenExceptions(androidx.camera.core.impl.utils.futures.AggregateFutureState,java.util.Set,java.util.Set) -> a
    182:185:int decrementAndGetRemainingCount(androidx.camera.core.impl.utils.futures.AggregateFutureState) -> a
androidx.camera.core.impl.utils.futures.CollectionFuture -> androidx.camera.core.e1.a.e.d:
    33:33:void <init>() -> <init>
androidx.camera.core.impl.utils.futures.CollectionFuture$CollectionFutureRunningState -> androidx.camera.core.e1.a.e.d$a:
    androidx.camera.core.impl.utils.futures.CollectionFuture this$0 -> m
    java.util.List mValues -> l
    40:52:void <init>(androidx.camera.core.impl.utils.futures.CollectionFuture,java.util.Collection,boolean) -> <init>
    java.lang.Object combine(java.util.List) -> a
    56:68:void collectOneValue(boolean,int,java.lang.Object) -> a
    72:78:void handleAllCompleted() -> d
    82:84:void releaseResourcesAfterFailure() -> g
androidx.camera.core.impl.utils.futures.CollectionFuture$ListFuture -> androidx.camera.core.e1.a.e.d$b:
    93:95:void <init>(java.util.Collection,boolean) -> <init>
androidx.camera.core.impl.utils.futures.CollectionFuture$ListFuture$ListFutureRunningState -> androidx.camera.core.e1.a.e.d$b$a:
    100:102:void <init>(androidx.camera.core.impl.utils.futures.CollectionFuture$ListFuture,java.util.Collection,boolean) -> <init>
    97:97:java.lang.Object combine(java.util.List) -> a
    106:110:java.util.List combine(java.util.List) -> a
androidx.camera.core.impl.utils.futures.Futures -> androidx.camera.core.e1.a.e.e:
    43:47:androidx.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> a
    100:100:androidx.concurrent.ListenableFuture successfulAsList(java.util.Collection) -> a
    193:194:java.lang.Object getDone(java.util.concurrent.Future) -> a
    204:211:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> b
androidx.camera.core.impl.utils.futures.ImmediateFuture -> androidx.camera.core.e1.a.e.f:
    androidx.camera.core.impl.utils.futures.ImmediateFuture NULL_FUTURE -> e
    java.lang.Object mValue -> d
    38:38:void <clinit>() -> <clinit>
    43:45:void <init>(java.lang.Object) -> <init>
    55:56:androidx.concurrent.ListenableFuture nullFuture() -> a
    61:73:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> a
    77:77:boolean cancel(boolean) -> cancel
    93:93:java.lang.Object get() -> get
    99:99:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    82:82:boolean isCancelled() -> isCancelled
    87:87:boolean isDone() -> isDone
    105:105:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.futures.internal.InternalFutureFailureAccess -> androidx.camera.core.e1.a.e.g.a:
    39:39:void <init>() -> <init>
    java.lang.Throwable tryInternalFastPathGetFailure() -> a
androidx.camera.core.impl.utils.futures.internal.InternalFutures -> androidx.camera.core.e1.a.e.g.b:
    50:50:java.lang.Throwable tryInternalFastPathGetFailure(androidx.camera.core.impl.utils.futures.internal.InternalFutureFailureAccess) -> a
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    android.graphics.Rect mShadowBounds -> i
    boolean mPreventCornerOverlap -> e
    int mUserSetMinWidth -> f
    int mUserSetMinHeight -> g
    android.graphics.Rect mContentPadding -> h
    androidx.cardview.widget.CardViewImpl IMPL -> l
    int[] COLOR_BACKGROUND_ATTR -> k
    androidx.cardview.widget.CardViewDelegate mCardViewDelegate -> j
    boolean mCompatPadding -> d
    81:93:void <clinit>() -> <clinit>
    113:114:void <init>(android.content.Context) -> <init>
    117:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    121:164:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> a
    79:79:void access$101(androidx.cardview.widget.CardView,int) -> a
    226:228:void setContentPadding(int,int,int,int) -> a
    79:79:void access$201(androidx.cardview.widget.CardView,int) -> b
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$a:
    androidx.cardview.widget.CardView this$0 -> b
    android.graphics.drawable.Drawable mCardBackground -> a
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    452:454:void setCardBackground(android.graphics.drawable.Drawable) -> a
    468:471:void setShadowPadding(int,int,int,int) -> a
    475:481:void setMinWidthHeightInternal(int,int) -> a
    490:490:android.view.View getCardView() -> a
    458:458:boolean getUseCompatPadding() -> b
    485:485:android.graphics.drawable.Drawable getCardBackground() -> c
    463:463:boolean getPreventCornerOverlap() -> d
androidx.cardview.widget.CardViewApi17Impl -> androidx.cardview.widget.a:
    25:25:void <init>() -> <init>
    29:37:void initStatic() -> a
androidx.cardview.widget.CardViewApi17Impl$1 -> androidx.cardview.widget.a$a:
    30:30:void <init>(androidx.cardview.widget.CardViewApi17Impl) -> <init>
    34:35:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.b:
    26:26:void <init>() -> <init>
    31:38:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    47:47:void initStatic() -> a
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    78:79:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    113:114:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    42:43:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    51:54:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    103:104:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    108:109:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    88:99:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> j
androidx.cardview.widget.CardViewBaseImpl -> androidx.cardview.widget.c:
    android.graphics.RectF mCornerRect -> a
    27:29:void <init>() -> <init>
    37:78:void initStatic() -> a
    83:88:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    93:93:androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    120:121:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    141:142:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    157:157:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    130:132:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    136:136:float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    151:153:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    167:167:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    162:162:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    110:110:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    125:125:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    114:116:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    146:146:float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    99:105:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
    171:171:androidx.cardview.widget.RoundRectDrawableWithShadow getShadowBackground(androidx.cardview.widget.CardViewDelegate) -> j
androidx.cardview.widget.CardViewBaseImpl$1 -> androidx.cardview.widget.c$a:
    androidx.cardview.widget.CardViewBaseImpl this$0 -> a
    38:38:void <init>(androidx.cardview.widget.CardViewBaseImpl) -> <init>
    42:76:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
androidx.cardview.widget.CardViewDelegate -> androidx.cardview.widget.d:
    android.view.View getCardView() -> a
    void setCardBackground(android.graphics.drawable.Drawable) -> a
    void setMinWidthHeightInternal(int,int) -> a
    void setShadowPadding(int,int,int,int) -> a
    boolean getUseCompatPadding() -> b
    android.graphics.drawable.Drawable getCardBackground() -> c
    boolean getPreventCornerOverlap() -> d
androidx.cardview.widget.CardViewImpl -> androidx.cardview.widget.e:
    float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    void initStatic() -> a
    void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.f:
    android.graphics.PorterDuff$Mode mTintMode -> k
    android.graphics.RectF mBoundsF -> c
    float mPadding -> e
    android.graphics.Paint mPaint -> b
    android.content.res.ColorStateList mBackground -> h
    boolean mInsetForPadding -> f
    boolean mInsetForRadius -> g
    android.content.res.ColorStateList mTint -> j
    float mRadius -> a
    android.graphics.Rect mBoundsI -> d
    android.graphics.PorterDuffColorFilter mTintFilter -> i
    55:62:void <init>(android.content.res.ColorStateList,float) -> <init>
    70:79:void setPadding(float,boolean,boolean) -> a
    105:117:void updateBounds(android.graphics.Rect) -> a
    131:137:void setRadius(float) -> a
    159:161:void setColor(android.content.res.ColorStateList) -> a
    164:164:android.content.res.ColorStateList getColor() -> a
    206:207:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
    65:67:void setBackground(android.content.res.ColorStateList) -> b
    82:82:float getPadding() -> b
    155:155:float getRadius() -> c
    87:102:void draw(android.graphics.Canvas) -> draw
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.g:
    int mShadowEndColor -> n
    float mRawShadowSize -> j
    boolean mAddPaddingForCorners -> o
    float mShadowSize -> i
    int mShadowStartColor -> m
    boolean mPrintedShadowClipWarning -> p
    float mRawMaxShadowSize -> h
    float mCornerRadius -> f
    android.graphics.RectF mCardBounds -> e
    boolean mDirty -> l
    android.graphics.Path mCornerShadowPath -> g
    int mInsetShadow -> a
    androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper -> r
    android.graphics.Paint mEdgeShadowPaint -> d
    double COS_45 -> q
    android.graphics.Paint mCornerShadowPaint -> c
    android.graphics.Paint mPaint -> b
    android.content.res.ColorStateList mBackground -> k
    41:41:void <clinit>() -> <clinit>
    92:105:void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    124:126:void setAddPaddingForCorners(boolean) -> a
    142:143:void setShadowSize(float,float) -> a
    189:192:float calculateHorizontalPadding(float,float,boolean) -> a
    224:225:void setCornerRadius(float) -> a
    249:294:void drawShadow(android.graphics.Canvas) -> a
    345:346:void getMaxShadowAndCornerPadding(android.graphics.Rect) -> a
    377:379:void setColor(android.content.res.ColorStateList) -> a
    382:382:android.content.res.ColorStateList getColor() -> a
    108:110:void setBackground(android.content.res.ColorStateList) -> b
    180:183:float calculateVerticalPadding(float,float,boolean) -> b
    334:338:void buildComponents(android.graphics.Rect) -> b
    341:341:float getCornerRadius() -> b
    353:354:void setMaxShadowSize(float) -> b
    349:350:void setShadowSize(float) -> c
    361:361:float getMaxShadowSize() -> c
    116:120:int toEven(float) -> d
    371:373:float getMinHeight() -> d
    238:246:void draw(android.graphics.Canvas) -> draw
    365:367:float getMinWidth() -> e
    357:357:float getShadowSize() -> f
    297:328:void buildShadowCorners() -> g
    220:220:int getOpacity() -> getOpacity
    170:175:boolean getPadding(android.graphics.Rect) -> getPadding
    210:210:boolean isStateful() -> isStateful
    137:139:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    198:205:boolean onStateChange(int[]) -> onStateChange
    130:133:void setAlpha(int) -> setAlpha
    215:216:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper -> androidx.cardview.widget.g$a:
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
androidx.collection.ArrayMap -> a.b.a:
    androidx.collection.MapCollections mCollections -> k
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    164:164:boolean retainAll(java.util.Collection) -> a
    75:123:androidx.collection.MapCollections getCollection() -> b
    182:182:java.util.Set entrySet() -> entrySet
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> a.b.a$a:
    androidx.collection.ArrayMap this$0 -> d
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    84:84:java.lang.Object colGetEntry(int,int) -> a
    89:89:int colIndexOfKey(java.lang.Object) -> a
    104:105:void colPut(java.lang.Object,java.lang.Object) -> a
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> a
    114:115:void colRemoveAt(int) -> a
    119:120:void colClear() -> a
    94:94:int colIndexOfValue(java.lang.Object) -> b
    99:99:java.util.Map colGetMap() -> b
    79:79:int colGetSize() -> c
androidx.collection.ArraySet -> a.b.b:
    java.lang.Object[] mArray -> e
    int[] INT -> h
    int sTwiceBaseCacheSize -> m
    androidx.collection.MapCollections mCollections -> g
    int sBaseCacheSize -> k
    int[] mHashes -> d
    java.lang.Object[] sTwiceBaseCache -> l
    int mSize -> f
    java.lang.Object[] sBaseCache -> j
    java.lang.Object[] OBJECT -> i
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    83:117:int indexOf(java.lang.Object,int) -> a
    200:233:void freeArrays(int[],java.lang.Object[],int) -> a
    295:305:void ensureCapacity(int) -> a
    325:325:int indexOf(java.lang.Object) -> a
    634:682:androidx.collection.MapCollections getCollection() -> a
    359:402:boolean add(java.lang.Object) -> add
    719:724:boolean addAll(java.util.Collection) -> addAll
    121:155:int indexOfNull() -> b
    447:494:java.lang.Object removeAt(int) -> b
    335:335:java.lang.Object valueAt(int) -> c
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    160:196:void allocArrays(int) -> d
    559:582:boolean equals(java.lang.Object) -> equals
    590:595:int hashCode() -> hashCode
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
androidx.collection.ArraySet$1 -> a.b.b$a:
    androidx.collection.ArraySet this$0 -> d
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    643:643:java.lang.Object colGetEntry(int,int) -> a
    648:648:int colIndexOfKey(java.lang.Object) -> a
    663:664:void colPut(java.lang.Object,java.lang.Object) -> a
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> a
    673:674:void colRemoveAt(int) -> a
    678:679:void colClear() -> a
    653:653:int colIndexOfValue(java.lang.Object) -> b
    658:658:java.util.Map colGetMap() -> b
    638:638:int colGetSize() -> c
androidx.collection.ContainerHelpers -> a.b.c:
    java.lang.Object[] EMPTY_OBJECTS -> c
    long[] EMPTY_LONGS -> b
    int[] EMPTY_INTS -> a
    20:22:void <clinit>() -> <clinit>
    33:37:int idealByteArraySize(int) -> a
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> a
    46:61:int binarySearch(int[],int,int) -> a
    65:80:int binarySearch(long[],int,long) -> a
    25:25:int idealIntArraySize(int) -> b
    29:29:int idealLongArraySize(int) -> c
androidx.collection.LongSparseArray -> a.b.d:
    java.lang.Object DELETED -> h
    long[] mKeys -> e
    int mSize -> g
    java.lang.Object[] mValues -> f
    boolean mGarbage -> d
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    132:133:void delete(long) -> a
    353:357:long keyAt(int) -> a
    440:449:void clear() -> a
    456:483:void append(long,java.lang.Object) -> a
    109:109:java.lang.Object get(long) -> b
    118:121:java.lang.Object get(long,java.lang.Object) -> b
    171:175:void removeAt(int) -> b
    327:331:int size() -> b
    217:240:void gc() -> c
    248:292:void put(long,java.lang.Object) -> c
    373:377:java.lang.Object valueAt(int) -> c
    399:403:int indexOfKey(long) -> c
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    139:147:void remove(long) -> d
    494:515:java.lang.String toString() -> toString
androidx.collection.LruCache -> a.b.e:
    java.util.LinkedHashMap map -> a
    int missCount -> h
    int evictionCount -> f
    int hitCount -> g
    int putCount -> d
    int createCount -> e
    int size -> b
    int maxSize -> c
    51:53:void <init>(int) -> <init>
    138:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    171:187:void trimToSize(int) -> a
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    255:255:java.lang.Object create(java.lang.Object) -> a
    83:84:java.lang.Object get(java.lang.Object) -> b
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> b
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    348:347:java.lang.String toString() -> toString
androidx.collection.MapCollections -> a.b.f:
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    32:32:void <init>() -> <init>
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    void colPut(java.lang.Object,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Map colGetMap() -> b
    int colIndexOfValue(java.lang.Object) -> b
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    490:495:java.lang.Object[] toArrayHelper(int) -> b
    int colGetSize() -> c
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    533:536:java.util.Set getEntrySet() -> d
    540:543:java.util.Set getKeySet() -> e
    547:550:java.util.Collection getValues() -> f
androidx.collection.MapCollections$ArrayIterator -> a.b.f$a:
    androidx.collection.MapCollections this$0 -> h
    int mIndex -> f
    int mOffset -> d
    boolean mCanRemove -> g
    int mSize -> e
    43:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> a.b.f$b:
    androidx.collection.MapCollections this$0 -> d
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    170:170:boolean add(java.util.Map$Entry) -> a
    167:167:boolean add(java.lang.Object) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> a.b.f$c:
    androidx.collection.MapCollections this$0 -> d
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> a.b.f$d:
    androidx.collection.MapCollections this$0 -> g
    boolean mEntryValid -> f
    int mEnd -> d
    int mIndex -> e
    79:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> a.b.f$e:
    androidx.collection.MapCollections this$0 -> d
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> a.b.g:
    java.lang.Object[] mArray -> e
    int mTwiceBaseCacheSize -> j
    int mBaseCacheSize -> h
    int[] mHashes -> d
    int mSize -> f
    java.lang.Object[] mTwiceBaseCache -> i
    java.lang.Object[] mBaseCache -> g
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    77:80:int binarySearchHashes(int[],int,int) -> a
    88:122:int indexOf(java.lang.Object,int) -> a
    126:160:int indexOfNull() -> a
    201:230:void freeArrays(int[],java.lang.Object[],int) -> a
    289:301:void ensureCapacity(int) -> a
    322:322:int indexOfKey(java.lang.Object) -> a
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> a
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> a
    326:341:int indexOfValue(java.lang.Object) -> b
    390:390:java.lang.Object keyAt(int) -> b
    570:623:java.lang.Object removeAt(int) -> c
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    399:399:java.lang.Object valueAt(int) -> d
    165:197:void allocArrays(int) -> e
    681:735:boolean equals(java.lang.Object) -> equals
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    419:419:boolean isEmpty() -> isEmpty
    432:482:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
androidx.collection.SparseArrayCompat -> a.b.h:
    java.lang.Object DELETED -> h
    int[] mKeys -> e
    int mSize -> g
    java.lang.Object[] mValues -> f
    boolean mGarbage -> d
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    109:109:java.lang.Object get(int) -> a
    419:427:int indexOfValue(java.lang.Object) -> a
    444:453:void clear() -> a
    460:487:void append(int,java.lang.Object) -> a
    118:121:java.lang.Object get(int,java.lang.Object) -> b
    340:344:int size() -> b
    401:405:int indexOfKey(int) -> b
    230:253:void gc() -> c
    261:305:void put(int,java.lang.Object) -> c
    361:365:int keyAt(int) -> c
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    139:147:void remove(int) -> d
    375:379:java.lang.Object valueAt(int) -> e
    498:519:java.lang.String toString() -> toString
androidx.concurrent.ListenableFuture -> a.c.a:
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> a
androidx.constraintlayout.solver.ArrayLinkedVariables -> a.d.a.a:
    int[] mArrayIndices -> f
    int[] mArrayNextIndices -> g
    androidx.constraintlayout.solver.ArrayRow mRow -> b
    int mLast -> j
    androidx.constraintlayout.solver.SolverVariable candidate -> e
    androidx.constraintlayout.solver.Cache mCache -> c
    boolean mDidFillOnce -> k
    float[] mArrayValues -> h
    int mHead -> i
    int ROW_SIZE -> d
    int currentSize -> a
    100:108:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    117:213:void put(androidx.constraintlayout.solver.SolverVariable,float) -> a
    225:335:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> a
    345:378:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> a
    385:399:void clear() -> a
    408:419:boolean containsKey(androidx.constraintlayout.solver.SolverVariable) -> a
    458:464:void divideByAmount(float) -> a
    491:491:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> a
    506:570:androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> a
    583:614:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean) -> a
    626:660:void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[]) -> a
    691:714:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable) -> a
    724:732:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> a
    443:449:void invert() -> b
    742:750:float getVariableValue(int) -> b
    759:767:float get(androidx.constraintlayout.solver.SolverVariable) -> b
    798:807:java.lang.String toString() -> toString
androidx.constraintlayout.solver.ArrayRow -> a.d.a.b:
    androidx.constraintlayout.solver.SolverVariable variable -> a
    androidx.constraintlayout.solver.ArrayLinkedVariables variables -> d
    boolean isSimpleDefinition -> e
    float constantValue -> b
    boolean used -> c
    33:35:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    133:149:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> a
    153:154:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> a
    160:178:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> a
    215:243:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> a
    278:320:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> a
    324:326:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> a
    331:334:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> a
    351:355:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> a
    391:396:void ensurePositiveConstant() -> a
    407:418:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> a
    450:450:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> a
    466:476:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> a
    480:493:void addError(androidx.constraintlayout.solver.SolverVariable) -> a
    38:38:boolean hasKeyVariable() -> b
    110:110:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> b
    114:118:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> b
    189:207:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> b
    369:374:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> b
    122:129:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> c
    422:422:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> c
    445:445:boolean isEmpty() -> c
    455:458:void clear() -> clear
    103:107:void reset() -> d
    426:439:void pivot(androidx.constraintlayout.solver.SolverVariable) -> d
    50:99:java.lang.String toReadableString() -> e
    497:497:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    46:46:java.lang.String toString() -> toString
androidx.constraintlayout.solver.Cache -> a.d.a.c:
    androidx.constraintlayout.solver.Pools$Pool solverVariablePool -> b
    androidx.constraintlayout.solver.Pools$Pool arrayRowPool -> a
    androidx.constraintlayout.solver.SolverVariable[] mIndexedVariables -> c
    21:24:void <init>() -> <init>
androidx.constraintlayout.solver.GoalRow -> a.d.a.d:
    22:23:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    27:31:void addError(androidx.constraintlayout.solver.SolverVariable) -> a
androidx.constraintlayout.solver.LinearSystem -> a.d.a.e:
    int mPoolVariablesCount -> n
    int mNumRows -> j
    int mMaxRows -> k
    int mNumColumns -> i
    java.util.HashMap mVariables -> b
    int TABLE_SIZE -> d
    int mMaxColumns -> e
    androidx.constraintlayout.solver.Metrics sMetrics -> q
    androidx.constraintlayout.solver.LinearSystem$Row mGoal -> c
    int mVariablesID -> a
    androidx.constraintlayout.solver.ArrayRow[] mRows -> f
    boolean[] mAlreadyTestedCandidates -> h
    androidx.constraintlayout.solver.SolverVariable[] mPoolVariables -> m
    androidx.constraintlayout.solver.LinearSystem$Row mTempGoal -> o
    boolean graphOptimizer -> g
    androidx.constraintlayout.solver.Cache mCache -> l
    int POOL_SIZE -> p
    37:37:void <clinit>() -> <clinit>
    78:84:void <init>() -> <init>
    170:196:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> a
    226:237:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> a
    249:260:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> a
    283:296:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> a
    305:318:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> a
    416:441:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> a
    461:535:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> a
    559:691:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> a
    1029:1039:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean) -> a
    1098:1104:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> a
    1110:1116:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> a
    1128:1134:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> a
    1146:1166:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> a
    1230:1234:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean) -> a
    1329:1347:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> a
    200:207:androidx.constraintlayout.solver.ArrayRow createRow() -> b
    241:242:void addError(androidx.constraintlayout.solver.ArrayRow) -> b
    344:348:int getObjectVariableValue(java.lang.Object) -> b
    700:843:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> b
    1003:1012:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> b
    1067:1077:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean) -> b
    211:222:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> c
    538:550:void addRow(androidx.constraintlayout.solver.ArrayRow) -> c
    1052:1061:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> c
    448:454:void updateRowFromVariables(androidx.constraintlayout.solver.ArrayRow) -> d
    967:967:androidx.constraintlayout.solver.Cache getCache() -> d
    377:409:void minimize() -> e
    142:163:void reset() -> f
    847:851:void computeValues() -> g
    91:91:androidx.constraintlayout.solver.Metrics getMetrics() -> h
    112:123:void increaseTableSize() -> i
    129:136:void releaseRows() -> j
androidx.constraintlayout.solver.LinearSystem$Row -> a.d.a.e$a:
    void addError(androidx.constraintlayout.solver.SolverVariable) -> a
    androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> a
    void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> a
androidx.constraintlayout.solver.Metrics -> a.d.a.f:
    long iterations -> i
    long bfs -> k
    long minimize -> e
    long simpleconstraints -> g
    long measures -> a
    long resolutions -> c
    long barrierConnectionResolved -> y
    long maxRows -> u
    long matchConnectionResolved -> w
    long graphOptimizer -> q
    long minimizeGoal -> s
    long slackvariables -> m
    long maxTableSize -> o
    long pivots -> j
    long errors -> l
    long constraints -> f
    long optimize -> h
    long additionalMeasures -> b
    long lastTableSize -> A
    long tableSizeIncrease -> d
    long nonresolvedWidgets -> z
    long centerConnectionResolved -> v
    long chainConnectionResolved -> x
    long resolvedWidgets -> r
    long maxVariables -> t
    long extravariables -> n
    long fullySolved -> p
androidx.constraintlayout.solver.Pools$Pool -> a.d.a.g:
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
    void releaseAll(java.lang.Object[],int) -> a
androidx.constraintlayout.solver.Pools$SimplePool -> a.d.a.h:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    96:98:void <init>(int) -> <init>
    106:113:java.lang.Object acquire() -> a
    123:128:boolean release(java.lang.Object) -> a
    133:148:void releaseAll(java.lang.Object[],int) -> a
androidx.constraintlayout.solver.SolverVariable -> a.d.a.i:
    int usageInRowCount -> j
    int uniqueErrorId -> k
    androidx.constraintlayout.solver.SolverVariable$Type mType -> g
    float computedValue -> e
    int mClientEquationsCount -> i
    float[] strengthVector -> f
    java.lang.String mName -> a
    int strength -> d
    int id -> b
    int definitionId -> c
    androidx.constraintlayout.solver.ArrayRow[] mClientEquations -> h
    41:45:void <clinit>() -> <clinit>
    119:124:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    163:173:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> a
    197:205:void reset() -> a
    218:222:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> a
    89:90:void increaseErrorId() -> b
    176:186:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> b
    189:194:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow) -> c
    229:235:java.lang.String toString() -> toString
androidx.constraintlayout.solver.SolverVariable$Type -> a.d.a.i$a:
    androidx.constraintlayout.solver.SolverVariable$Type[] $VALUES -> d
    69:65:void <clinit>() -> <clinit>
    65:65:void <init>(java.lang.String,int) -> <init>
    65:65:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    65:65:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.widgets.Analyzer -> a.d.a.j.a:
    45:100:void determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> a
    110:112:boolean determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.List,boolean) -> a
    128:223:boolean traverse(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,java.util.List,boolean) -> a
    260:263:void invalidate(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup) -> a
    274:287:int getMaxDimension(androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,int) -> a
    304:413:int getMaxDimensionTraversal(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean,int) -> a
    417:422:void setConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> a
    444:454:void setPosition(java.util.List,int,int) -> a
    467:495:void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int) -> a
    505:522:int getParentBiasOffset(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    532:548:int resolveDimensionRatio(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    431:433:void singleGroup(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> b
androidx.constraintlayout.solver.widgets.Barrier -> a.d.a.j.b:
    boolean mAllowsGoneWidget -> o0
    java.util.ArrayList mNodes -> n0
    int mBarrierType -> m0
    28:38:void <init>() -> <init>
    55:57:void resetResolutionNodes() -> F
    132:199:void resolve() -> G
    42:42:boolean allowedInBarrier() -> a
    65:125:void analyze(int) -> a
    209:219:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
    49:49:void setAllowsGoneWidget(boolean) -> c
    46:47:void setBarrierType(int) -> t
androidx.constraintlayout.solver.widgets.Chain -> a.d.a.j.c:
    46:72:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int) -> a
    86:443:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> a
androidx.constraintlayout.solver.widgets.ChainHead -> a.d.a.j.d:
    boolean mIsRtl -> m
    float mTotalWeight -> k
    boolean mHasUndefinedWeights -> n
    int mOrientation -> l
    boolean mHasDefinedWeights -> o
    boolean mHasComplexMatchWeights -> p
    int mWidgetsMatchCount -> j
    androidx.constraintlayout.solver.widgets.ConstraintWidget mFirst -> a
    int mWidgetsCount -> i
    androidx.constraintlayout.solver.widgets.ConstraintWidget mLastVisibleWidget -> d
    androidx.constraintlayout.solver.widgets.ConstraintWidget mHead -> e
    androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstVisibleWidget -> b
    androidx.constraintlayout.solver.widgets.ConstraintWidget mLast -> c
    boolean mDefined -> q
    androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstMatchConstraintWidget -> f
    androidx.constraintlayout.solver.widgets.ConstraintWidget mLastMatchConstraintWidget -> g
    java.util.ArrayList mWeightedMatchConstraintsWidgets -> h
    58:62:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    72:72:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    195:199:void define() -> a
    79:160:void defineChainProperties() -> b
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> a.d.a.j.e:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength mStrength -> g
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType -> c
    androidx.constraintlayout.solver.widgets.ResolutionAnchor mResolutionAnchor -> a
    int mConnectionCreator -> h
    int mGoneMargin -> f
    androidx.constraintlayout.solver.SolverVariable mSolverVariable -> i
    androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner -> b
    int mMargin -> e
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget -> d
    86:89:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    101:106:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> a
    163:163:int getConnectionCreator() -> a
    194:194:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int) -> a
    210:230:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int,boolean) -> a
    268:282:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> a
    125:132:int getMargin() -> b
    112:112:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> c
    58:58:androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode() -> d
    95:95:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> e
    138:138:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength() -> f
    144:144:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> g
    118:118:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> h
    259:259:boolean isConnected() -> i
    175:182:void reset() -> j
    424:424:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1 -> a.d.a.j.e$a:
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type -> a
    279:279:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType -> a.d.a.j.e$b:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] $VALUES -> d
    46:46:void <clinit>() -> <clinit>
    46:46:void <init>(java.lang.String,int) -> <init>
    46:46:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String) -> valueOf
    46:46:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength -> a.d.a.j.e$c:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] $VALUES -> d
    41:41:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String,int) -> <init>
    41:41:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String) -> valueOf
    41:41:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> a.d.a.j.e$d:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] $VALUES -> d
    36:36:void <clinit>() -> <clinit>
    36:36:void <init>(java.lang.String,int) -> <init>
    36:36:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    36:36:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget -> a.d.a.j.f:
    boolean mGroupsToSolver -> d0
    int mOffsetX -> O
    int mMatchConstraintMaxHeight -> l
    int mRelX -> K
    int mMatchConstraintMinWidth -> h
    boolean mOptimizerMeasurable -> b0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline -> w
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft -> s
    float mHorizontalBiasPercent -> V
    androidx.constraintlayout.solver.widgets.ConstraintWidget[] mNextChainWidget -> i0
    int mWrapWidth -> T
    float mResolvedDimensionRatio -> o
    int mOffsetY -> P
    int mRelY -> L
    float mDimensionRatio -> G
    androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors -> A
    int mDimensionRatioSide -> H
    int mVerticalChainStyle -> f0
    int mMatchConstraintMaxWidth -> i
    androidx.constraintlayout.solver.widgets.ConstraintWidget mParent -> D
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenterX -> x
    int mMatchConstraintDefaultWidth -> e
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop -> t
    int mHorizontalResolution -> a
    float mVerticalBiasPercent -> W
    int mVisibility -> Y
    int[] mMaxDimension -> q
    int mWrapHeight -> U
    int mBaselineDistance -> Q
    int mResolvedDimensionRatioSide -> n
    int mDrawX -> M
    float DEFAULT_BIAS -> j0
    androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup mBelongingGroup -> p
    int mX -> I
    boolean mOptimizerMeasured -> c0
    int mMatchConstraintDefaultHeight -> f
    androidx.constraintlayout.solver.widgets.ResolutionDimension mResolutionWidth -> c
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenterY -> y
    int mWidth -> E
    int mVerticalResolution -> b
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight -> u
    java.util.ArrayList mAnchors -> B
    java.lang.Object mCompanionWidget -> X
    int mMinWidth -> R
    float mMatchConstraintPercentHeight -> m
    androidx.constraintlayout.solver.widgets.ConstraintWidget[] mListNextMatchConstraintsWidget -> h0
    int mDrawY -> N
    float mMatchConstraintPercentWidth -> j
    int mY -> J
    int mMatchConstraintMinHeight -> k
    int mHorizontalChainStyle -> e0
    float[] mWeight -> g0
    androidx.constraintlayout.solver.widgets.ResolutionDimension mResolutionHeight -> d
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenter -> z
    int mHeight -> F
    java.lang.String mType -> a0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom -> v
    int[] mResolvedMatchConstraintDefault -> g
    java.lang.String mDebugName -> Z
    float mCircleConstraintAngle -> r
    int mMinHeight -> S
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors -> C
    209:209:void <clinit>() -> <clinit>
    407:409:void <init>() -> <init>
    2270:2274:boolean isInVerticalChain() -> A
    125:125:boolean isSpreadHeight() -> B
    117:117:boolean isSpreadWidth() -> C
    257:324:void reset() -> D
    2057:2068:void resetAnchors() -> E
    334:337:void resetResolutionNodes() -> F
    361:361:void resolve() -> G
    1132:1140:void updateDrawPosition() -> H
    343:346:void updateResolutionNodes() -> I
    456:464:void addAnchors() -> J
    353:354:void analyze(int) -> a
    442:450:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> a
    564:565:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    588:589:void setHeightWrapContent(boolean) -> a
    605:608:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> a
    659:660:void setDebugName(java.lang.String) -> a
    1254:1261:void setHorizontalMatchStyle(int,int,int,float) -> a
    1378:1379:void setHorizontalBiasPercent(float) -> a
    1461:1495:void setFrame(int,int,int,int) -> a
    1505:1511:void setFrame(int,int,int) -> a
    1520:1525:void setHorizontalDimension(int,int) -> a
    1587:1588:void setCompanionWidget(java.lang.Object) -> a
    1677:1677:boolean allowedInBarrier() -> a
    1704:1708:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> a
    2132:2134:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> a
    2203:2207:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> a
    2337:2522:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
    2534:2588:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> a
    2612:2753:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,int,int,int,float,boolean) -> a
    572:573:void setWidthWrapContent(boolean) -> b
    700:707:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> b
    1007:1012:float getBiasPercent(int) -> b
    1050:1050:java.util.ArrayList getAnchors() -> b
    1089:1091:void setOffset(int,int) -> b
    1272:1279:void setVerticalMatchStyle(int,int,int,float) -> b
    1287:1289:void setDimensionRatio(java.lang.String) -> b
    1621:1622:void setHorizontalWeight(float) -> b
    2215:2219:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> b
    1031:1031:int getBaselineDistance() -> c
    1078:1080:void setOrigin(int,int) -> c
    1388:1389:void setVerticalBiasPercent(float) -> c
    2188:2193:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> c
    2865:2882:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> c
    852:857:int getLength(int) -> d
    976:976:int getBottom() -> d
    1564:1569:void setRelativePositioning(int,int) -> d
    1630:1631:void setVerticalWeight(float) -> d
    1041:1041:java.lang.Object getCompanionWidget() -> e
    1534:1539:void setVerticalDimension(int,int) -> e
    1548:1553:int getRelativePositioning(int) -> e
    652:652:java.lang.String getDebugName() -> f
    1577:1578:void setBaselineDistance(int) -> f
    867:867:int getDrawX() -> g
    1225:1229:void setHeight(int) -> g
    876:876:int getDrawY() -> h
    1640:1641:void setHorizontalChainStyle(int) -> h
    113:114:void setMaxHeight(int) -> i
    830:833:int getHeight() -> i
    109:110:void setMaxWidth(int) -> j
    2169:2169:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> j
    555:555:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> k
    1410:1415:void setMinHeight(int) -> k
    394:397:androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionHeight() -> l
    1397:1402:void setMinWidth(int) -> l
    383:386:androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionWidth() -> m
    1660:1661:void setVerticalChainStyle(int) -> m
    634:635:void setVisibility(int) -> n
    967:967:int getRight() -> n
    912:912:int getRootX() -> o
    1213:1217:void setWidth(int) -> o
    922:922:int getRootY() -> p
    1432:1433:void setWrapHeight(int) -> p
    1423:1424:void setWrapWidth(int) -> q
    2178:2178:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> q
    643:643:int getVisibility() -> r
    1059:1060:void setX(int) -> r
    773:776:int getWidth() -> s
    1068:1069:void setY(int) -> s
    842:842:int getWrapHeight() -> t
    2313:2314:boolean isChainHead(int) -> t
    716:716:java.lang.String toString() -> toString
    821:821:int getWrapWidth() -> u
    755:755:int getX() -> v
    764:764:int getY() -> w
    1022:1022:boolean hasBaseline() -> x
    369:375:boolean isFullyResolved() -> y
    2227:2231:boolean isInHorizontalChain() -> z
androidx.constraintlayout.solver.widgets.ConstraintWidget$1 -> a.d.a.j.f$a:
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintWidget$DimensionBehaviour -> b
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type -> a
    2649:1100:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> a.d.a.j.f$b:
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] $VALUES -> d
    143:142:void <clinit>() -> <clinit>
    142:142:void <init>(java.lang.String,int) -> <init>
    142:142:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    142:142:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> a.d.a.j.g:
    int mOptimizationLevel -> C0
    boolean mSkipSolver -> D0
    boolean mWidthMeasuredTooSmall -> E0
    int mWrapFixedWidth -> A0
    boolean mHeightMeasuredTooSmall -> F0
    int mWrapFixedHeight -> B0
    androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray -> u0
    androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray -> v0
    java.util.List mWidgetGroups -> w0
    int mPaddingTop -> p0
    boolean mHorizontalWrapOptimized -> y0
    int mPaddingLeft -> o0
    boolean mGroupsWrapOptimized -> x0
    boolean mVerticalWrapOptimized -> z0
    int mVerticalChainsSize -> t0
    int mHorizontalChainsSize -> s0
    int mPaddingBottom -> r0
    int mPaddingRight -> q0
    androidx.constraintlayout.solver.LinearSystem mSystem -> m0
    androidx.constraintlayout.solver.widgets.Snapshot mSnapshot -> n0
    boolean mIsRtl -> l0
    82:83:void <init>() -> <init>
    146:154:void reset() -> D
    298:570:void layout() -> K
    122:122:int getOptimizationLevel() -> M
    661:661:boolean handlesInternalConstraints() -> N
    164:164:boolean isHeightMeasuredTooSmall() -> O
    267:267:boolean isRtl() -> P
    159:159:boolean isWidthMeasuredTooSmall() -> Q
    630:653:void optimize() -> R
    613:618:void optimizeReset() -> S
    573:575:void preOptimize() -> T
    578:587:void solveGraph() -> U
    718:720:void resetChains() -> V
    222:237:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> a
    280:285:void analyze(int) -> a
    729:735:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    259:260:void setRtl(boolean) -> c
    180:213:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> d
    744:750:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> d
    759:765:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> e
    604:610:void optimizeForDimensions(int,int) -> f
    131:131:boolean optimizeFor(int) -> t
    113:114:void setOptimizationLevel(int) -> u
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup -> a.d.a.j.h:
    java.util.List mConstrainedGroup -> a
    java.util.List mStartHorizontalWidgets -> f
    int[] mGroupDimensions -> e
    java.util.HashSet mWidgetsToSetHorizontal -> h
    java.util.List mWidgetsToSolve -> j
    java.util.List mStartVerticalWidgets -> g
    int mGroupWidth -> b
    int mGroupHeight -> c
    boolean mSkipSolver -> d
    java.util.HashSet mWidgetsToSetVertical -> i
    java.util.List mUnresolvedWidgets -> k
    55:57:void <init>(java.util.List) -> <init>
    59:62:void <init>(java.util.List,boolean) -> <init>
    65:70:java.util.List getStartWidgets(int) -> a
    83:88:void addWidgetsToSet(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    99:112:java.util.List getWidgetsToSolve() -> a
    122:152:void getWidgetsToSolveTraversal(java.util.ArrayList,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    173:244:void updateResolvedDimension(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    74:79:java.util.Set getWidgetsToSet(int) -> b
    158:165:void updateUnresolvedWidgets() -> b
androidx.constraintlayout.solver.widgets.Guideline -> a.d.a.j.i:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mAnchor -> n0
    boolean mIsPositionRelaxed -> p0
    float mRelativePercent -> k0
    int mRelativeBegin -> l0
    int mOrientation -> o0
    int mRelativeEnd -> m0
    50:57:void <init>() -> <init>
    121:121:int getOrientation() -> J
    61:61:boolean allowedInBarrier() -> a
    137:159:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> a
    213:246:void analyze(int) -> a
    250:285:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
    164:164:java.util.ArrayList getAnchors() -> b
    289:304:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> c
    172:177:void setGuidePercent(float) -> e
    180:185:void setGuideBegin(int) -> t
    188:193:void setGuideEnd(int) -> u
    89:104:void setOrientation(int) -> v
androidx.constraintlayout.solver.widgets.Guideline$1 -> a.d.a.j.i$a:
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type -> a
    137:137:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.Helper -> a.d.a.j.j:
    int mWidgetsCount -> l0
    androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets -> k0
    8:10:void <init>() -> <init>
    29:30:void removeAllIds() -> J
    18:23:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
androidx.constraintlayout.solver.widgets.Optimizer -> a.d.a.j.k:
    boolean[] flags -> a
    44:44:void <clinit>() -> <clinit>
    57:99:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    111:134:boolean optimizableMatchConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    152:367:void analyze(int,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    383:486:boolean applyChainOptimized(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> a
    671:685:void setOptimizedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int) -> a
androidx.constraintlayout.solver.widgets.Rectangle -> a.d.a.j.l:
    21:21:void <init>() -> <init>
androidx.constraintlayout.solver.widgets.ResolutionAnchor -> a.d.a.j.m:
    androidx.constraintlayout.solver.widgets.ResolutionDimension oppositeDimension -> l
    int oppositeDimensionMultiplier -> m
    float resolvedOffset -> g
    int dimensionMultiplier -> k
    int type -> h
    float offset -> e
    androidx.constraintlayout.solver.widgets.ResolutionAnchor resolvedTarget -> f
    androidx.constraintlayout.solver.widgets.ResolutionAnchor opposite -> i
    androidx.constraintlayout.solver.widgets.ResolutionAnchor target -> d
    androidx.constraintlayout.solver.widgets.ResolutionDimension dimension -> j
    androidx.constraintlayout.solver.widgets.ConstraintAnchor myAnchor -> c
    51:53:void <init>(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> <init>
    79:87:void resolve(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float) -> a
    90:101:java.lang.String sType(int) -> a
    262:269:void dependsOn(int,androidx.constraintlayout.solver.widgets.ResolutionAnchor,int) -> a
    272:278:void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int) -> a
    281:290:void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension) -> a
    304:312:void addResolvedValue(androidx.constraintlayout.solver.LinearSystem) -> a
    224:225:void setType(int) -> b
    293:295:void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float) -> b
    298:301:void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension) -> b
    229:242:void reset() -> d
    110:221:void resolve() -> e
    315:315:float getResolvedValue() -> f
    245:259:void update() -> g
    68:75:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ResolutionDimension -> a.d.a.j.n:
    float value -> c
    21:23:void <init>() -> <init>
    31:38:void resolve(int) -> a
    26:28:void reset() -> d
    41:42:void remove() -> f
androidx.constraintlayout.solver.widgets.ResolutionNode -> a.d.a.j.o:
    java.util.HashSet dependents -> a
    int state -> b
    23:35:void <init>() -> <init>
    38:39:void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode) -> a
    63:73:void didResolve() -> a
    47:51:void invalidate() -> b
    76:76:boolean isResolved() -> c
    42:44:void reset() -> d
    81:81:void resolve() -> e
androidx.constraintlayout.solver.widgets.Snapshot -> a.d.a.j.p:
    int mHeight -> d
    java.util.ArrayList mConnections -> e
    int mY -> b
    int mWidth -> c
    int mX -> a
    91:101:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    126:134:void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    109:118:void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
androidx.constraintlayout.solver.widgets.Snapshot$Connection -> a.d.a.j.p$a:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget -> b
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mAnchor -> a
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength mStrengh -> d
    int mCreator -> e
    int mMargin -> c
    47:53:void <init>(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> <init>
    81:83:void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    61:73:void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
androidx.constraintlayout.solver.widgets.WidgetContainer -> a.d.a.j.q:
    java.util.ArrayList mChildren -> k0
    35:36:void <init>() -> <init>
    62:64:void reset() -> D
    259:271:void updateDrawPosition() -> H
    117:130:androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer() -> J
    277:288:void layout() -> K
    301:302:void removeAllChildren() -> L
    292:298:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> a
    72:78:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
    245:251:void setOffset(int,int) -> b
    98:100:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> c
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    int mIndicatedType -> j
    int mResolvedType -> k
    androidx.constraintlayout.solver.widgets.Barrier mBarrier -> l
    115:117:void <init>(android.content.Context) -> <init>
    120:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    125:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    181:197:void init(android.util.AttributeSet) -> a
    135:135:int getType() -> getType
    200:201:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    144:173:void setType(int) -> setType
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    androidx.constraintlayout.solver.widgets.Helper mHelperWidget -> g
    java.lang.String mReferenceIds -> i
    int[] mIds -> d
    int mCount -> e
    boolean mUseViewMeasure -> h
    android.content.Context myContext -> f
    64:67:void <init>(android.content.Context) -> <init>
    70:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:96:void init(android.util.AttributeSet) -> a
    154:162:void validateParams() -> a
    168:201:void addID(java.lang.String) -> a
    253:253:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> a
    261:261:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> b
    229:243:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> c
    103:103:int[] getReferencedIds() -> getReferencedIds
    135:135:void onDraw(android.graphics.Canvas) -> onDraw
    142:147:void onMeasure(int,int) -> onMeasure
    207:219:void setIds(java.lang.String) -> setIds
    111:115:void setReferencedIds(int[]) -> setReferencedIds
    122:127:void setTag(int,java.lang.Object) -> setTag
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    int mConstraintSetId -> o
    androidx.constraintlayout.solver.Metrics mMetrics -> s
    int mOptimizationLevel -> m
    int mMaxWidth -> j
    androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget -> g
    int mMaxHeight -> k
    int mMinWidth -> h
    int mMinHeight -> i
    boolean mDirtyHierarchy -> l
    java.util.ArrayList mVariableDimensionsWidgets -> f
    java.util.ArrayList mConstraintHelpers -> e
    android.util.SparseArray mChildrenByIds -> d
    java.util.HashMap mDesignIds -> p
    int mLastMeasureHeight -> r
    androidx.constraintlayout.widget.ConstraintSet mConstraintSet -> n
    int mLastMeasureWidth -> q
    570:572:void <init>(android.content.Context) -> <init>
    575:577:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    580:582:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    542:554:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> a
    560:566:java.lang.Object getDesignInformation(int,java.lang.Object) -> a
    595:627:void init(android.util.AttributeSet) -> a
    808:1128:void setChildrenConstraints() -> a
    1154:1157:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> a
    1161:1255:void internalMeasureChildren(int,int) -> a
    1860:1864:void solveLinearSystem(java.lang.String) -> a
    2015:2015:android.view.View getViewById(int) -> a
    634:638:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    791:805:void updateHierarchy() -> b
    1131:1144:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> b
    1283:1486:void internalMeasureDimensions(int,int) -> b
    1258:1273:void updatePostMeasures() -> c
    1798:1849:void setSelfDimensionBehaviour(int,int) -> c
    1996:1996:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2023:2061:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    482:482:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1980:1980:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    482:482:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1972:1972:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1988:1988:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    787:787:int getMaxHeight() -> getMaxHeight
    777:777:int getMaxWidth() -> getMaxWidth
    740:740:int getMinHeight() -> getMinHeight
    730:730:int getMinWidth() -> getMinWidth
    1965:1965:int getOptimizationLevel() -> getOptimizationLevel
    1875:1932:void onLayout(boolean,int,int,int,int) -> onLayout
    1505:1795:void onMeasure(int,int) -> onMeasure
    656:679:void onViewAdded(android.view.View) -> onViewAdded
    686:695:void onViewRemoved(android.view.View) -> onViewRemoved
    645:649:void removeView(android.view.View) -> removeView
    3172:3181:void requestLayout() -> requestLayout
    2004:2005:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    589:592:void setId(int) -> setId
    762:767:void setMaxHeight(int) -> setMaxHeight
    749:754:void setMaxWidth(int) -> setMaxWidth
    716:721:void setMinHeight(int) -> setMinHeight
    703:708:void setMinWidth(int) -> setMinWidth
    1955:1956:void setOptimizationLevel(int) -> setOptimizationLevel
    3189:3189:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$a:
    int baselineToBaseline -> l
    float resolvedHorizontalBias -> g0
    int matchConstraintMinHeight -> K
    int topToTop -> h
    float guidePercent -> c
    int verticalChainStyle -> G
    int leftToLeft -> d
    boolean isGuideline -> X
    int dimensionRatioSide -> C
    boolean constrainedHeight -> T
    int goneEndMargin -> y
    int goneTopMargin -> u
    float circleAngle -> o
    float matchConstraintPercentWidth -> N
    int editorAbsoluteX -> P
    int startToStart -> q
    int resolvedRightToRight -> d0
    int matchConstraintMaxWidth -> L
    int resolvedLeftToRight -> b0
    int circleConstraint -> m
    int resolvedGuideBegin -> h0
    int matchConstraintDefaultWidth -> H
    int resolveGoneRightMargin -> f0
    int topToBottom -> i
    boolean horizontalDimensionFixed -> U
    int leftToRight -> e
    int guideBegin -> a
    boolean isHelper -> Y
    int goneRightMargin -> v
    boolean helped -> l0
    int endToStart -> r
    float matchConstraintPercentHeight -> O
    int editorAbsoluteY -> Q
    int circleRadius -> n
    int matchConstraintMaxHeight -> M
    int bottomToTop -> j
    int matchConstraintDefaultHeight -> I
    float resolvedGuidePercent -> j0
    int rightToLeft -> f
    float horizontalWeight -> D
    boolean verticalDimensionFixed -> V
    int guideEnd -> b
    boolean isInPlaceholder -> Z
    int goneBottomMargin -> w
    int orientation -> R
    int endToEnd -> s
    java.lang.String dimensionRatio -> B
    int resolvedRightToLeft -> c0
    int resolvedLeftToLeft -> a0
    int matchConstraintMinWidth -> J
    int bottomToBottom -> k
    float verticalWeight -> E
    int resolveGoneLeftMargin -> e0
    int horizontalChainStyle -> F
    int rightToRight -> g
    boolean needsBaseline -> W
    androidx.constraintlayout.solver.widgets.ConstraintWidget widget -> k0
    float verticalBias -> A
    int resolvedGuideEnd -> i0
    boolean constrainedWidth -> S
    float horizontalBias -> z
    int goneStartMargin -> x
    int goneLeftMargin -> t
    int startToEnd -> p
    2649:2995:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3040:3041:void <init>(int,int) -> <init>
    3044:3045:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2998:3038:void validate() -> a
    3053:3164:void resolveLayoutDirection(int) -> resolveLayoutDirection
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$a$a:
    android.util.SparseIntArray map -> a
    2592:2645:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.a:
    int[] VISIBILITY_FLAGS -> b
    android.util.SparseIntArray mapToConstant -> c
    java.util.HashMap mConstraints -> a
    195:352:void <clinit>() -> <clinit>
    59:198:void <init>() -> <init>
    761:781:void clone(androidx.constraintlayout.widget.Constraints) -> a
    797:889:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout) -> a
    2145:2178:void load(android.content.Context,int) -> a
    2181:2185:int lookupID(android.content.res.TypedArray,int,int) -> a
    2189:2193:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> a
    2197:2440:void populateConstraint(androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> a
    2443:2476:int[] convertReferenceString(android.view.View,java.lang.String) -> a
androidx.constraintlayout.widget.ConstraintSet$1 -> androidx.constraintlayout.widget.a$a:
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.a$b:
    float translationX -> e0
    int goneEndMargin -> O
    int topToTop -> l
    float translationZ -> g0
    float guidePercent -> g
    int goneLeftMargin -> K
    int leftToLeft -> h
    int bottomMargin -> G
    int mViewId -> d
    float heightPercent -> q0
    int orientation -> C
    float rotationY -> Z
    java.lang.String mReferenceIdString -> v0
    int circleRadius -> y
    float horizontalWeight -> R
    int verticalChainStyle -> T
    float scaleX -> a0
    int goneStartMargin -> P
    float transformPivotX -> c0
    int startToEnd -> q
    int goneTopMargin -> L
    int topToBottom -> m
    int endMargin -> H
    int leftToRight -> i
    int widthMax -> l0
    int leftMargin -> D
    int widthDefault -> j0
    int guideBegin -> e
    int widthMin -> n0
    int mHelperType -> t0
    float elevation -> W
    boolean mBarrierAllowsGoneWidgets -> r0
    boolean mIsGuideline -> a
    int startToStart -> r
    boolean constrainedWidth -> h0
    int bottomToTop -> n
    float transformPivotY -> d0
    int goneRightMargin -> M
    float translationY -> f0
    int rightToLeft -> j
    int startMargin -> I
    int guideEnd -> f
    boolean applyElevation -> V
    int rightMargin -> E
    int mWidth -> b
    float widthPercent -> p0
    int editorAbsoluteX -> A
    float rotation -> X
    float horizontalBias -> u
    int endToStart -> s
    float scaleY -> b0
    int goneBottomMargin -> N
    int bottomToBottom -> o
    int visibility -> J
    int rightToRight -> k
    int topMargin -> F
    int heightDefault -> k0
    int[] mReferenceIds -> u0
    int editorAbsoluteY -> B
    int mHeight -> c
    int heightMin -> o0
    int heightMax -> m0
    java.lang.String dimensionRatio -> w
    int mBarrierDirection -> s0
    float circleAngle -> z
    float rotationX -> Y
    float verticalBias -> v
    int circleConstraint -> x
    float alpha -> U
    int endToEnd -> t
    float verticalWeight -> Q
    int horizontalChainStyle -> S
    boolean constrainedHeight -> i0
    int baselineToBaseline -> p
    358:437:void <init>() -> <init>
    358:358:void <init>(androidx.constraintlayout.widget.ConstraintSet$1) -> <init>
    358:358:void access$200(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    358:358:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    526:533:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    536:550:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    553:609:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    612:674:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    358:358:java.lang.Object clone() -> clone
    442:522:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    androidx.constraintlayout.widget.ConstraintSet myConstraintSet -> d
    41:43:void <init>(android.content.Context) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    135:136:void init(android.util.AttributeSet) -> a
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    131:131:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    143:143:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    147:152:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
    159:159:void onLayout(boolean,int,int,int,int) -> onLayout
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$a:
    float alpha -> m0
    float elevation -> o0
    float rotationX -> q0
    float rotation -> p0
    float scaleX -> s0
    float rotationY -> r0
    float transformPivotX -> u0
    float scaleY -> t0
    float translationX -> w0
    float transformPivotY -> v0
    float translationZ -> y0
    float translationY -> x0
    boolean applyElevation -> n0
    82:83:void <init>(int,int) -> <init>
    90:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Group -> androidx.constraintlayout.widget.Group:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:57:void init(android.util.AttributeSet) -> a
    88:91:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> a
    65:80:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> c
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    55:57:void <init>(android.content.Context) -> <init>
    60:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    93:94:void onMeasure(int,int) -> onMeasure
    102:105:void setGuidelineBegin(int) -> setGuidelineBegin
    113:116:void setGuidelineEnd(int) -> setGuidelineEnd
    123:126:void setGuidelinePercent(float) -> setGuidelinePercent
    79:79:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    int mEmptyVisibility -> f
    int mContentId -> d
    android.view.View mContent -> e
    49:51:void <init>(android.content.Context) -> <init>
    54:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    69:85:void init(android.util.AttributeSet) -> a
    194:204:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> a
    147:161:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> b
    113:113:android.view.View getContent() -> getContent
    104:104:int getEmptyVisibility() -> getEmptyVisibility
    121:140:void onDraw(android.graphics.Canvas) -> onDraw
    169:187:void setContentId(int) -> setContentId
    95:96:void setEmptyVisibility(int) -> setEmptyVisibility
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    boolean mDisallowInterceptReset -> k
    boolean mNeedsPreDrawListener -> q
    androidx.core.view.WindowInsetsCompat mLastInsets -> r
    boolean mDrawStatusBarBackground -> s
    android.graphics.drawable.Drawable mStatusBarBackground -> t
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener -> u
    android.graphics.Paint mScrimPaint -> h
    java.lang.String WIDGET_PACKAGE_NAME -> x
    java.util.List mTempList1 -> f
    java.util.List mDependencySortedChildren -> d
    android.view.View mNestedScrollingTarget -> o
    androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> w
    int[] mNestedScrollingV2ConsumedCompat -> j
    java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR -> A
    androidx.core.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener -> v
    boolean mIsAttachedToWindow -> l
    androidx.core.util.Pools$Pool sRectPool -> B
    int[] mBehaviorConsumed -> i
    android.view.View mBehaviorTouchView -> n
    androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener -> p
    java.util.List mTempDependenciesList -> g
    java.lang.ThreadLocal sConstructors -> z
    java.lang.Class[] CONSTRUCTOR_PARAMS -> y
    androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag -> e
    int[] mKeylines -> m
    118:152:void <clinit>() -> <clinit>
    207:208:void <init>(android.content.Context) -> <init>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    216:238:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    164:166:void releaseTempRect(android.graphics.Rect) -> a
    367:376:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> a
    394:419:void resetTouchBehaviors(boolean) -> a
    426:439:void getTopSortedChildren(java.util.List) -> a
    442:508:boolean performIntercept(android.view.MotionEvent,int) -> a
    598:632:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> a
    715:716:void getDescendantRect(android.view.View,android.graphics.Rect) -> a
    743:745:void onMeasureChild(android.view.View,int,int,int,int) -> a
    959:961:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> a
    972:1043:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> a
    1046:1058:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> a
    1070:1076:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> a
    1086:1094:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> a
    1260:1265:int clamp(int,int,int) -> a
    1285:1387:void onChildViewsChanged(int) -> a
    1390:1397:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> a
    1499:1511:void dispatchDependentViewsChanged(android.view.View) -> a
    1678:1683:boolean isPointInChildBounds(android.view.View,int,int) -> a
    1774:1791:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    1800:1818:void onStopNestedScroll(android.view.View,int) -> a
    1830:1832:void onNestedScroll(android.view.View,int,int,int,int,int) -> a
    1838:1879:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> a
    1888:1926:void onNestedPreScroll(android.view.View,int,int,int[],int) -> a
    584:591:int getKeyline(int) -> b
    835:856:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> b
    945:947:void getLastChildRect(android.view.View,android.graphics.Rect) -> b
    1110:1163:void layoutChildWithKeyline(android.view.View,int,int) -> b
    1523:1528:java.util.List getDependencies(android.view.View) -> b
    1627:1666:void offsetChildToAnchor(android.view.View,int) -> b
    1744:1764:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> b
    870:872:void onLayoutChild(android.view.View,int) -> c
    933:935:void recordLastChildRect(android.view.View,android.graphics.Rect) -> c
    1227:1227:int resolveAnchoredChildGravity(int) -> c
    1541:1546:java.util.List getDependents(android.view.View) -> c
    1734:1734:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    637:668:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> d
    1173:1197:void layoutChild(android.view.View,int) -> d
    1205:1211:int resolveGravity(int) -> d
    1590:1602:void addPreDrawListener() -> d
    1232:1256:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    315:328:void drawableStateChanged() -> drawableStateChanged
    1219:1219:int resolveKeylineGravity(int) -> e
    1471:1477:void setInsetOffsetX(android.view.View,int) -> e
    1559:1576:void ensurePreDrawListener() -> e
    1582:1582:boolean hasDependencies(android.view.View) -> e
    1480:1486:void setInsetOffsetY(android.view.View,int) -> f
    1609:1616:void removePreDrawListener() -> f
    156:160:android.graphics.Rect acquireTempRect() -> g
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1729:1729:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1714:1714:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1719:1724:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1551:1552:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    384:384:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    1984:1984:int getNestedScrollAxes() -> getNestedScrollAxes
    310:310:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    725:725:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    720:720:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    672:705:void prepareChildren() -> h
    3267:3291:void setupForInsets() -> i
    247:262:void onAttachedToWindow() -> onAttachedToWindow
    266:276:void onDetachedFromWindow() -> onDetachedFromWindow
    906:914:void onDraw(android.graphics.Canvas) -> onDraw
    513:526:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    886:902:void onLayout(boolean,int,int,int,int) -> onLayout
    749:832:void onMeasure(int,int) -> onMeasure
    1930:1954:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1959:1979:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1883:1884:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1823:1825:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1769:1770:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    3205:3228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3232:3250:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1739:1739:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1795:1796:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    531:571:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3255:3263:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    576:581:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    918:920:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    242:243:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    285:301:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    363:364:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    352:353:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    337:343:void setVisibility(int) -> setVisibility
    332:332:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$a:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> a
    3274:3274:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3278:3278:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$b:
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$c:
    2058:2059:void <init>() -> <init>
    2069:2070:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2081:2081:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> a
    2091:2091:void onDetachedFromLayoutParams() -> a
    2118:2118:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
    2196:2196:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> a
    2223:2223:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    2297:2297:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> a
    2326:2326:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    2410:2410:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> a
    2436:2440:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> a
    2476:2479:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> a
    2494:2494:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> a
    2507:2511:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> a
    2550:2554:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> a
    2566:2566:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> a
    2600:2603:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> a
    2635:2635:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> a
    2663:2663:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> a
    2683:2683:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> a
    2705:2705:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> a
    2723:2723:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> a
    2763:2763:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> a
    2142:2142:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    2162:2162:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> b
    2253:2253:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    2365:2365:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> b
    2393:2397:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> b
    2180:2180:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> c
    2272:2272:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> c
    2451:2451:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> d
    2745:2745:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> d
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$d:
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$e:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> d
    3183:3184:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3188:3191:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3195:3200:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$f:
    boolean mDidBlockInteraction -> m
    boolean mDidAcceptNestedScrollTouch -> n
    boolean mDidAcceptNestedScrollNonTouch -> o
    boolean mDidChangeAfterNestedScroll -> p
    int mInsetOffsetY -> j
    androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior mBehavior -> a
    int dodgeInsetEdges -> h
    int mInsetOffsetX -> i
    int mAnchorId -> f
    int insetEdge -> g
    int anchorGravity -> d
    int keyline -> e
    int gravity -> c
    android.view.View mAnchorView -> k
    android.view.View mAnchorDirectChild -> l
    boolean mBehaviorResolved -> b
    android.graphics.Rect mLastChildRect -> q
    2836:2837:void <init>(int,int) -> <init>
    2840:2872:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2875:2876:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2879:2880:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2883:2884:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2932:2947:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> a
    2954:2955:void setLastChildRect(android.graphics.Rect) -> a
    2970:2970:boolean checkAnchorChanged() -> a
    3024:3032:void setNestedScrollAccepted(int,boolean) -> a
    3035:3037:boolean isNestedScrollAccepted(int) -> a
    3049:3050:void setChangedAfterNestedScroll(boolean) -> a
    3065:3067:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    3090:3098:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> a
    3106:3140:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> a
    3175:3178:boolean shouldDodge(android.view.View,int) -> a
    2981:2984:boolean didBlockInteraction() -> b
    2999:3004:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> b
    3020:3021:void resetNestedScroll(int) -> b
    3151:3168:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> b
    2893:2893:int getAnchorId() -> c
    2919:2919:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> d
    3045:3045:boolean getChangedAfterNestedScroll() -> e
    2962:2962:android.graphics.Rect getLastChildRect() -> f
    3053:3054:void resetChangedAfterNestedScroll() -> g
    3016:3017:void resetTouchBehaviorTracking() -> h
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$g:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> d
    1987:1987:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    1990:1991:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    android.util.SparseArray behaviorStates -> f
    3335:3335:void <clinit>() -> <clinit>
    3297:3310:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3313:3314:void <init>(android.os.Parcelable) -> <init>
    3318:3333:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$a:
    3336:3336:void <init>() -> <init>
    3336:3336:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3336:3336:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3339:3339:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3344:3344:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3336:3336:java.lang.Object[] newArray(int) -> newArray
    3349:3349:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$h:
    1998:1998:void <init>() -> <init>
    2001:2008:int compare(android.view.View,android.view.View) -> a
    1998:1998:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.a:
    androidx.collection.SimpleArrayMap mGraph -> b
    java.util.HashSet mSortTmpMarked -> d
    androidx.core.util.Pools$Pool mListPool -> a
    java.util.ArrayList mSortResult -> c
    39:44:void <init>() -> <init>
    54:57:void addNode(java.lang.Object) -> a
    76:77:void addEdge(java.lang.Object,java.lang.Object) -> a
    143:150:void clear() -> a
    174:179:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> a
    213:215:void poolList(java.util.ArrayList) -> a
    63:63:boolean contains(java.lang.Object) -> b
    162:170:java.util.ArrayList getSortedList() -> b
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> c
    205:209:java.util.ArrayList getEmptyList() -> c
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> d
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> e
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.b:
    java.lang.ThreadLocal sMatrix -> a
    java.lang.ThreadLocal sRectF -> b
    35:36:void <clinit>() -> <clinit>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> a
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> b
androidx.core.app.ActivityCompat -> androidx.core.app.a:
    androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate -> c
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> a
    233:238:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> a
    287:292:void finishAffinity(android.app.Activity) -> a
    577:585:void recreate(android.app.Activity) -> b
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback -> androidx.core.app.a$a:
androidx.core.app.ActivityCompat$PermissionCompatDelegate -> androidx.core.app.a$b:
    boolean onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> androidx.core.app.a$c:
androidx.core.app.ActivityManagerCompat -> androidx.core.app.b:
    40:43:boolean isLowRamDevice(android.app.ActivityManager) -> a
androidx.core.app.ActivityRecreator -> androidx.core.app.c:
    android.os.Handler mainHandler -> g
    java.lang.reflect.Method performStopActivity3ParamsMethod -> d
    java.lang.reflect.Field mainThreadField -> b
    java.lang.reflect.Method performStopActivity2ParamsMethod -> e
    java.lang.reflect.Field tokenField -> c
    java.lang.reflect.Method requestRelaunchActivityMethod -> f
    java.lang.Class activityThreadClass -> a
    90:99:void <clinit>() -> <clinit>
    108:170:boolean recreate(android.app.Activity) -> a
    244:280:boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> a
    299:308:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> a
    361:363:java.lang.Class getActivityThreadClass() -> a
    285:294:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> b
    341:345:java.lang.reflect.Field getMainThreadField() -> b
    317:318:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> c
    351:355:java.lang.reflect.Field getTokenField() -> c
    313:313:boolean needsRelaunchCall() -> d
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.c$a:
    java.lang.Object val$token -> e
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> d
    142:142:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    145:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.c$b:
    android.app.Application val$application -> d
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> e
    158:158:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    165:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.c$c:
    java.lang.Object val$activityThread -> d
    java.lang.Object val$token -> e
    252:252:void <init>(java.lang.Object,java.lang.Object) -> <init>
    256:275:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.c$d:
    boolean mStopQueued -> e
    java.lang.Object currentlyRecreatingToken -> a
    boolean mStarted -> c
    android.app.Activity mActivity -> b
    boolean mDestroyed -> d
    182:184:void <init>(android.app.Activity) -> <init>
    188:188:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    228:235:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:215:void onActivityPaused(android.app.Activity) -> onActivityPaused
    202:202:void onActivityResumed(android.app.Activity) -> onActivityResumed
    219:219:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    195:198:void onActivityStarted(android.app.Activity) -> onActivityStarted
    224:224:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.d:
    75:78:java.lang.String permissionToOp(java.lang.String) -> a
    175:179:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> a
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    39:46:void <init>() -> <init>
    80:80:boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
    94:98:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    85:89:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:37:void <init>() -> <init>
    70:76:java.lang.Object checkCompatWrapper(java.lang.Object) -> a
    41:41:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    47:47:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    60:60:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    54:54:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    66:66:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.CoreComponentFactory$CompatWrapped -> androidx.core.app.CoreComponentFactory$a:
    java.lang.Object getWrapper() -> a
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
    java.util.HashMap sClassWorkEnqueuer -> j
    androidx.core.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer -> e
    java.util.ArrayList mCompatQueue -> i
    androidx.core.app.JobIntentService$CompatJobEngine mJobImpl -> d
    androidx.core.app.JobIntentService$CommandProcessor mCurProcessor -> f
    boolean mInterruptIfStopped -> g
    boolean mDestroyed -> h
    105:106:void <clinit>() -> <clinit>
    416:422:void <init>() -> <init>
    void onHandleWork(android.content.Intent) -> a
    529:541:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> a
    607:615:void ensureProcessorRunningLocked(boolean) -> a
    639:648:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> a
    599:603:boolean doStopCurrentWork() -> b
    595:595:boolean onStopCurrentWork() -> c
    618:636:void processorFinished() -> d
    465:470:android.os.IBinder onBind(android.content.Intent) -> onBind
    426:436:void onCreate() -> onCreate
    476:483:void onDestroy() -> onDestroy
    444:455:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$a:
    androidx.core.app.JobIntentService this$0 -> a
    383:383:void <init>(androidx.core.app.JobIntentService) -> <init>
    390:399:java.lang.Void doInBackground(java.lang.Void[]) -> a
    404:405:void onCancelled(java.lang.Void) -> a
    409:410:void onPostExecute(java.lang.Void) -> b
    383:383:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    383:383:void onCancelled(java.lang.Object) -> onCancelled
    383:383:void onPostExecute(java.lang.Object) -> onPostExecute
androidx.core.app.JobIntentService$CompatJobEngine -> androidx.core.app.JobIntentService$b:
    androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> a
    android.os.IBinder compatGetBinder() -> b
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$c:
    android.os.PowerManager$WakeLock mLaunchWakeLock -> d
    android.os.PowerManager$WakeLock mRunWakeLock -> e
    boolean mLaunchingService -> f
    boolean mServiceProcessing -> g
    163:175:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    224:234:void serviceProcessingFinished() -> a
    210:219:void serviceProcessingStarted() -> b
    201:205:void serviceStartReceived() -> c
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$d:
    android.content.Intent mIntent -> a
    androidx.core.app.JobIntentService this$0 -> c
    int mStartId -> b
    363:366:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    376:377:void complete() -> a
    370:370:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$GenericWorkItem -> androidx.core.app.JobIntentService$e:
    void complete() -> a
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$f:
    android.app.job.JobParameters mParams -> c
    androidx.core.app.JobIntentService mService -> a
    java.lang.Object mLock -> b
    275:277:void <init>(androidx.core.app.JobIntentService) -> <init>
    311:316:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> a
    281:281:android.os.IBinder compatGetBinder() -> b
    287:290:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    296:301:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$f$a:
    android.app.job.JobWorkItem mJobWork -> a
    androidx.core.app.JobIntentService$JobServiceEngineImpl this$0 -> b
    255:257:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    266:270:void complete() -> a
    261:261:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$g:
    332:338:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$h:
    android.content.ComponentName mComponentName -> a
    boolean mHasJobId -> b
    int mJobId -> c
    118:120:void <init>(android.content.ComponentName) -> <init>
    123:127:void ensureJobId(int) -> a
    141:141:void serviceProcessingFinished() -> a
    138:138:void serviceProcessingStarted() -> b
    135:135:void serviceStartReceived() -> c
androidx.core.app.NavUtils -> androidx.core.app.e:
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> a
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> b
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> b
    240:266:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
    45:45:void <init>() -> <init>
    void cancel(java.lang.String,int,java.lang.String) -> a
    void cancelAll(java.lang.String) -> a
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> a
    114:119:void checkPermission(int,java.lang.String) -> a
    48:56:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> androidx.core.app.NotificationCompatSideChannelService$a:
    androidx.core.app.NotificationCompatSideChannelService this$0 -> a
    75:76:void <init>(androidx.core.app.NotificationCompatSideChannelService) -> <init>
    92:97:void cancel(java.lang.String,int,java.lang.String) -> cancel
    103:108:void cancelAll(java.lang.String) -> cancelAll
    81:86:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
    android.app.PendingIntent mActionIntent -> d
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.SharedElementCallback -> androidx.core.app.f:
    void onMapSharedElements(java.util.List,java.util.Map) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> b
androidx.core.app.TaskStackBuilder -> androidx.core.app.g:
    java.util.ArrayList mIntents -> d
    android.content.Context mSourceContext -> e
    82:84:void <init>(android.content.Context) -> <init>
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> a
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    268:269:void startActivities() -> a
    283:284:void startActivities(android.os.Bundle) -> a
    256:256:java.util.Iterator iterator() -> iterator
androidx.core.app.TaskStackBuilder$SupportParentable -> androidx.core.app.g$a:
    android.content.Intent getSupportParentActivityIntent() -> e
androidx.core.content.ContextCompat -> androidx.core.content.a:
    android.util.TypedValue sTempValue -> b
    java.lang.Object sLock -> a
    153:153:void <clinit>() -> <clinit>
    223:228:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
    380:383:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> a
    513:516:int getColor(android.content.Context,int) -> a
    633:636:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> a
    433:436:java.io.File[] getExternalCacheDirs(android.content.Context) -> b
    491:494:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> b
    453:469:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> c
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    androidx.core.content.FileProvider$PathStrategy mStrategy -> d
    java.util.HashMap sCache -> g
    java.io.File DEVICE_ROOT -> f
    java.lang.String[] COLUMNS -> e
    340:360:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    575:589:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    795:815:int modeToMode(java.lang.String) -> a
    819:825:java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    829:831:java.lang.String[] copyOf(java.lang.String[],int) -> a
    835:837:java.lang.Object[] copyOf(java.lang.Object[],int) -> a
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    601:606:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    493:504:java.lang.String getType(android.net.Uri) -> getType
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    370:370:boolean onCreate() -> onCreate
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    454:478:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$PathStrategy -> androidx.core.content.FileProvider$a:
    java.io.File getFileForUri(android.net.Uri) -> a
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$b:
    java.util.HashMap mRoots -> a
    700:702:void <init>(java.lang.String) -> <init>
    709:710:void addRoot(java.lang.String,java.io.File) -> a
    764:772:java.io.File getFileForUri(android.net.Uri) -> a
androidx.core.content.PermissionChecker -> androidx.core.content.b:
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> a
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> a
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.c.a:
    65:70:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    86:95:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    113:116:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    191:191:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> a
    198:199:int modulateColorAlpha(int,float) -> a
    128:186:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.c.b:
    android.content.res.ColorStateList mColorStateList -> b
    android.graphics.Shader mShader -> a
    int mColor -> c
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> a
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> a
    86:86:int getColor() -> a
    90:91:void setColor(int) -> a
    108:117:boolean onStateChanged(int[]) -> a
    152:160:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> b
    81:81:android.graphics.Shader getShader() -> b
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> b
    94:94:boolean isGradient() -> c
    98:98:boolean isStateful() -> d
    124:124:boolean willDraw() -> e
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.c.c:
    168:174:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> a
    230:235:int getType(android.content.res.TypedArray,int) -> a
    246:270:java.util.List readCerts(android.content.res.Resources,int) -> a
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> a
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> a
    181:187:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> b
    193:225:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> c
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> d
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> androidx.core.content.c.c$a:
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.c.c$b:
    androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
    153:155:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> a
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.c.c$c:
    int mResourceId -> f
    java.lang.String mFileName -> a
    int mTtcIndex -> e
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> a
    143:143:int getResourceId() -> b
    139:139:int getTtcIndex() -> c
    135:135:java.lang.String getVariationSettings() -> d
    127:127:int getWeight() -> e
    131:131:boolean isItalic() -> f
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.c.c$d:
    androidx.core.provider.FontRequest mRequest -> a
    int mTimeoutMs -> b
    int mStrategy -> c
    82:86:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> a
    89:89:androidx.core.provider.FontRequest getRequest() -> b
    97:97:int getTimeout() -> c
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.c.d:
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> a
    202:204:android.graphics.Shader$TileMode parseTileMode(int) -> a
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.c.d$a:
    int[] mColors -> a
    float[] mOffsets -> b
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.c.e:
    41:50:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> a
    57:65:int[] append(int[],int,int) -> a
    189:189:int growSize(int) -> a
androidx.core.content.res.ResourcesCompat -> androidx.core.content.c.f:
    82:85:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    227:230:android.graphics.Typeface getFont(android.content.Context,int) -> a
    318:326:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> a
    336:339:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> a
    359:367:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
    379:381:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.c.f$a:
    237:237:void <init>() -> <init>
    void onFontRetrievalFailed(int) -> a
    void onFontRetrieved(android.graphics.Typeface) -> a
    267:276:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> a
    286:295:void callbackFailAsync(int,android.os.Handler) -> a
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.c.f$a$a:
    android.graphics.Typeface val$typeface -> d
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> e
    270:270:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    273:274:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.c.f$a$b:
    int val$reason -> d
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> e
    289:289:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    292:293:void run() -> run
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.c.g:
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> a
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> a
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> a
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> a
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> a
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> a
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> a
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> a
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> a
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> a
    275:279:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> a
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> a
    354:359:int getAttr(android.content.Context,int,int) -> a
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> b
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> b
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> b
    310:314:java.lang.String getString(android.content.res.TypedArray,int,int) -> b
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> c
    326:330:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> c
    342:346:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> d
androidx.core.graphics.ColorUtils -> androidx.core.a.a:
    java.lang.ThreadLocal TEMP_ARRAY -> a
    45:45:void <clinit>() -> <clinit>
    135:136:int compositeComponent(int,int,int,int,int) -> a
    145:148:double calculateLuminance(int) -> a
    159:161:double calculateContrast(int,int) -> a
    187:189:int calculateMinimumAlpha(int,int,float) -> a
    241:275:void RGBToHSL(int,int,int,float[]) -> a
    289:290:void colorToHSL(int,float[]) -> a
    421:422:void colorToXYZ(int,double[]) -> a
    444:445:void RGBToXYZ(int,int,int,double[]) -> a
    585:585:float constrain(float,float,float) -> a
    678:683:double[] getTempDouble3Array() -> a
    131:131:int compositeAlpha(int,int) -> b
    53:64:int compositeColors(int,int) -> c
    365:366:int setAlphaComponent(int,int) -> d
androidx.core.graphics.PathParser -> androidx.core.a.b:
    54:55:float[] copyOfRange(float[],int,int) -> a
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> a
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> a
    137:138:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> a
    174:186:int nextStart(java.lang.String,int) -> a
    190:191:void addNode(java.util.ArrayList,char,float[]) -> a
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> a
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> b
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> b
    211:212:float[] getFloats(java.lang.String) -> c
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.a.b$a:
    boolean mEndWithNegOrDot -> b
    int mEndPosition -> a
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.a.b$b:
    char mType -> a
    float[] mParams -> b
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> a
    388:393:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> a
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> a
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> a
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> a
androidx.core.graphics.TypefaceCompat -> androidx.core.a.c:
    androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
    androidx.collection.LruCache sTypefaceCache -> b
    46:63:void <clinit>() -> <clinit>
    88:88:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> a
    105:131:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
    143:149:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    160:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    190:191:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> a
    76:76:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> b
    169:174:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> b
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.a.d:
    java.lang.reflect.Method sAddFontWeightStyle -> d
    boolean sHasInitBeenCalled -> f
    java.lang.reflect.Constructor sFontFamilyCtor -> c
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> e
    java.lang.Class sFontFamily -> b
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    68:97:void init() -> a
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> a
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> a
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    114:118:java.lang.Object newFamily() -> b
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.a.e:
    java.lang.reflect.Method sAddFontWeightStyle -> d
    java.lang.reflect.Constructor sFontFamilyCtor -> c
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> e
    java.lang.Class sFontFamily -> b
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    94:98:boolean isUsable() -> a
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> a
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    103:105:java.lang.Object newFamily() -> b
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.a.f:
    java.lang.reflect.Method mFreeze -> k
    java.lang.reflect.Method mAbortCreation -> l
    java.lang.reflect.Method mCreateFromFamiliesWithDefault -> m
    java.lang.Class mFontFamily -> g
    java.lang.reflect.Constructor mFontFamilyCtor -> h
    java.lang.reflect.Method mAddFontFromAssetManager -> i
    java.lang.reflect.Method mAddFontFromBuffer -> j
    74:108:void <init>() -> <init>
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> a
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> a
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    204:222:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    230:282:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    292:308:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    317:317:java.lang.Class obtainFontFamily() -> a
    342:342:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> a
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> b
    194:197:void abortCreation(java.lang.Object) -> b
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> b
    127:129:java.lang.Object newFamily() -> c
    183:185:boolean freeze(java.lang.Object) -> c
    332:332:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> c
    347:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> d
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> e
    338:338:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> f
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.a.g:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    61:65:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> d
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.a.h:
    java.util.concurrent.ConcurrentHashMap mFontFamilies -> a
    45:52:void <init>() -> <init>
    61:76:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> a
    99:99:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    114:127:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> a
    137:146:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    153:153:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> a
    169:178:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    187:200:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    211:215:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> a
    219:223:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> a
    80:91:long getUniqueKey(android.graphics.Typeface) -> b
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.a.h$a:
    99:99:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    99:99:int getWeight(java.lang.Object) -> a
    102:102:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> a
    99:99:boolean isItalic(java.lang.Object) -> b
    107:107:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> b
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.a.h$b:
    153:153:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    153:153:int getWeight(java.lang.Object) -> a
    156:156:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> a
    153:153:boolean isItalic(java.lang.Object) -> b
    161:161:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> b
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor -> androidx.core.a.h$c:
    int getWeight(java.lang.Object) -> a
    boolean isItalic(java.lang.Object) -> b
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.a.i:
    63:79:java.io.File getTempFile(android.content.Context) -> a
    88:93:java.nio.ByteBuffer mmap(java.io.File) -> a
    103:114:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> a
    124:134:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> a
    142:157:boolean copyToFile(java.io.File,java.io.InputStream) -> a
    165:170:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> a
    175:181:void closeQuietly(java.io.Closeable) -> a
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.a:
    java.lang.reflect.Method sGetLayoutDirectionMethod -> c
    boolean sSetLayoutDirectionMethodFetched -> b
    java.lang.reflect.Method sSetLayoutDirectionMethod -> a
    boolean sGetLayoutDirectionMethodFetched -> d
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> a
    197:200:boolean canApplyTheme(android.graphics.drawable.Drawable) -> a
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    354:379:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> b
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> b
    177:180:int getAlpha(android.graphics.drawable.Drawable) -> c
    210:213:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> d
    391:415:int getLayoutDirection(android.graphics.drawable.Drawable) -> e
    95:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> f
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> g
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> h
    307:318:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> i
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> j
    java.lang.String mTintModeStr -> i
    android.graphics.PorterDuff$Mode mTintMode -> h
    android.os.Parcelable mParcelable -> d
    java.lang.Object mObj1 -> b
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    int mInt1 -> e
    byte[] mData -> c
    int mType -> a
    177:177:void <clinit>() -> <clinit>
    308:309:void <init>() -> <init>
    357:361:int getResId() -> a
    749:754:void onPreParceling(boolean) -> a
    817:818:java.lang.String typeToString(int) -> a
    973:980:int getResId(android.graphics.drawable.Icon) -> a
    339:343:java.lang.String getResPackage() -> b
    944:951:java.lang.String getResPackage(android.graphics.drawable.Icon) -> b
    785:791:void onPostParceling() -> c
    708:744:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:51:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.TintAwareDrawable -> androidx.core.graphics.drawable.b:
androidx.core.graphics.drawable.WrappedDrawable -> androidx.core.graphics.drawable.c:
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.d:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> j
    android.graphics.PorterDuff$Mode mCurrentMode -> e
    android.graphics.drawable.Drawable mDrawable -> i
    boolean mColorFilterSet -> f
    androidx.core.graphics.drawable.WrappedDrawableState mState -> g
    int mCurrentColor -> d
    boolean mMutated -> h
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    74:77:void updateLocalState(android.content.res.Resources) -> a
    293:314:boolean updateTint(int[]) -> a
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> a
    330:349:void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
    353:353:boolean isCompatTintEnabled() -> b
    243:243:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> c
    86:87:void draw(android.graphics.Canvas) -> draw
    103:103:int getChangingConfigurations() -> getChangingConfigurations
    210:214:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    251:252:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    220:230:android.graphics.drawable.Drawable mutate() -> mutate
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:260:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    277:278:void setTint(int) -> setTint
    282:284:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:290:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    267:268:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.e:
    java.lang.reflect.Method sIsProjectedDrawableMethod -> k
    43:45:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:50:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    113:120:boolean isCompatTintEnabled() -> b
    140:147:void findAndCacheIsProjectedDrawableMethod() -> c
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:65:void getOutline(android.graphics.Outline) -> getOutline
    54:55:void setHotspot(float,float) -> setHotspot
    59:60:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:108:boolean setState(int[]) -> setState
    84:89:void setTint(int) -> setTint
    75:80:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:98:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.f:
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    int mChangingConfigurations -> a
    35:42:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> a
    61:61:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.internal.view.SupportMenu -> androidx.core.b.a.a:
androidx.core.internal.view.SupportMenuItem -> androidx.core.b.a.b:
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
    androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
androidx.core.internal.view.SupportSubMenu -> androidx.core.b.a.c:
androidx.core.math.MathUtils -> androidx.core.c.a:
    39:44:float clamp(float,float,float) -> a
    81:86:int clamp(int,int,int) -> a
androidx.core.os.TraceCompat -> androidx.core.d.a:
    46:49:void beginSection(java.lang.String) -> a
    59:62:void endSection() -> a
androidx.core.provider.FontRequest -> androidx.core.e.a:
    java.lang.String mIdentifier -> f
    java.util.List mCertificates -> d
    java.lang.String mProviderAuthority -> a
    int mCertificatesArray -> e
    java.lang.String mQuery -> c
    java.lang.String mProviderPackage -> b
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    125:125:java.util.List getCertificates() -> a
    137:137:int getCertificatesArrayResId() -> b
    143:143:java.lang.String getIdentifier() -> c
    95:95:java.lang.String getProviderAuthority() -> d
    104:104:java.lang.String getProviderPackage() -> e
    113:113:java.lang.String getQuery() -> f
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.e.b:
    androidx.collection.SimpleArrayMap sPendingReplies -> d
    androidx.collection.LruCache sTypefaceCache -> a
    java.lang.Object sLock -> c
    java.util.Comparator sByteArrayComparator -> e
    androidx.core.provider.SelfDestructiveThread sBackgroundThread -> b
    172:784:void <clinit>() -> <clinit>
    184:186:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> a
    232:302:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> a
    689:704:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> a
    727:735:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> a
    744:747:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> a
    777:781:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> a
    801:809:boolean equalsByteArrayList(java.util.List,java.util.List) -> a
    813:817:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> a
    824:878:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> a
androidx.core.provider.FontsContractCompat$1 -> androidx.core.e.b$a:
    android.content.Context val$context -> a
    androidx.core.provider.FontRequest val$request -> b
    int val$style -> c
    java.lang.String val$id -> d
    254:254:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    254:254:java.lang.Object call() -> call
    257:261:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.e.b$b:
    android.os.Handler val$handler -> b
    androidx.core.content.res.ResourcesCompat$FontCallback val$fontCallback -> a
    273:273:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    273:273:void onReply(java.lang.Object) -> a
    276:284:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> a
androidx.core.provider.FontsContractCompat$3 -> androidx.core.e.b$c:
    java.lang.String val$id -> a
    303:303:void <init>(java.lang.String) -> <init>
    303:303:void onReply(java.lang.Object) -> a
    307:313:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> a
androidx.core.provider.FontsContractCompat$5 -> androidx.core.e.b$d:
    784:784:void <init>() -> <init>
    787:795:int compare(byte[],byte[]) -> a
    784:784:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.e.b$e:
    int mStatusCode -> a
    androidx.core.provider.FontsContractCompat$FontInfo[] mFonts -> b
    427:430:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    437:437:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> a
    433:433:int getStatusCode() -> b
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.e.b$f:
    int mResultCode -> e
    int mTtcIndex -> b
    int mWeight -> c
    android.net.Uri mUri -> a
    boolean mItalic -> d
    346:352:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    388:388:int getResultCode() -> a
    365:365:int getTtcIndex() -> b
    358:358:android.net.Uri getUri() -> c
    372:372:int getWeight() -> d
    379:379:boolean isItalic() -> e
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.e.b$g:
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
    211:214:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.e.c:
    java.lang.String mThreadName -> h
    android.os.Handler mHandler -> c
    android.os.Handler$Callback mCallback -> e
    int mDestructAfterMillisec -> f
    int mPriority -> g
    int mGeneration -> d
    java.lang.Object mLock -> a
    android.os.HandlerThread mThread -> b
    79:84:void <init>(java.lang.String,int,int) -> <init>
    136:155:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> a
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> a
    214:219:void onInvokeRunnable(java.lang.Runnable) -> a
    223:232:void onDestruction() -> a
    107:116:void post(java.lang.Runnable) -> b
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.e.c$a:
    androidx.core.provider.SelfDestructiveThread this$0 -> a
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:67:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.e.c$b:
    android.os.Handler val$callingHandler -> e
    androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply -> f
    java.util.concurrent.Callable val$callable -> d
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.e.c$b$a:
    java.lang.Object val$result -> d
    androidx.core.provider.SelfDestructiveThread$2 this$1 -> e
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.e.c$c:
    java.util.concurrent.atomic.AtomicBoolean val$running -> g
    java.util.concurrent.atomic.AtomicReference val$holder -> d
    java.util.concurrent.locks.ReentrantLock val$lock -> f
    java.util.concurrent.locks.Condition val$cond -> h
    java.util.concurrent.Callable val$callable -> e
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:184:void run() -> run
androidx.core.provider.SelfDestructiveThread$ReplyCallback -> androidx.core.e.c$d:
    void onReply(java.lang.Object) -> a
androidx.core.text.BidiFormatter -> androidx.core.f.a:
    java.lang.String RLM_STRING -> f
    androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE -> g
    androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> d
    androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> c
    boolean mIsRtlContext -> a
    int mFlags -> b
    androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE -> h
    java.lang.String LRM_STRING -> e
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    280:280:boolean getStereoReset() -> a
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> a
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> a
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> a
    516:516:boolean isRtlLocale(java.util.Locale) -> a
    236:236:androidx.core.text.BidiFormatter getInstance() -> b
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> b
    558:558:int getEntryDir(java.lang.CharSequence) -> b
    541:541:int getExitDir(java.lang.CharSequence) -> c
androidx.core.text.BidiFormatter$Builder -> androidx.core.f.a$a:
    androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> c
    boolean mIsRtlContext -> a
    int mFlags -> b
    139:141:void <init>() -> <init>
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> a
    205:209:androidx.core.text.BidiFormatter build() -> a
    167:170:void initialize(boolean) -> b
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.f.a$b:
    java.lang.CharSequence text -> a
    int charIndex -> d
    boolean isHtml -> b
    int length -> c
    byte[] DIR_TYPE_CACHE -> f
    char lastChar -> e
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    803:803:byte getCachedDirectionality(char) -> a
    846:862:byte dirTypeBackward() -> a
    816:832:byte dirTypeForward() -> b
    646:728:int getEntryDir() -> c
    744:792:int getExitDir() -> d
    944:956:byte skipEntityBackward() -> e
    929:930:byte skipEntityForward() -> f
    901:920:byte skipTagBackward() -> g
    872:888:byte skipTagForward() -> h
androidx.core.text.ICUCompat -> androidx.core.f.b:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    36:62:void <clinit>() -> <clinit>
    114:125:java.lang.String getScript(java.lang.String) -> a
    129:143:java.lang.String addLikelySubtags(java.util.Locale) -> a
    89:108:java.lang.String maximizeAndGetScript(java.util.Locale) -> b
androidx.core.text.PrecomputedTextCompat -> androidx.core.f.c:
    androidx.core.text.PrecomputedTextCompat$Params mParams -> e
    android.text.Spannable mText -> d
    72:73:void <clinit>() -> <clinit>
    512:512:androidx.core.text.PrecomputedTextCompat$Params getParams() -> a
    712:712:char charAt(int) -> charAt
    687:687:int getSpanEnd(java.lang.Object) -> getSpanEnd
    692:692:int getSpanFlags(java.lang.Object) -> getSpanFlags
    682:682:int getSpanStart(java.lang.Object) -> getSpanStart
    677:677:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    707:707:int length() -> length
    697:697:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    663:664:void removeSpan(java.lang.Object) -> removeSpan
    651:652:void setSpan(java.lang.Object,int,int,int) -> setSpan
    717:717:java.lang.CharSequence subSequence(int,int) -> subSequence
    722:722:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.f.c$a:
    android.text.TextPaint mPaint -> a
    android.text.PrecomputedText$Params mWrapped -> e
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    195:201:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    204:210:void <init>(android.text.PrecomputedText$Params) -> <init>
    243:243:int getBreakStrategy() -> a
    266:317:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> a
    255:255:int getHyphenationFrequency() -> b
    231:231:android.text.TextDirectionHeuristic getTextDirection() -> c
    218:218:android.text.TextPaint getTextPaint() -> d
    327:342:boolean equals(java.lang.Object) -> equals
    347:366:int hashCode() -> hashCode
    374:395:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.f.c$a$a:
    android.text.TextPaint mPaint -> a
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    115:128:void <init>(android.text.TextPaint) -> <init>
    144:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> a
    180:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> a
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> a
    162:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> b
androidx.core.text.TextDirectionHeuristicCompat -> androidx.core.f.d:
    boolean isRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.f.e:
    androidx.core.text.TextDirectionHeuristicCompat LTR -> a
    androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> d
    androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> c
    androidx.core.text.TextDirectionHeuristicCompat RTL -> b
    33:68:void <clinit>() -> <clinit>
    79:81:int isRtlText(int) -> a
    91:95:int isRtlTextOrFormat(int) -> b
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.f.e$a:
    boolean mLookForRtl -> a
    androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> b
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.f.e$b:
    androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> androidx.core.f.e$c:
    int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.f.e$d:
    androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    boolean defaultIsRtl() -> a
    130:131:boolean isRtl(java.lang.CharSequence,int,int) -> a
    140:142:boolean doCheck(java.lang.CharSequence,int,int) -> b
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.f.e$e:
    boolean mDefaultIsRtl -> b
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.f.e$f:
    androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> b
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> a
androidx.core.text.TextUtilsCompat -> androidx.core.f.f:
    java.util.Locale ROOT -> a
    33:33:void <clinit>() -> <clinit>
    119:122:int getLayoutDirectionFromFirstChar(java.util.Locale) -> a
    90:104:int getLayoutDirectionFromLocale(java.util.Locale) -> b
androidx.core.util.DebugUtils -> androidx.core.g.a:
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
androidx.core.util.LogWriter -> androidx.core.g.b:
    java.lang.StringBuilder mBuilder -> e
    java.lang.String mTag -> d
    43:45:void <init>(java.lang.String) -> <init>
    68:72:void flushBuilder() -> a
    48:49:void close() -> close
    52:53:void flush() -> flush
    56:65:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> androidx.core.g.c:
    50:53:boolean equals(java.lang.Object,java.lang.Object) -> a
    92:95:int hash(java.lang.Object[]) -> a
androidx.core.util.Pair -> androidx.core.g.d:
    java.lang.Object second -> b
    java.lang.Object first -> a
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
androidx.core.util.Pools$Pool -> androidx.core.g.e:
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
androidx.core.util.Pools$SimplePool -> androidx.core.g.f:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    94:96:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> a
    116:117:boolean release(java.lang.Object) -> a
    128:133:boolean isInPool(java.lang.Object) -> b
androidx.core.util.Pools$SynchronizedPool -> androidx.core.g.g:
    java.lang.Object mLock -> c
    153:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> a
    165:167:boolean release(java.lang.Object) -> a
androidx.core.util.Preconditions -> androidx.core.g.h:
    63:64:java.lang.Object checkNotNull(java.lang.Object) -> a
    80:81:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> a
    95:96:void checkState(boolean,java.lang.String) -> a
    108:109:void checkState(boolean) -> a
    137:138:int checkArgumentNonnegative(int) -> a
androidx.core.util.Supplier -> androidx.core.g.i:
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.h.a:
    android.view.View$AccessibilityDelegate mOriginalDelegate -> a
    android.view.View$AccessibilityDelegate mBridge -> b
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> c
    130:130:void <clinit>() -> <clinit>
    139:140:void <init>() -> <init>
    146:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    155:155:android.view.View$AccessibilityDelegate getBridge() -> a
    173:174:void sendAccessibilityEvent(android.view.View,int) -> a
    216:216:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    275:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    300:300:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    318:324:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    344:360:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    364:377:boolean performClickableSpanAction(int,android.view.View) -> a
    381:390:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> a
    256:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    394:396:java.util.List getActionList(android.view.View) -> b
    236:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    195:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.h.a$a:
    androidx.core.view.AccessibilityDelegateCompat mCompat -> a
    64:66:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    118:120:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:92:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    96:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    102:102:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    126:126:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    107:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    112:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.h.b:
    androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> a
    androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener -> b
    139:141:void <init>(android.content.Context) -> <init>
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> a
    256:256:boolean hasSubMenu() -> a
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> a
    279:282:void subUiVisibilityChanged(boolean) -> a
    289:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> a
    299:305:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> a
    196:196:boolean isVisible() -> b
    android.view.View onCreateActionView() -> c
    243:243:boolean onPerformDefaultAction() -> d
    182:182:boolean overridesItemVisibility() -> e
    312:314:void reset() -> f
androidx.core.view.ActionProvider$SubUiVisibilityListener -> androidx.core.h.b$a:
    void onSubUiVisibilityChanged(boolean) -> b
androidx.core.view.ActionProvider$VisibilityListener -> androidx.core.h.b$b:
androidx.core.view.GravityCompat -> androidx.core.h.c:
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    145:149:int getAbsoluteGravity(int,int) -> a
androidx.core.view.KeyEventDispatcher -> androidx.core.h.d:
    java.lang.reflect.Field sDialogKeyListenerField -> d
    boolean sActionBarFieldsFetched -> a
    boolean sDialogFieldsFetched -> c
    java.lang.reflect.Method sActionBarOnMenuKeyMethod -> b
    46:49:void <clinit>() -> <clinit>
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> a
    80:91:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> a
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> a
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> a
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> a
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> a
androidx.core.view.KeyEventDispatcher$Component -> androidx.core.h.d$a:
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
androidx.core.view.LayoutInflaterCompat -> androidx.core.h.e:
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> a
    boolean sCheckedField -> b
    71:90:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
    139:152:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> b
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.h.f:
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> a
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> a
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> b
    80:85:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> b
androidx.core.view.MenuItemCompat -> androidx.core.h.g:
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> a
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> a
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> a
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> a
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> a
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> b
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> b
androidx.core.view.MotionEventCompat -> androidx.core.h.h:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> a
androidx.core.view.NestedScrollingChild -> androidx.core.h.k:
androidx.core.view.NestedScrollingChild2 -> androidx.core.h.i:
androidx.core.view.NestedScrollingChild3 -> androidx.core.h.j:
androidx.core.view.NestedScrollingChildHelper -> androidx.core.h.l:
    android.view.ViewParent mNestedScrollingParentTouch -> a
    int[] mTempNestedScrollConsumed -> e
    android.view.View mView -> c
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    boolean mIsNestedScrollingEnabled -> d
    56:58:void <init>(android.view.View) -> <init>
    70:74:void setNestedScrollingEnabled(boolean) -> a
    100:100:boolean hasNestedScrollingParent() -> a
    114:114:boolean hasNestedScrollingParent(int) -> a
    145:164:boolean startNestedScroll(int,int) -> a
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> a
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> a
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> a
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> a
    348:355:boolean dispatchNestedFling(float,float,boolean) -> a
    368:375:boolean dispatchNestedPreFling(float,float) -> a
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> a
    86:86:boolean isNestedScrollingEnabled() -> b
    129:129:boolean startNestedScroll(int) -> b
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> b
    175:176:void stopNestedScroll() -> c
    186:191:void stopNestedScroll(int) -> c
    404:406:android.view.ViewParent getNestedScrollingParentForType(int) -> d
    425:428:int[] getTempNestedScrollConsumed() -> d
androidx.core.view.NestedScrollingParent -> androidx.core.h.o:
androidx.core.view.NestedScrollingParent2 -> androidx.core.h.m:
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int) -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    void onStopNestedScroll(android.view.View,int) -> a
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> b
androidx.core.view.NestedScrollingParent3 -> androidx.core.h.n:
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> a
androidx.core.view.NestedScrollingParentHelper -> androidx.core.h.p:
    int mNestedScrollAxesNonTouch -> b
    int mNestedScrollAxesTouch -> a
    50:51:void <init>(android.view.ViewGroup) -> <init>
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> a
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    92:92:int getNestedScrollAxes() -> a
    103:104:void onStopNestedScroll(android.view.View) -> a
    114:119:void onStopNestedScroll(android.view.View,int) -> a
androidx.core.view.OnApplyWindowInsetsListener -> androidx.core.h.q:
    androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
androidx.core.view.OneShotPreDrawListener -> androidx.core.h.r:
    android.view.ViewTreeObserver mViewTreeObserver -> e
    java.lang.Runnable mRunnable -> f
    android.view.View mView -> d
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:59:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> a
    80:86:void removeListener() -> a
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.PointerIconCompat -> androidx.core.h.s:
    java.lang.Object mPointerIcon -> a
    107:109:void <init>(java.lang.Object) -> <init>
    116:116:java.lang.Object getPointerIcon() -> a
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> a
androidx.core.view.ScrollingView -> androidx.core.h.t:
androidx.core.view.TintableBackgroundView -> androidx.core.h.u:
androidx.core.view.ViewCompat -> androidx.core.h.v:
    java.util.concurrent.atomic.AtomicInteger sNextGeneratedId -> a
    java.lang.reflect.Field sAccessibilityDelegateField -> h
    boolean sAccessibilityDelegateCheckFailed -> i
    java.util.WeakHashMap sViewPropertyAnimatorMap -> g
    java.lang.reflect.Field sMinHeightField -> d
    boolean sMinHeightFieldFetched -> e
    java.util.WeakHashMap sTransitionNameMap -> f
    java.lang.reflect.Field sMinWidthField -> b
    java.lang.ThreadLocal sThreadLocalRect -> j
    boolean sMinWidthFieldFetched -> c
    458:4051:void <clinit>() -> <clinit>
    3309:3312:boolean isAttachedToWindow(android.view.View) -> A
    3115:3118:boolean isLaidOut(android.view.View) -> B
    2697:2703:boolean isNestedScrollingEnabled(android.view.View) -> C
    2546:2549:boolean isPaddingRelative(android.view.View) -> D
    3801:3802:boolean isScreenReaderFocusable(android.view.View) -> E
    970:975:void postInvalidateOnAnimation(android.view.View) -> F
    2337:2342:void requestApplyInsets(android.view.View) -> G
    2738:2743:void stopNestedScroll(android.view.View) -> H
    3267:3270:void tickleInvalidationFlag(android.view.View) -> I
    656:657:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    686:691:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> a
    992:997:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    1010:1015:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    1032:1037:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    1154:1157:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    1492:1501:void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    1972:1980:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> a
    2245:2248:void setElevation(android.view.View,float) -> a
    2291:2299:void setTransitionName(android.view.View,java.lang.String) -> a
    2398:2399:void setFitsSystemWindows(android.view.View,boolean) -> a
    2421:2436:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> a
    2477:2485:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
    2559:2564:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
    2589:2608:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    2636:2655:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    3255:3264:void compatOffsetLeftAndRight(android.view.View,int) -> a
    3284:3287:void setClipBounds(android.view.View,android.graphics.Rect) -> a
    3373:3376:void setScrollIndicators(android.view.View,int,int) -> a
    3402:3406:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> a
    3758:3761:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> a
    3935:3935:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> a
    884:891:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> b
    955:958:void setHasTransientState(android.view.View,boolean) -> b
    1781:1786:void setPaddingRelative(android.view.View,int,int,int,int) -> b
    2452:2460:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> b
    3207:3216:void compatOffsetTopAndBottom(android.view.View,int) -> b
    3639:3650:int generateViewId() -> b
    3750:3753:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> b
    479:488:android.graphics.Rect getEmptyTempRect() -> c
    907:928:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> c
    4026:4049:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> c
    1693:1696:int getAccessibilityLiveRegion(android.view.View) -> d
    3224:3252:void offsetLeftAndRight(android.view.View,int) -> d
    3878:3878:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> d
    3176:3204:void offsetTopAndBottom(android.view.View,int) -> e
    3806:3806:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> e
    3874:3874:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> e
    1729:1732:void setAccessibilityLiveRegion(android.view.View,int) -> f
    2573:2576:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> f
    1081:1093:void setImportantForAccessibility(android.view.View,int) -> g
    2618:2621:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> g
    788:791:void setImportantForAutofill(android.view.View,int) -> h
    3299:3302:android.graphics.Rect getClipBounds(android.view.View) -> h
    3420:3428:android.view.Display getDisplay(android.view.View) -> i
    2256:2259:float getElevation(android.view.View) -> j
    2382:2385:boolean getFitsSystemWindows(android.view.View) -> k
    1054:1057:int getImportantForAccessibility(android.view.View) -> l
    744:747:int getImportantForAutofill(android.view.View) -> m
    1515:1518:int getLayoutDirection(android.view.View) -> n
    1938:1961:int getMinimumHeight(android.view.View) -> o
    1904:1927:int getMinimumWidth(android.view.View) -> p
    1760:1763:int getPaddingEnd(android.view.View) -> q
    1744:1747:int getPaddingStart(android.view.View) -> r
    1553:1556:android.view.ViewParent getParentForAccessibility(android.view.View) -> s
    2313:2319:java.lang.String getTransitionName(android.view.View) -> t
    2326:2329:int getWindowSystemUiVisibility(android.view.View) -> u
    3146:3149:float getZ(android.view.View) -> v
    3321:3324:boolean hasOnClickListeners(android.view.View) -> w
    2533:2536:boolean hasOverlappingRendering(android.view.View) -> x
    941:944:boolean hasTransientState(android.view.View) -> y
    3914:3915:boolean isAccessibilityHeading(android.view.View) -> z
androidx.core.view.ViewCompat$1 -> androidx.core.h.v$a:
    androidx.core.view.OnApplyWindowInsetsListener val$listener -> a
    2427:2427:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2430:2432:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$3 -> androidx.core.h.v$b:
    3807:3807:void <init>(int,java.lang.Class,int) -> <init>
    3807:3807:java.lang.Object frameworkGet(android.view.View) -> a
    3812:3812:java.lang.Boolean frameworkGet(android.view.View) -> a
androidx.core.view.ViewCompat$4 -> androidx.core.h.v$c:
    3879:3879:void <init>(int,java.lang.Class,int,int) -> <init>
    3879:3879:java.lang.Object frameworkGet(android.view.View) -> a
    3884:3884:java.lang.CharSequence frameworkGet(android.view.View) -> a
androidx.core.view.ViewCompat$5 -> androidx.core.h.v$d:
    3936:3936:void <init>(int,java.lang.Class,int) -> <init>
    3936:3936:java.lang.Object frameworkGet(android.view.View) -> a
    3941:3941:java.lang.Boolean frameworkGet(android.view.View) -> a
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.h.v$e:
    java.util.WeakHashMap mPanesToVisible -> d
    4054:4056:void <init>() -> <init>
    4096:4104:void checkPaneVisibility(android.view.View,boolean) -> a
    4108:4109:void registerForLayoutCallback(android.view.View) -> a
    4061:4064:void onGlobalLayout() -> onGlobalLayout
    4070:4071:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4076:4076:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.h.v$f:
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mTagKey -> a
    3965:3967:void <init>(int,java.lang.Class,int) -> <init>
    3970:3975:void <init>(int,java.lang.Class,int,int) -> <init>
    java.lang.Object frameworkGet(android.view.View) -> a
    4007:4007:boolean extrasAvailable() -> a
    3992:4000:java.lang.Object get(android.view.View) -> b
    4003:4003:boolean frameworkAvailable() -> b
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> androidx.core.h.v$g:
    boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> a
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.h.v$h:
    android.util.SparseArray mCapturedKeys -> b
    java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent -> c
    java.util.ArrayList sViewsWithListeners -> d
    java.util.WeakHashMap mViewsContainingListeners -> a
    4121:4121:void <clinit>() -> <clinit>
    4117:4136:void <init>() -> <init>
    4139:4142:android.util.SparseArray getCapturedKeys() -> a
    4146:4152:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> a
    4156:4170:boolean dispatch(android.view.View,android.view.KeyEvent) -> a
    4201:4229:boolean preDispatch(android.view.KeyEvent) -> a
    4175:4176:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> b
    4274:4298:void recalcViewsWithUnhandled() -> b
    4234:4244:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> c
androidx.core.view.ViewConfigurationCompat -> androidx.core.h.w:
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> a
    39:47:void <clinit>() -> <clinit>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> a
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> a
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> b
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> c
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> d
androidx.core.view.ViewGroupCompat -> androidx.core.h.x:
    157:161:boolean isTransitionGroup(android.view.ViewGroup) -> a
androidx.core.view.ViewParentCompat -> androidx.core.h.y:
    66:66:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    248:266:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> a
    282:298:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> a
    329:358:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> a
    384:400:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> a
    424:435:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    461:472:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
    207:225:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> b
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.h.z:
    java.lang.Runnable mEndAction -> c
    java.lang.Runnable mStartAction -> b
    int mOldLayerType -> d
    java.lang.ref.WeakReference mView -> a
    36:38:void <init>(android.view.View) -> <init>
    121:124:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> a
    136:139:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> a
    252:255:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> a
    462:465:void cancel() -> a
    726:734:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> a
    738:758:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> a
    773:787:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> a
    181:184:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> b
    235:238:long getDuration() -> b
    284:287:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> b
    642:645:void start() -> c
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.h.z$a:
    androidx.core.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    739:739:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    742:743:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    747:748:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    752:753:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.h.z$b:
    androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    777:777:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    780:781:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.h.z$c:
    androidx.core.view.ViewPropertyAnimatorCompat mVpa -> a
    boolean mAnimEndCalled -> b
    44:46:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    73:95:void onAnimationEnd(android.view.View) -> a
    51:69:void onAnimationStart(android.view.View) -> b
    99:107:void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorListener -> androidx.core.h.a0:
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.h.b0:
    27:27:void <init>() -> <init>
    34:34:void onAnimationStart(android.view.View) -> b
    48:48:void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorUpdateListener -> androidx.core.h.c0:
    void onAnimationUpdate(android.view.View) -> a
androidx.core.view.WindowInsetsCompat -> androidx.core.h.d0:
    java.lang.Object mInsets -> a
    35:37:void <init>(java.lang.Object) -> <init>
    195:198:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> a
    213:217:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> a
    393:393:androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> a
    397:397:java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat) -> a
    113:116:int getSystemWindowInsetBottom() -> b
    62:65:int getSystemWindowInsetLeft() -> c
    96:99:int getSystemWindowInsetRight() -> d
    79:82:int getSystemWindowInsetTop() -> e
    377:381:boolean equals(java.lang.Object) -> equals
    130:133:boolean hasSystemWindowInsets() -> f
    164:167:boolean isConsumed() -> g
    389:389:int hashCode() -> hashCode
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.h.e0.a:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat -> e
    int mClickableSpanActionId -> f
    int mOriginalClickableSpanId -> d
    54:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    68:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.h.e0.b:
    288:291:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    307:310:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.h.e0.c:
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    int mParentVirtualDescendantId -> b
    int sClickableSpanId -> c
    1448:1448:void <clinit>() -> <clinit>
    1476:1478:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1543:1543:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> A
    1487:1487:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> a
    1554:1554:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1679:1680:void addChild(android.view.View) -> a
    1697:1700:void addChild(android.view.View,int) -> a
    1752:1752:int getActions() -> a
    1767:1768:void addAction(int) -> a
    1784:1793:java.util.List extrasIntList(java.lang.String) -> a
    1813:1816:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> a
    1875:1878:boolean performAction(int,android.os.Bundle) -> a
    1998:1999:void getBoundsInParent(android.graphics.Rect) -> a
    2193:2196:void setAccessibilityFocused(boolean) -> a
    2420:2421:void setClassName(java.lang.CharSequence) -> a
    2467:2482:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> a
    2512:2520:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> a
    2537:2541:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> a
    2727:2733:void setCollectionInfo(java.lang.Object) -> a
    3818:3825:void setBooleanProperty(int,boolean) -> a
    1647:1647:int getChildCount() -> b
    1838:1841:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> b
    1895:1898:void setMovementGranularities(int) -> b
    1963:1964:void setParent(android.view.View) -> b
    1986:1990:void setParent(android.view.View,int) -> b
    2022:2023:void getBoundsInScreen(android.graphics.Rect) -> b
    2579:2580:void setContentDescription(java.lang.CharSequence) -> b
    2736:2741:void setCollectionItemInfo(java.lang.Object) -> b
    3078:3081:void setCanOpenPopup(boolean) -> b
    1563:1564:void setSource(android.view.View) -> c
    1586:1589:void setSource(android.view.View,int) -> c
    2013:2014:void setBoundsInParent(android.graphics.Rect) -> c
    2061:2062:void setCheckable(boolean) -> c
    2405:2405:java.lang.CharSequence getClassName() -> c
    2929:2932:void setError(java.lang.CharSequence) -> c
    3834:3836:java.lang.String getActionSymbolicName(int) -> c
    2037:2038:void setBoundsInScreen(android.graphics.Rect) -> d
    2085:2086:void setChecked(boolean) -> d
    2485:2490:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> d
    2750:2756:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> d
    2908:2913:void setHintText(java.lang.CharSequence) -> d
    2243:2244:void setClickable(boolean) -> e
    2396:2397:void setPackageName(java.lang.CharSequence) -> e
    2494:2494:android.util.SparseArray getSpansFromViewTags(android.view.View) -> e
    2564:2564:java.lang.CharSequence getContentDescription() -> e
    3753:3770:boolean equals(java.lang.Object) -> equals
    1515:1515:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> f
    2831:2834:void setContentInvalid(boolean) -> f
    3132:3135:android.os.Bundle getExtras() -> f
    3532:3537:void setPaneTitle(java.lang.CharSequence) -> f
    1906:1909:int getMovementGranularities() -> g
    2459:2460:void setText(java.lang.CharSequence) -> g
    2544:2556:void removeCollectedSpans(android.view.View) -> g
    3418:3421:void setDismissable(boolean) -> g
    2291:2292:void setEnabled(boolean) -> h
    2381:2381:java.lang.CharSequence getPackageName() -> h
    2503:2507:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> h
    3748:3748:int hashCode() -> hashCode
    2109:2110:void setFocusable(boolean) -> i
    2429:2443:java.lang.CharSequence getText() -> i
    2133:2134:void setFocused(boolean) -> j
    2623:2626:java.lang.String getViewIdResourceName() -> j
    2173:2176:boolean isAccessibilityFocused() -> k
    3655:3660:void setHeading(boolean) -> k
    2046:2046:boolean isCheckable() -> l
    2267:2268:void setLongClickable(boolean) -> l
    2070:2070:boolean isChecked() -> m
    3584:3589:void setScreenReaderFocusable(boolean) -> m
    2228:2228:boolean isClickable() -> n
    2339:2340:void setScrollable(boolean) -> n
    2219:2220:void setSelected(boolean) -> o
    2276:2276:boolean isEnabled() -> o
    2094:2094:boolean isFocusable() -> p
    3619:3624:void setShowingHintText(boolean) -> p
    2118:2118:boolean isFocused() -> q
    2162:2165:void setVisibleToUser(boolean) -> q
    2252:2252:boolean isLongClickable() -> r
    2300:2300:boolean isPassword() -> s
    2324:2324:boolean isScrollable() -> t
    3775:3814:java.lang.String toString() -> toString
    2204:2204:boolean isSelected() -> u
    2142:2145:boolean isVisibleToUser() -> v
    2590:2591:void recycle() -> w
    1494:1494:android.view.accessibility.AccessibilityNodeInfo unwrap() -> x
    2528:2534:void clearExtrasSpans() -> y
    2524:2524:boolean hasSpans() -> z
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.h.e0.c$a:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> h
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> f
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> g
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> d
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> e
    androidx.core.view.accessibility.AccessibilityViewCommand mCommand -> c
    java.lang.Object mAction -> a
    java.lang.Class mViewCommandArgumentClass -> b
    97:500:void <clinit>() -> <clinit>
    523:524:void <init>(int,java.lang.CharSequence) -> <init>
    546:547:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    551:561:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    569:572:int getId() -> a
    599:615:boolean perform(android.view.View,android.os.Bundle) -> a
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.h.e0.c$b:
    java.lang.Object mInfo -> a
    699:701:void <init>(java.lang.Object) -> <init>
    669:676:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> a
    691:695:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> a
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.h.e0.c$c:
    java.lang.Object mInfo -> a
    823:825:void <init>(java.lang.Object) -> <init>
    790:797:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> a
    833:836:int getColumnIndex() -> a
    846:849:int getColumnSpan() -> b
    859:862:int getRowIndex() -> c
    872:875:int getRowSpan() -> d
    900:903:boolean isSelected() -> e
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.h.e0.d:
    java.lang.Object mProvider -> a
    104:112:void <init>() -> <init>
    120:122:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> a
    155:155:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    172:172:boolean performAction(int,int,android.os.Bundle) -> a
    192:192:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    208:208:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.h.e0.d$a:
    androidx.core.view.accessibility.AccessibilityNodeProviderCompat mCompat -> a
    38:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:67:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.h.e0.d$b:
    80:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.h.e0.e:
    137:140:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> a
    506:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> a
    556:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> b
androidx.core.view.accessibility.AccessibilityViewCommand -> androidx.core.h.e0.f:
    boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> a
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.h.e0.f$a:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    56:57:void setBundle(android.os.Bundle) -> a
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.h.e0.f$b:
    66:66:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.h.e0.f$c:
    100:100:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.h.e0.f$d:
    185:185:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.h.e0.f$e:
    150:150:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.h.e0.f$f:
    171:171:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.h.e0.f$g:
    115:115:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.h.e0.f$h:
    135:135:void <init>() -> <init>
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.a:
    float[] mMinimumVelocity -> m
    float[] mMaximumVelocity -> n
    boolean mAlreadyDelayed -> o
    float[] mRelativeVelocity -> l
    boolean mNeedsReset -> p
    float[] mMaximumEdges -> i
    int mEdgeType -> j
    int mActivationDelay -> k
    float[] mRelativeEdges -> h
    android.view.animation.Interpolator mEdgeInterpolator -> e
    boolean mNeedsCancel -> q
    boolean mAnimating -> r
    boolean mEnabled -> s
    boolean mExclusive -> t
    androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller -> d
    java.lang.Runnable mRunnable -> g
    int DEFAULT_ACTIVATION_DELAY -> u
    android.view.View mTarget -> f
    195:195:void <clinit>() -> <clinit>
    210:226:void <init>(android.view.View) -> <init>
    boolean canTargetScrollHorizontally(int) -> a
    void scrollTargetBy(int,int) -> a
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> a
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> a
    549:568:float computeTargetVelocity(int,float,float,float) -> a
    617:627:float getEdgeValue(float,float,float,float) -> a
    663:668:int constrain(int,int,int) -> a
    673:678:float constrain(float,float,float) -> a
    687:692:void cancelTargetTouch() -> a
    boolean canTargetScrollVertically(int) -> b
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> b
    502:506:boolean shouldAnimate() -> b
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> c
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> c
    538:545:void requestStop() -> c
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> d
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> d
    514:530:void startAnimating() -> d
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> e
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> e
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> f
    634:659:float constrainEdgeValue(float,float) -> f
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.a$a:
    long mStopTime -> i
    float mStopValue -> j
    long mDeltaTime -> f
    long mStartTime -> e
    int mEffectiveRampDown -> k
    int mDeltaY -> h
    float mTargetVelocityY -> d
    float mTargetVelocityX -> c
    int mDeltaX -> g
    int mRampDownDuration -> b
    int mRampUpDuration -> a
    756:762:void <init>() -> <init>
    769:770:void setRampDownDuration(int) -> a
    800:804:float getValueAt(long) -> a
    820:820:float interpolateValue(float) -> a
    831:832:void computeScrollDelta() -> a
    852:854:void setTargetVelocity(float,float) -> a
    765:766:void setRampUpDuration(int) -> b
    869:869:int getDeltaX() -> b
    877:877:int getDeltaY() -> c
    857:857:int getHorizontalDirection() -> d
    861:861:int getVerticalDirection() -> e
    795:795:boolean isFinished() -> f
    788:792:void requestStop() -> g
    776:782:void start() -> h
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.a$b:
    androidx.core.widget.AutoScrollHelper this$0 -> d
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:712:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.b:
    boolean PLATFORM_SUPPORTS_AUTOSIZE -> a
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.c:
    java.lang.reflect.Field sButtonDrawableField -> a
    boolean sButtonDrawableFieldFetched -> b
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
    123:145:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
    71:77:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> b
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    java.lang.Runnable mDelayedShow -> i
    java.lang.Runnable mDelayedHide -> h
    boolean mPostedHide -> e
    boolean mPostedShow -> f
    long mStartTime -> d
    boolean mDismissed -> g
    68:69:void <init>(android.content.Context) -> <init>
    72:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:90:void removeCallbacks() -> a
    77:79:void onAttachedToWindow() -> onAttachedToWindow
    83:85:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.core.widget.ContentLoadingProgressBar$1 -> androidx.core.widget.ContentLoadingProgressBar$a:
    androidx.core.widget.ContentLoadingProgressBar this$0 -> d
    45:45:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    49:52:void run() -> run
androidx.core.widget.ContentLoadingProgressBar$2 -> androidx.core.widget.ContentLoadingProgressBar$b:
    androidx.core.widget.ContentLoadingProgressBar this$0 -> d
    55:55:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    59:64:void run() -> run
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.d:
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> a
androidx.core.widget.ImageViewCompat -> androidx.core.widget.e:
    37:40:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> a
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> a
    88:105:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> a
    74:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> b
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.f:
    android.widget.ListView mTarget -> v
    33:36:void <init>(android.widget.ListView) -> <init>
    40:41:void scrollTargetBy(int,int) -> a
    46:46:boolean canTargetScrollHorizontally(int) -> a
    51:80:boolean canTargetScrollVertically(int) -> b
androidx.core.widget.ListViewCompat -> androidx.core.widget.g:
    67:85:boolean canScrollList(android.widget.ListView,int) -> a
    37:55:void scrollListBy(android.widget.ListView,int) -> b
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    boolean mIsBeingDragged -> m
    boolean mFillViewport -> o
    boolean mIsLaidOut -> k
    int[] mScrollOffset -> u
    androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> D
    android.graphics.Rect mTempRect -> e
    android.widget.OverScroller mScroller -> f
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> z
    float mVerticalScrollFactor -> B
    android.widget.EdgeEffect mEdgeGlowTop -> g
    int[] SCROLLVIEW_STYLEABLE -> E
    int mNestedYOffset -> w
    int mMaximumVelocity -> s
    int mTouchSlop -> q
    int[] mScrollConsumed -> v
    android.view.VelocityTracker mVelocityTracker -> n
    boolean mSmoothScrollingEnabled -> p
    androidx.core.view.NestedScrollingChildHelper mChildHelper -> A
    boolean mIsLayoutDirty -> j
    int mLastMotionY -> i
    long mLastScroll -> d
    androidx.core.widget.NestedScrollView$SavedState mSavedState -> y
    android.widget.EdgeEffect mEdgeGlowBottom -> h
    android.view.View mChildToScrollTo -> l
    int mLastScrollerY -> x
    androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> C
    int mActivePointerId -> t
    int mMinimumVelocity -> r
    175:177:void <clinit>() -> <clinit>
    189:190:void <init>(android.content.Context) -> <init>
    193:194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:215:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    222:224:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> a
    253:253:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> a
    310:311:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> a
    314:324:void onNestedScrollInternal(int,int,int[]) -> a
    337:339:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    343:345:void onStopNestedScroll(android.view.View,int) -> a
    350:351:void onNestedScroll(android.view.View,int,int,int,int,int) -> a
    356:357:void onNestedPreScroll(android.view.View,int,int,int[],int) -> a
    629:667:boolean executeKeyEvent(android.view.KeyEvent) -> a
    988:1001:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    1058:1108:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    1140:1201:android.view.View findFocusableViewInBounds(boolean,int,int) -> a
    1319:1365:boolean arrowScroll(int) -> a
    1373:1373:boolean isOffScreen(android.view.View) -> a
    1381:1384:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    1410:1432:void smoothScrollBy(int,int) -> a
    1596:1603:void runAnimatedScroll(boolean) -> a
    1606:1608:void abortAnimatedScroll() -> a
    1637:1646:boolean scrollToChildRect(android.graphics.Rect,boolean) -> a
    1658:1719:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> a
    1854:1859:boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    1981:1997:int clamp(int,int,int) -> a
    468:469:void addView(android.view.View) -> addView
    477:478:void addView(android.view.View,int) -> addView
    486:487:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    495:496:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    331:331:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> b
    519:526:boolean canScroll() -> b
    1287:1308:boolean scrollAndFocus(int,int,int) -> b
    1441:1442:void smoothScrollTo(int,int) -> b
    1616:1626:void scrollToChild(android.view.View) -> b
    1870:1879:void fling(int) -> b
    230:230:boolean startNestedScroll(int,int) -> c
    1255:1271:boolean fullScroll(int) -> c
    1882:1891:void endDrag() -> c
    1504:1504:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1497:1497:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1490:1490:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1540:1593:void computeScroll() -> computeScroll
    1483:1483:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1476:1476:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1452:1469:int computeVerticalScrollRange() -> computeVerticalScrollRange
    240:240:boolean hasNestedScrollingParent(int) -> d
    671:679:boolean inChild(int,int) -> d
    1917:1927:void ensureGlows() -> d
    617:617:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    297:297:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    302:302:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    292:292:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    286:286:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1931:1978:void draw(android.graphics.Canvas) -> draw
    683:688:void initOrResetVelocityTracker() -> e
    1217:1239:boolean pageScroll(int) -> e
    235:236:void stopNestedScroll(int) -> f
    456:464:void initScrollView() -> f
    691:694:void initVelocityTrackerIfNotExists() -> g
    1394:1401:void doScrollY(int) -> g
    431:444:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    452:452:int getMaxScrollAmount() -> getMaxScrollAmount
    404:404:int getNestedScrollAxes() -> getNestedScrollAxes
    1112:1120:int getScrollRange() -> getScrollRange
    416:426:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1033:1044:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    697:701:void recycleVelocityTracker() -> h
    280:280:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    265:265:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1510:1521:void measureChild(android.view.View,int,int) -> measureChild
    1526:1535:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1825:1828:void onAttachedToWindow() -> onAttachedToWindow
    1005:1029:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    724:819:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1787:1821:void onLayout(boolean,int,int,int,int) -> onLayout
    581:612:void onMeasure(int,int) -> onMeasure
    389:394:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    399:399:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    384:385:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    379:380:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    368:369:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1050:1051:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1747:1766:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2012:2021:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2025:2028:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    572:577:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1832:1836:void onSizeChanged(int,int,int,int) -> onSizeChanged
    363:363:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    373:374:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    824:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1724:1731:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1773:1776:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    705:709:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1781:1783:void requestLayout() -> requestLayout
    1901:1914:void scrollTo(int,int) -> scrollTo
    549:553:void setFillViewport(boolean) -> setFillViewport
    260:261:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    512:513:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    567:568:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    411:411:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    270:270:boolean startNestedScroll(int) -> startNestedScroll
    275:276:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$a:
    2070:2070:void <init>() -> <init>
    2073:2091:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    2108:2123:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2127:2136:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> androidx.core.widget.NestedScrollView$b:
    void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> a
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    int scrollPosition -> d
    2056:2056:void <clinit>() -> <clinit>
    2035:2036:void <init>(android.os.Parcelable) -> <init>
    2039:2041:void <init>(android.os.Parcel) -> <init>
    2051:2051:java.lang.String toString() -> toString
    2045:2047:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$a:
    2057:2057:void <init>() -> <init>
    2057:2057:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2060:2060:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2057:2057:java.lang.Object[] newArray(int) -> newArray
    2065:2065:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.h:
    java.lang.reflect.Field sOverlapAnchorField -> c
    boolean sSetWindowLayoutTypeMethodAttempted -> b
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> a
    boolean sOverlapAnchorFieldAttempted -> d
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    153:175:void setWindowLayoutType(android.widget.PopupWindow,int) -> a
androidx.core.widget.TextViewCompat -> androidx.core.widget.i:
    java.lang.reflect.Field sMaxModeField -> c
    java.lang.reflect.Field sMaximumField -> a
    boolean sMaximumFieldFetched -> b
    boolean sMaxModeFieldFetched -> d
    114:121:java.lang.reflect.Field retrieveField(java.lang.String) -> a
    126:130:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> a
    151:159:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    295:310:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> a
    519:523:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> a
    693:718:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> a
    842:869:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> a
    884:886:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> a
    957:974:int getTextDirection(android.text.TextDirectionHeuristic) -> a
    987:993:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> a
    1021:1028:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> a
    738:759:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> b
    768:768:int getFirstBaselineToTopHeight(android.widget.TextView) -> b
    778:778:int getLastBaselineToBottomHeight(android.widget.TextView) -> c
    796:804:void setLineHeight(android.widget.TextView,int) -> c
    226:244:int getMaxLines(android.widget.TextView) -> d
    283:288:void setTextAppearance(android.widget.TextView,int) -> d
    901:935:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> e
    815:827:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> f
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.i$a:
    android.widget.TextView mTextView -> b
    boolean mCanUseMenuBuilderReferences -> e
    java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod -> d
    boolean mInitializedMenuBuilderReferences -> f
    android.view.ActionMode$Callback mCallback -> a
    java.lang.Class mMenuBuilderClass -> c
    549:553:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    577:612:void recomputeProcessTextMenuItems(android.view.Menu) -> a
    630:642:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> a
    646:652:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> a
    659:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> a
    665:665:boolean isEditable(android.widget.TextView) -> a
    671:671:android.content.Intent createProcessTextIntent() -> a
    568:568:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    557:557:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    573:574:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    562:563:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.core.widget.TintableCompoundButton -> androidx.core.widget.j:
androidx.core.widget.TintableCompoundDrawablesView -> androidx.core.widget.k:
androidx.core.widget.TintableImageSourceView -> androidx.core.widget.l:
androidx.cursoradapter.widget.CursorAdapter -> a.e.a.a:
    androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver -> i
    android.database.Cursor mCursor -> f
    int mRowIDColumn -> h
    android.database.DataSetObserver mDataSetObserver -> j
    androidx.cursoradapter.widget.CursorFilter mCursorFilter -> k
    boolean mAutoRequery -> e
    android.content.Context mContext -> g
    boolean mDataValid -> d
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    177:200:void init(android.content.Context,android.database.Cursor,int) -> a
    208:208:android.database.Cursor getCursor() -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    334:338:void changeCursor(android.database.Cursor) -> b
    469:473:void onContentChanged() -> b
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> c
    216:219:int getCount() -> getCount
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> a.e.a.a$a:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> a.e.a.a$b:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> a.e.a.b:
    androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient -> a
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> a.e.a.b$a:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
    android.database.Cursor getCursor() -> a
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    void changeCursor(android.database.Cursor) -> b
androidx.cursoradapter.widget.ResourceCursorAdapter -> a.e.a.c:
    int mLayout -> l
    int mDropDownLayout -> m
    android.view.LayoutInflater mInflater -> n
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    androidx.customview.view.AbsSavedState EMPTY_STATE -> e
    android.os.Parcelable mSuperState -> d
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    75:75:android.os.Parcelable getSuperState() -> b
    80:80:int describeContents() -> describeContents
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$a:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.a.a:
    int mKeyboardFocusedVirtualViewId -> l
    int mHoveredVirtualViewId -> m
    int mAccessibilityFocusedVirtualViewId -> k
    android.graphics.Rect mTempParentRect -> e
    android.graphics.Rect mTempVisibleRect -> f
    android.graphics.Rect mTempScreenRect -> d
    android.view.View mHost -> i
    int[] mTempGlobalRect -> g
    android.graphics.Rect INVALID_PARENT_BOUNDS -> n
    androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider -> j
    androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER -> p
    androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER -> o
    android.view.accessibility.AccessibilityManager mManager -> h
    100:347:void <clinit>() -> <clinit>
    135:137:void <init>(android.view.View) -> <init>
    int getVirtualViewAt(float,float) -> a
    void getVisibleVirtualViews(java.util.List) -> a
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> a
    void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    182:183:boolean dispatchHoverEvent(android.view.MotionEvent) -> a
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> a
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> a
    450:471:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> a
    505:506:boolean sendEventForVirtualView(int,int) -> a
    601:601:void onVirtualViewKeyboardFocusChanged(int,boolean) -> a
    755:759:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    904:904:boolean performActionForHost(int,android.os.Bundle) -> a
    932:933:boolean isVisibleToUser(android.graphics.Rect) -> a
    1046:1056:boolean clearKeyboardFocusForVirtualView(int) -> a
    1116:1116:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> a
    1128:1128:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> a
    1206:1206:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    290:290:int getAccessibilityFocusedVirtualViewId() -> b
    372:423:boolean moveFocus(int,android.graphics.Rect) -> b
    637:639:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> b
    660:664:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    719:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> b
    895:897:boolean performAction(int,int,android.os.Bundle) -> b
    298:298:int getKeyboardFocusedVirtualViewId() -> c
    677:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> c
    908:914:boolean performActionForChild(int,int,android.os.Bundle) -> c
    1016:1035:boolean requestKeyboardFocusForVirtualView(int) -> c
    481:481:boolean clickKeyboardFocusedVirtualView() -> d
    998:1005:boolean clearAccessibilityFocus(int) -> d
    653:655:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> e
    734:750:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> e
    427:436:androidx.collection.SparseArrayCompat getAllNodes() -> f
    791:812:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> f
    309:313:int keyToDirection(int) -> g
    968:969:boolean requestAccessibilityFocus(int) -> h
    612:624:void updateHoveredVirtualView(int) -> i
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.a.a$a:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> a
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> a
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.a.a$b:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> a
    349:349:int size(java.lang.Object) -> a
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> a
    358:358:int size(androidx.collection.SparseArrayCompat) -> a
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.a.a$c:
    androidx.customview.widget.ExploreByTouchHelper this$0 -> b
    1238:1239:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> a
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
androidx.customview.widget.FocusStrategy -> androidx.customview.a.b:
    40:53:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> a
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> a
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> a
    243:248:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> a
    283:283:int getWeightedDistanceFor(int,int) -> a
    297:299:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> a
    326:329:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> a
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> b
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> b
    343:345:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> b
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> c
    370:372:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> d
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> e
    398:400:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> f
    423:427:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> g
androidx.customview.widget.FocusStrategy$BoundsAdapter -> androidx.customview.a.b$a:
    void obtainBounds(java.lang.Object,android.graphics.Rect) -> a
androidx.customview.widget.FocusStrategy$CollectionAdapter -> androidx.customview.a.b$b:
    java.lang.Object get(java.lang.Object,int) -> a
    int size(java.lang.Object) -> a
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.a.b$c:
    androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter -> g
    boolean mIsLayoutRtl -> f
    android.graphics.Rect mTemp2 -> e
    android.graphics.Rect mTemp1 -> d
    101:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.a.c:
    int mEdgeSize -> o
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    android.view.ViewGroup mParentView -> u
    float[] mLastMotionY -> g
    java.lang.Runnable mSetIdleRunnable -> v
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    android.view.View mCapturedView -> s
    float[] mInitialMotionX -> d
    int mTouchSlop -> b
    int mActivePointerId -> c
    androidx.customview.widget.ViewDragHelper$Callback mCallback -> r
    int mDragState -> a
    boolean mReleaseInProgress -> t
    android.widget.OverScroller mScroller -> q
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    android.view.animation.Interpolator sInterpolator -> w
    int[] mEdgeDragsLocked -> j
    float mMinVelocity -> n
    int mTrackingEdges -> p
    float mMaxVelocity -> m
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> a
    369:371:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> a
    411:412:void setMinVelocity(float) -> a
    471:472:void captureChildView(android.view.View,int) -> a
    525:535:void abort() -> a
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> a
    670:673:int clampMag(int,int,int) -> a
    687:690:float clampMag(float,float,float) -> a
    735:769:boolean continueSettling(boolean) -> a
    779:787:void dispatchViewReleased(float,float) -> a
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> a
    1255:1273:void reportNewEdgeDrags(float,float,int) -> a
    1276:1283:boolean checkNewEdgeDrag(float,float,int,int) -> a
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> a
    1334:1340:boolean checkTouchSlop(int) -> a
    1359:1376:boolean checkTouchSlop(int,int) -> a
    1424:1443:void dragTo(int,int,int,int) -> a
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> a
    511:518:void cancel() -> b
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> b
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> b
    638:656:int computeAxisDuration(int,int,int) -> b
    694:696:float distanceInfluenceForSnapDuration(float) -> b
    848:853:void saveInitialMotion(float,float,int) -> b
    884:884:boolean isPointerDown(int) -> b
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> b
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> b
    1487:1495:android.view.View findTopChildUnder(int,int) -> b
    487:487:android.view.View getCapturedView() -> c
    856:868:void saveLastMotion(android.view.MotionEvent) -> c
    888:896:void setDragState(int) -> c
    1455:1455:boolean isCapturedViewUnder(int,int) -> c
    447:448:void setEdgeTrackingEnabled(int) -> d
    459:459:int getEdgeSize() -> d
    577:578:boolean settleCapturedViewAt(int,int) -> d
    503:503:int getTouchSlop() -> e
    804:805:void clearMotionHistory(int) -> e
    1499:1506:int getEdgesTouched(int,int) -> e
    431:431:int getViewDragState() -> f
    818:845:void ensureMotionHistorySizeForId(int) -> f
    790:801:void clearMotionHistory() -> g
    1510:1516:boolean isValidPointerForActionMove(int) -> g
    1413:1421:void releaseViewForPointerUp() -> h
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.a.c$a:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.a.c$b:
    androidx.customview.widget.ViewDragHelper this$0 -> d
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.a.c$c:
    152:152:void <init>() -> <init>
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    187:187:void onViewCaptured(android.view.View,int) -> a
    246:246:void onEdgeDragStarted(int,int) -> a
    255:255:int getOrderedChildIndex(int) -> a
    266:266:int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    boolean tryCaptureView(android.view.View,int) -> b
    220:220:void onEdgeTouched(int,int) -> b
    232:232:boolean onEdgeLock(int) -> b
    277:277:int getViewVerticalDragRange(android.view.View) -> b
    void onViewDragStateChanged(int) -> c
androidx.databinding.BaseObservable -> androidx.databinding.a:
    androidx.databinding.PropertyChangeRegistry mCallbacks -> d
    28:29:void <init>() -> <init>
    33:37:void addOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback) -> addOnPropertyChangedCallback
    55:59:void notifyChange() -> notifyChange
    71:75:void notifyPropertyChanged(int) -> notifyPropertyChanged
    43:47:void removeOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback) -> removeOnPropertyChangedCallback
androidx.databinding.BaseObservableField -> androidx.databinding.b:
    8:9:void <init>() -> <init>
    11:19:void <init>(androidx.databinding.Observable[]) -> <init>
androidx.databinding.BaseObservableField$DependencyCallback -> androidx.databinding.b$a:
    androidx.databinding.BaseObservableField this$0 -> a
    21:21:void <init>(androidx.databinding.BaseObservableField) -> <init>
    24:25:void onPropertyChanged(androidx.databinding.Observable,int) -> a
androidx.databinding.CallbackRegistry -> androidx.databinding.c:
    long[] mRemainderRemoved -> f
    long mFirst64Removed -> e
    java.util.List mCallbacks -> d
    int mNotificationLevel -> g
    androidx.databinding.CallbackRegistry$NotifierCallback mNotifier -> h
    75:77:void <init>(androidx.databinding.CallbackRegistry$NotifierCallback) -> <init>
    90:89:void notifyCallbacks(java.lang.Object,int,java.lang.Object) -> a
    168:177:void notifyRemainder(java.lang.Object,int,java.lang.Object,int) -> a
    198:205:void notifyCallbacks(java.lang.Object,int,java.lang.Object,int,int,long) -> a
    213:212:void add(java.lang.Object) -> a
    229:245:boolean isRemoved(int) -> a
    260:269:void removeRemovedCallbacks(int,long) -> a
    121:123:void notifyFirst64(java.lang.Object,int,java.lang.Object) -> b
    277:276:void remove(java.lang.Object) -> b
    288:305:void setRemovalBit(int) -> b
    140:153:void notifyRecurse(java.lang.Object,int,java.lang.Object) -> c
    44:44:java.lang.Object clone() -> clone
    378:377:androidx.databinding.CallbackRegistry clone() -> clone
androidx.databinding.CallbackRegistry$NotifierCallback -> androidx.databinding.c$a:
    404:404:void <init>() -> <init>
    void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object) -> a
androidx.databinding.DataBinderMapper -> androidx.databinding.d:
    32:32:void <init>() -> <init>
    androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int) -> a
    androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int) -> a
    int getLayoutId(java.lang.String) -> a
    42:42:java.util.List collectDependencies() -> a
androidx.databinding.DataBinderMapperImpl -> androidx.databinding.e:
    4:6:void <init>() -> <init>
androidx.databinding.DataBindingComponent -> androidx.databinding.f:
androidx.databinding.DataBindingUtil -> androidx.databinding.g:
    androidx.databinding.DataBinderMapper sMapper -> a
    androidx.databinding.DataBindingComponent sDefaultComponent -> b
    32:33:void <clinit>() -> <clinit>
    95:95:androidx.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean) -> a
    124:130:androidx.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean,androidx.databinding.DataBindingComponent) -> a
    152:152:androidx.databinding.ViewDataBinding bind(android.view.View) -> a
    174:180:androidx.databinding.ViewDataBinding bind(android.view.View,androidx.databinding.DataBindingComponent) -> a
    194:194:androidx.databinding.ViewDataBinding bind(androidx.databinding.DataBindingComponent,android.view.View[],int) -> a
    199:199:androidx.databinding.ViewDataBinding bind(androidx.databinding.DataBindingComponent,android.view.View,int) -> a
    284:284:androidx.databinding.ViewDataBinding setContentView(android.app.Activity,int) -> a
    303:306:androidx.databinding.ViewDataBinding setContentView(android.app.Activity,int,androidx.databinding.DataBindingComponent) -> a
    323:333:androidx.databinding.ViewDataBinding bindToAddedViews(androidx.databinding.DataBindingComponent,android.view.ViewGroup,int,int) -> a
    266:266:androidx.databinding.ViewDataBinding getBinding(android.view.View) -> b
androidx.databinding.MergedDataBinderMapper -> androidx.databinding.h:
    java.util.List mMappers -> b
    java.util.List mFeatureBindingMappers -> c
    java.util.Set mExistingMappers -> a
    32:43:void <init>() -> <init>
    55:63:void addMapper(androidx.databinding.DataBinderMapper) -> a
    73:82:androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int) -> a
    88:97:androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int) -> a
    102:111:int getLayoutId(java.lang.String) -> a
    132:148:boolean loadFeatures() -> b
androidx.databinding.Observable -> androidx.databinding.i:
androidx.databinding.Observable$OnPropertyChangedCallback -> androidx.databinding.i$a:
    51:51:void <init>() -> <init>
    void onPropertyChanged(androidx.databinding.Observable,int) -> a
androidx.databinding.ObservableBoolean -> androidx.databinding.ObservableBoolean:
    101:101:void <clinit>() -> <clinit>
    52:54:void <init>(boolean) -> <init>
    59:60:void <init>() -> <init>
    70:71:void <init>(androidx.databinding.Observable[]) -> <init>
    93:93:int describeContents() -> describeContents
    77:77:boolean get() -> get
    85:89:void set(boolean) -> set
    98:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableBoolean$1 -> androidx.databinding.ObservableBoolean$a:
    102:102:void <init>() -> <init>
    102:102:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    106:106:androidx.databinding.ObservableBoolean createFromParcel(android.os.Parcel) -> createFromParcel
    102:102:java.lang.Object[] newArray(int) -> newArray
    111:111:androidx.databinding.ObservableBoolean[] newArray(int) -> newArray
androidx.databinding.ObservableByte -> androidx.databinding.ObservableByte:
    103:103:void <clinit>() -> <clinit>
    53:55:void <init>(byte) -> <init>
    60:61:void <init>() -> <init>
    71:72:void <init>(androidx.databinding.Observable[]) -> <init>
    95:95:int describeContents() -> describeContents
    78:78:byte get() -> get
    87:91:void set(byte) -> set
    100:101:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableByte$1 -> androidx.databinding.ObservableByte$a:
    104:104:void <init>() -> <init>
    104:104:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    108:108:androidx.databinding.ObservableByte createFromParcel(android.os.Parcel) -> createFromParcel
    104:104:java.lang.Object[] newArray(int) -> newArray
    113:113:androidx.databinding.ObservableByte[] newArray(int) -> newArray
androidx.databinding.ObservableChar -> androidx.databinding.ObservableChar:
    102:102:void <clinit>() -> <clinit>
    52:54:void <init>(char) -> <init>
    59:60:void <init>() -> <init>
    70:71:void <init>(androidx.databinding.Observable[]) -> <init>
    94:94:int describeContents() -> describeContents
    77:77:char get() -> get
    86:90:void set(char) -> set
    99:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableChar$1 -> androidx.databinding.ObservableChar$a:
    103:103:void <init>() -> <init>
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableChar createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableChar[] newArray(int) -> newArray
androidx.databinding.ObservableDouble -> androidx.databinding.ObservableDouble:
    102:102:void <clinit>() -> <clinit>
    52:54:void <init>(double) -> <init>
    59:60:void <init>() -> <init>
    70:71:void <init>(androidx.databinding.Observable[]) -> <init>
    94:94:int describeContents() -> describeContents
    77:77:double get() -> get
    86:90:void set(double) -> set
    99:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableDouble$1 -> androidx.databinding.ObservableDouble$a:
    103:103:void <init>() -> <init>
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableDouble createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableDouble[] newArray(int) -> newArray
androidx.databinding.ObservableField -> androidx.databinding.j:
    55:57:void <init>(java.lang.Object) -> <init>
    62:63:void <init>() -> <init>
    73:74:void <init>(androidx.databinding.Observable[]) -> <init>
    81:81:java.lang.Object get() -> get
    90:94:void set(java.lang.Object) -> set
androidx.databinding.ObservableFloat -> androidx.databinding.ObservableFloat:
    102:102:void <clinit>() -> <clinit>
    52:54:void <init>(float) -> <init>
    59:60:void <init>() -> <init>
    70:71:void <init>(androidx.databinding.Observable[]) -> <init>
    94:94:int describeContents() -> describeContents
    77:77:float get() -> get
    86:90:void set(float) -> set
    99:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableFloat$1 -> androidx.databinding.ObservableFloat$a:
    103:103:void <init>() -> <init>
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableFloat createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableFloat[] newArray(int) -> newArray
androidx.databinding.ObservableInt -> androidx.databinding.ObservableInt:
    103:103:void <clinit>() -> <clinit>
    53:55:void <init>(int) -> <init>
    60:61:void <init>() -> <init>
    71:72:void <init>(androidx.databinding.Observable[]) -> <init>
    95:95:int describeContents() -> describeContents
    78:78:int get() -> get
    87:91:void set(int) -> set
    100:101:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableInt$1 -> androidx.databinding.ObservableInt$a:
    104:104:void <init>() -> <init>
    104:104:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    108:108:androidx.databinding.ObservableInt createFromParcel(android.os.Parcel) -> createFromParcel
    104:104:java.lang.Object[] newArray(int) -> newArray
    113:113:androidx.databinding.ObservableInt[] newArray(int) -> newArray
androidx.databinding.ObservableLong -> androidx.databinding.ObservableLong:
    103:103:void <clinit>() -> <clinit>
    53:55:void <init>(long) -> <init>
    60:61:void <init>() -> <init>
    71:72:void <init>(androidx.databinding.Observable[]) -> <init>
    95:95:int describeContents() -> describeContents
    78:78:long get() -> get
    87:91:void set(long) -> set
    100:101:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableLong$1 -> androidx.databinding.ObservableLong$a:
    104:104:void <init>() -> <init>
    104:104:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    108:108:androidx.databinding.ObservableLong createFromParcel(android.os.Parcel) -> createFromParcel
    104:104:java.lang.Object[] newArray(int) -> newArray
    113:113:androidx.databinding.ObservableLong[] newArray(int) -> newArray
androidx.databinding.ObservableParcelable -> androidx.databinding.ObservableParcelable:
    68:68:void <clinit>() -> <clinit>
    48:49:void <init>(android.os.Parcelable) -> <init>
    55:56:void <init>() -> <init>
    60:60:int describeContents() -> describeContents
    65:66:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableParcelable$1 -> androidx.databinding.ObservableParcelable$a:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    74:74:androidx.databinding.ObservableParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    79:79:androidx.databinding.ObservableParcelable[] newArray(int) -> newArray
androidx.databinding.ObservableShort -> androidx.databinding.ObservableShort:
    102:102:void <clinit>() -> <clinit>
    52:54:void <init>(short) -> <init>
    59:60:void <init>() -> <init>
    70:71:void <init>(androidx.databinding.Observable[]) -> <init>
    94:94:int describeContents() -> describeContents
    77:77:short get() -> get
    86:90:void set(short) -> set
    99:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableShort$1 -> androidx.databinding.ObservableShort$a:
    103:103:void <init>() -> <init>
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableShort createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableShort[] newArray(int) -> newArray
androidx.databinding.OnRebindCallback -> androidx.databinding.k:
    23:23:void <init>() -> <init>
    66:66:void onBound(androidx.databinding.ViewDataBinding) -> a
    54:54:void onCanceled(androidx.databinding.ViewDataBinding) -> b
    42:42:boolean onPreBind(androidx.databinding.ViewDataBinding) -> c
androidx.databinding.PropertyChangeRegistry -> androidx.databinding.l:
    androidx.databinding.CallbackRegistry$NotifierCallback NOTIFIER_CALLBACK -> i
    26:26:void <clinit>() -> <clinit>
    35:36:void <init>() -> <init>
androidx.databinding.PropertyChangeRegistry$1 -> androidx.databinding.l$a:
    26:26:void <init>() -> <init>
    26:26:void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object) -> a
    30:31:void onNotifyCallback(androidx.databinding.Observable$OnPropertyChangedCallback,androidx.databinding.Observable,int,java.lang.Void) -> a
androidx.databinding.ViewDataBinding -> androidx.databinding.ViewDataBinding:
    android.view.Choreographer mChoreographer -> k
    android.view.Choreographer$FrameCallback mFrameCallback -> l
    androidx.databinding.ViewDataBinding mContainingBinding -> n
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> o
    boolean mIsExecutingPendingBindings -> j
    boolean USE_CHOREOGRAPHER -> r
    android.view.View$OnAttachStateChangeListener ROOT_REATTACHED_LISTENER -> t
    java.lang.Runnable mRebindRunnable -> e
    android.view.View mRoot -> h
    androidx.databinding.CallbackRegistry mRebindCallbacks -> i
    java.lang.ref.ReferenceQueue sReferenceQueue -> s
    boolean mPendingRebind -> f
    boolean mRebindHalted -> g
    android.os.Handler mUIThreadHandler -> m
    int SDK_INT -> p
    int BINDING_NUMBER_START -> q
    71:174:void <clinit>() -> <clinit>
    279:284:void <init>(androidx.databinding.DataBindingComponent,android.view.View,int) -> <init>
    304:305:void <init>(java.lang.Object,android.view.View,int) -> <init>
    65:65:boolean access$002(androidx.databinding.ViewDataBinding,boolean) -> a
    65:65:java.lang.Runnable access$100(androidx.databinding.ViewDataBinding) -> a
    308:312:androidx.databinding.DataBindingComponent checkAndCastToBindingComponent(java.lang.Object) -> a
    324:325:void setRootTag(android.view.View) -> a
    718:720:java.lang.Object[] mapBindings(androidx.databinding.DataBindingComponent,android.view.View,int,androidx.databinding.ViewDataBinding$IncludedLayouts,android.util.SparseIntArray) -> a
    1190:1272:void mapBindings(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[],androidx.databinding.ViewDataBinding$IncludedLayouts,android.util.SparseIntArray,boolean) -> a
    1276:1287:int findIncludeIndex(java.lang.String,int,androidx.databinding.ViewDataBinding$IncludedLayouts,int) -> a
    1291:1311:int findLastMatching(android.view.ViewGroup,int) -> a
    1315:1324:boolean isNumeric(java.lang.String,int) -> a
    void executeBindings() -> b
    65:65:boolean access$202(androidx.databinding.ViewDataBinding,boolean) -> b
    65:65:android.view.View access$400(androidx.databinding.ViewDataBinding) -> b
    524:527:androidx.databinding.ViewDataBinding getBinding(android.view.View) -> b
    1334:1341:int parseTagInt(java.lang.String,int) -> b
    444:449:void executePendingBindings() -> c
    539:539:android.view.View getRoot() -> d
    boolean hasPendingBindings() -> e
    570:585:void requestRebind() -> f
    65:65:void access$300() -> g
    65:65:android.view.View$OnAttachStateChangeListener access$500() -> h
    455:479:void executeBindingsInternal() -> i
    1349:1355:void processReferenceQueue() -> j
androidx.databinding.ViewDataBinding$1 -> androidx.databinding.ViewDataBinding$a:
    93:93:void <init>() -> <init>
androidx.databinding.ViewDataBinding$2 -> androidx.databinding.ViewDataBinding$b:
    103:103:void <init>() -> <init>
androidx.databinding.ViewDataBinding$3 -> androidx.databinding.ViewDataBinding$c:
    113:113:void <init>() -> <init>
androidx.databinding.ViewDataBinding$4 -> androidx.databinding.ViewDataBinding$d:
    123:123:void <init>() -> <init>
androidx.databinding.ViewDataBinding$5 -> androidx.databinding.ViewDataBinding$e:
    131:131:void <init>() -> <init>
    131:131:void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object) -> a
    135:148:void onNotifyCallback(androidx.databinding.OnRebindCallback,androidx.databinding.ViewDataBinding,int,java.lang.Void) -> a
androidx.databinding.ViewDataBinding$6 -> androidx.databinding.ViewDataBinding$f:
    159:159:void <init>() -> <init>
    164:167:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    171:171:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.databinding.ViewDataBinding$7 -> androidx.databinding.ViewDataBinding$g:
    androidx.databinding.ViewDataBinding this$0 -> d
    179:179:void <init>(androidx.databinding.ViewDataBinding) -> <init>
    182:184:void run() -> run
androidx.databinding.ViewDataBinding$8 -> androidx.databinding.ViewDataBinding$h:
    androidx.databinding.ViewDataBinding this$0 -> a
    288:288:void <init>(androidx.databinding.ViewDataBinding) -> <init>
    291:292:void doFrame(long) -> doFrame
androidx.databinding.ViewDataBinding$CreateWeakListener -> androidx.databinding.ViewDataBinding$i:
androidx.databinding.ViewDataBinding$IncludedLayouts -> androidx.databinding.ViewDataBinding$j:
    int[][] layoutIds -> c
    int[][] indexes -> b
    java.lang.String[][] layouts -> a
androidx.databinding.ViewDataBinding$ObservableReference -> androidx.databinding.ViewDataBinding$k:
    void removeListener(java.lang.Object) -> a
androidx.databinding.ViewDataBinding$OnStartListener -> androidx.databinding.ViewDataBinding$OnStartListener:
    java.lang.ref.WeakReference mBinding -> a
    1685:1689:void onStart() -> onStart
androidx.databinding.ViewDataBinding$WeakListener -> androidx.databinding.ViewDataBinding$l:
    androidx.databinding.ViewDataBinding$ObservableReference mObservable -> a
    java.lang.Object mTarget -> b
    1409:1415:boolean unregister() -> a
androidx.databinding.adapters.TextViewBindingAdapter -> androidx.databinding.m.a:
    69:71:void setText(android.widget.TextView,java.lang.CharSequence) -> a
    333:347:boolean haveContentsChanged(java.lang.CharSequence,java.lang.CharSequence) -> a
androidx.databinding.library.baseAdapters.DataBinderMapperImpl -> androidx.databinding.library.baseAdapters.a:
    android.util.SparseIntArray INTERNAL_LAYOUT_ID_LOOKUP -> a
    19:22:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    26:33:androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int) -> a
    38:39:androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int) -> a
    55:59:int getLayoutId(java.lang.String) -> a
    70:71:java.util.List collectDependencies() -> a
androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup -> androidx.databinding.library.baseAdapters.a$a:
    java.util.HashMap sKeys -> a
    83:86:void <clinit>() -> <clinit>
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    int mDrawerState -> n
    android.graphics.Matrix mChildInvertedMatrix -> M
    boolean mInLayout -> o
    boolean CAN_HIDE_DESCENDANTS -> P
    android.graphics.drawable.Drawable mShadowEnd -> H
    float mDrawerElevation -> e
    androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener -> v
    java.lang.CharSequence mTitleLeft -> C
    java.lang.Object mLastInsets -> E
    android.graphics.drawable.Drawable mShadowRight -> J
    int mMinDrawerMargin -> f
    boolean mChildrenCanceledTouch -> u
    androidx.customview.widget.ViewDragHelper mRightDragger -> k
    android.graphics.drawable.Drawable mShadowRightResolved -> B
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback -> l
    float mInitialMotionY -> y
    android.graphics.drawable.Drawable mStatusBarBackground -> z
    int[] LAYOUT_ATTRS -> O
    int mLockModeStart -> s
    int mLockModeLeft -> q
    boolean mFirstLayout -> p
    float mScrimOpacity -> h
    android.graphics.drawable.Drawable mShadowStart -> G
    android.graphics.drawable.Drawable mShadowLeft -> I
    androidx.customview.widget.ViewDragHelper mLeftDragger -> j
    java.lang.CharSequence mTitleRight -> D
    int mScrimColor -> g
    java.util.List mListeners -> w
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> Q
    android.graphics.drawable.Drawable mShadowLeftResolved -> A
    android.graphics.Paint mScrimPaint -> i
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback -> m
    float mInitialMotionX -> x
    java.util.ArrayList mNonDrawerViews -> K
    android.graphics.Rect mChildHitRect -> L
    androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> d
    int[] THEME_ATTRS -> N
    boolean mDrawStatusBarBackground -> F
    int mLockModeEnd -> t
    int mLockModeRight -> r
    104:192:void <clinit>() -> <clinit>
    306:307:void <init>(android.content.Context) -> <init>
    310:311:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    314:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    405:409:void setChildInsets(java.lang.Object,boolean) -> a
    511:518:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> a
    576:614:void setDrawerLockMode(int,int) -> a
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> a
    774:786:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> a
    814:847:void updateDrawerState(int,int,android.view.View) -> a
    916:924:void dispatchOnDrawerSlide(android.view.View,float) -> a
    950:951:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    985:995:android.view.View findDrawerWithGravity(int) -> a
    1208:1209:boolean mirror(android.graphics.drawable.Drawable,int) -> a
    1641:1670:void closeDrawers(boolean) -> a
    1747:1748:void closeDrawer(android.view.View) -> a
    1757:1758:void closeDrawer(android.view.View,boolean) -> a
    1961:1972:void cancelChildViewTouch() -> a
    1911:1942:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2077:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    528:536:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> b
    652:697:int getDrawerLockMode(int) -> b
    794:806:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> b
    850:875:void dispatchOnDrawerClosed(android.view.View) -> b
    967:976:void moveDrawerToOffset(android.view.View,float) -> b
    1637:1638:void closeDrawers() -> b
    1688:1689:void openDrawer(android.view.View,boolean) -> b
    746:753:java.lang.CharSequence getDrawerTitle(int) -> c
    878:897:void dispatchOnDrawerOpened(android.view.View) -> c
    900:913:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> c
    927:934:void setDrawerViewOffset(android.view.View,float) -> c
    955:963:android.view.View findOpenDrawer() -> c
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1309:1322:void computeScroll() -> computeScroll
    709:710:int getDrawerLockMode(android.view.View) -> d
    1005:1011:java.lang.String gravityToString(int) -> d
    1949:1956:android.view.View findVisibleDrawer() -> d
    1536:1539:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    1401:1460:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> e
    1875:1882:boolean hasPeekingDrawer() -> e
    937:937:float getDrawerViewOffset(android.view.View) -> f
    1945:1945:boolean hasVisibleDrawer() -> f
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> g
    1464:1464:boolean isContentView(android.view.View) -> g
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:396:float getDrawerElevation() -> getDrawerElevation
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> h
    1819:1820:boolean isDrawerOpen(android.view.View) -> h
    1158:1163:void resolveShadowDrawables() -> i
    1468:1479:boolean isDrawerView(android.view.View) -> i
    1852:1853:boolean isDrawerVisible(android.view.View) -> j
    1678:1679:void openDrawer(android.view.View) -> k
    1325:1329:boolean hasOpaqueBackground(android.view.View) -> l
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> m
    1022:1024:void onAttachedToWindow() -> onAttachedToWindow
    1016:1018:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1397:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1985:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1298:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1053:void onMeasure(int,int) -> onMeasure
    1997:2024:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1379:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1616:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1625:1631:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1305:void requestLayout() -> requestLayout
    376:383:void setDrawerElevation(float) -> setDrawerElevation
    493:502:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:554:void setDrawerLockMode(int) -> setDrawerLockMode
    474:476:void setScrimColor(int) -> setScrimColor
    1339:1341:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1362:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1374:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$a:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$b:
    androidx.drawerlayout.widget.DrawerLayout this$0 -> e
    android.graphics.Rect mTmpRect -> d
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2354:2383:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    2419:2420:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    2426:2433:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    2442:2464:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2387:2390:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$c:
    2467:2467:void <init>() -> <init>
    2471:2479:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
androidx.drawerlayout.widget.DrawerLayout$DrawerListener -> androidx.drawerlayout.widget.DrawerLayout$d:
    void onDrawerOpened(android.view.View) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerStateChanged(int) -> a
    void onDrawerClosed(android.view.View) -> b
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$e:
    float onScreen -> b
    int openState -> d
    boolean isPeeking -> c
    int gravity -> a
    2319:2324:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2327:2328:void <init>(int,int) -> <init>
    2336:2338:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2341:2342:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2345:2346:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    int lockModeEnd -> j
    int lockModeRight -> h
    int lockModeStart -> i
    int openDrawerGravity -> f
    int lockModeLeft -> g
    2124:2124:void <clinit>() -> <clinit>
    2102:2108:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2111:2112:void <init>(android.os.Parcelable) -> <init>
    2116:2122:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$a:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$f:
    androidx.customview.widget.ViewDragHelper mDragger -> b
    java.lang.Runnable mPeekRunnable -> c
    androidx.drawerlayout.widget.DrawerLayout this$0 -> d
    int mAbsGravity -> a
    2152:2154:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2157:2158:void setDragger(androidx.customview.widget.ViewDragHelper) -> a
    2180:2192:void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    2196:2200:void onViewCaptured(android.view.View,int) -> a
    2214:2227:void onViewReleased(android.view.View,float,float) -> a
    2237:2259:void peekDrawer() -> a
    2276:2285:void onEdgeDragStarted(int,int) -> a
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> a
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> a
    2161:2162:void removeCallbacks() -> b
    2168:2169:boolean tryCaptureView(android.view.View,int) -> b
    2231:2232:void onEdgeTouched(int,int) -> b
    2270:2270:boolean onEdgeLock(int) -> b
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> b
    2174:2175:void onViewDragStateChanged(int) -> c
    2203:2208:void closeOtherDrawer() -> c
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$f$a:
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback this$1 -> d
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2149:void run() -> run
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.a:
    androidx.fragment.app.FragmentManagerImpl mManager -> s
    int mIndex -> u
    boolean mCommitted -> t
    140:142:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    59:60:void dump(java.lang.String,java.io.PrintWriter) -> a
    63:138:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    179:181:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> a
    243:244:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> a
    255:269:void bumpBackStackNesting(int) -> a
    282:282:int commit() -> a
    303:303:int commitInternal(boolean) -> a
    332:341:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
    357:381:boolean interactsWith(java.util.ArrayList,int,int) -> a
    528:593:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> a
    219:224:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> b
    287:287:int commitAllowingStateLoss() -> b
    345:353:boolean interactsWith(int) -> b
    451:502:void executePopOps(boolean) -> b
    607:629:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> b
    652:653:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> b
    197:202:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> c
    298:300:void commitNowAllowingStateLoss() -> c
    186:191:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> d
    208:213:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> e
    665:665:boolean isEmpty() -> e
    389:441:void executeOps() -> f
    660:660:java.lang.String getName() -> g
    633:639:boolean isPostponed() -> h
    272:278:void runOnCommitRunnables() -> i
    643:649:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    43:55:java.lang.String toString() -> toString
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    int mBreadCrumbShortTitleRes -> n
    int mBreadCrumbTitleRes -> l
    java.lang.String mName -> j
    int mIndex -> k
    int mTransition -> h
    int mTransitionStyle -> i
    java.util.ArrayList mFragmentWhos -> e
    boolean mReorderingAllowed -> r
    int[] mOldMaxLifecycleStates -> f
    int[] mCurrentMaxLifecycleStates -> g
    java.lang.CharSequence mBreadCrumbTitleText -> m
    java.lang.CharSequence mBreadCrumbShortTitleText -> o
    int[] mOps -> d
    java.util.ArrayList mSharedElementTargetNames -> q
    java.util.ArrayList mSharedElementSourceNames -> p
    170:170:void <clinit>() -> <clinit>
    47:52:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:99:void <init>(android.os.Parcel) -> <init>
    102:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> a
    148:148:int describeContents() -> describeContents
    153:168:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$a:
    171:171:void <init>() -> <init>
    171:171:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    171:171:java.lang.Object[] newArray(int) -> newArray
    179:179:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> androidx.fragment.app.b:
    int mTheme -> d0
    int mStyle -> c0
    boolean mCancelable -> e0
    boolean mShowsDialog -> f0
    int mBackStackId -> g0
    android.os.Handler mHandler -> a0
    android.app.Dialog mDialog -> h0
    boolean mViewDestroyed -> i0
    java.lang.Runnable mDismissRunnable -> b0
    boolean mDismissed -> j0
    boolean mShownByMe -> k0
    112:113:void <init>() -> <init>
    529:547:void onDestroyView() -> S
    347:354:void onDetach() -> T
    482:488:void onStart() -> W
    518:522:void onStop() -> X
    151:156:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> a
    216:253:void dismissInternal(boolean,boolean) -> a
    337:343:void onAttach(android.content.Context) -> a
    395:405:void setupDialog(android.app.Dialog,int) -> a
    451:478:void onActivityCreated(android.os.Bundle) -> b
    358:371:void onCreate(android.os.Bundle) -> c
    376:388:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> d
    492:514:void onSaveInstanceState(android.os.Bundle) -> e
    431:431:android.app.Dialog onCreateDialog(android.os.Bundle) -> n
    283:283:int getTheme() -> n0
    436:436:void onCancel(android.content.DialogInterface) -> onCancel
    440:447:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.b$a:
    androidx.fragment.app.DialogFragment this$0 -> d
    93:93:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    96:99:void run() -> run
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    int mTargetRequestCode -> l
    boolean mHiddenChanged -> P
    androidx.lifecycle.Lifecycle$State mMaxState -> T
    boolean mDeferStart -> L
    int mState -> d
    java.lang.Boolean mIsPrimaryNavigationFragment -> m
    boolean mInLayout -> q
    androidx.fragment.app.FragmentHostCallback mHost -> v
    java.lang.Object USE_DEFAULT_TRANSITION -> Z
    androidx.fragment.app.Fragment mParentFragment -> x
    android.view.View mView -> J
    androidx.fragment.app.FragmentManagerImpl mFragmentManager -> u
    int mFragmentId -> y
    boolean mMenuVisible -> G
    android.util.SparseArray mSavedViewState -> f
    boolean mDetached -> C
    boolean mUserVisibleHint -> M
    boolean mAdded -> n
    androidx.fragment.app.Fragment mTarget -> j
    boolean mRestored -> r
    int mContainerId -> z
    int mContentLayoutId -> Y
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> X
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> U
    boolean mCalled -> H
    boolean mRetainInstance -> D
    java.lang.Boolean mSavedUserVisibleHint -> g
    boolean mRemoving -> o
    java.lang.String mWho -> h
    androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo -> N
    android.os.Bundle mSavedFragmentState -> e
    android.os.Bundle mArguments -> i
    androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner -> V
    boolean mPerformedCreateView -> s
    androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData -> W
    androidx.fragment.app.FragmentManagerImpl mChildFragmentManager -> w
    boolean mRetainInstanceChangedWhileDetached -> E
    android.view.ViewGroup mContainer -> I
    boolean mIsNewlyAdded -> O
    boolean mFromLayout -> p
    java.lang.String mTargetWho -> k
    boolean mIsCreated -> S
    android.view.View mInnerView -> K
    android.view.LayoutInflater mLayoutInflater -> R
    boolean mHasMenu -> F
    int mBackStackNesting -> t
    java.lang.String mTag -> A
    float mPostponedAlpha -> Q
    boolean mHidden -> B
    98:98:void <clinit>() -> <clinit>
    441:443:void <init>() -> <init>
    2128:2131:java.lang.Object getReturnTransition() -> A
    2239:2242:java.lang.Object getSharedElementEnterTransition() -> B
    2277:2280:java.lang.Object getSharedElementReturnTransition() -> C
    2948:2951:int getStateAfterAnimating() -> D
    727:735:androidx.fragment.app.Fragment getTargetFragment() -> E
    1677:1677:android.view.View getView() -> F
    1868:1884:void initState() -> G
    955:955:boolean isAdded() -> H
    964:964:boolean isDetached() -> I
    1013:1013:boolean isHidden() -> J
    2966:2969:boolean isHideReplaced() -> K
    554:554:boolean isInBackStack() -> L
    2959:2962:boolean isPostponed() -> M
    654:657:boolean isStateSaved() -> N
    1001:1001:boolean isVisible() -> O
    2658:2659:void noteStateNotSaved() -> P
    1858:1859:void onDestroy() -> Q
    1936:1936:void onDestroyOptionsMenu() -> R
    1849:1850:void onDestroyView() -> S
    1892:1893:void onDetach() -> T
    1819:1820:void onPause() -> U
    1748:1749:void onResume() -> V
    1737:1738:void onStart() -> W
    1829:1830:void onStop() -> X
    2553:2571:void performAttach() -> Y
    2820:2827:void performDestroy() -> Z
    274:274:androidx.lifecycle.Lifecycle getLifecycle() -> a
    512:521:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    669:670:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> a
    693:720:void setTargetFragment(androidx.fragment.app.Fragment,int) -> a
    851:851:java.lang.String getString(int) -> a
    1035:1035:void onHiddenChanged(boolean) -> a
    1164:1165:void startActivity(android.content.Intent) -> a
    1173:1174:void startActivity(android.content.Intent,android.os.Bundle) -> a
    1229:1229:void onActivityResult(int,int,android.content.Intent) -> a
    1331:1331:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> a
    1421:1422:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> a
    1475:1481:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> a
    1493:1494:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    1506:1506:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    1514:1520:void onAttach(android.content.Context) -> a
    1531:1532:void onAttach(android.app.Activity) -> a
    1551:1551:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    1650:1653:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    1667:1667:void onViewCreated(android.view.View,android.os.Bundle) -> a
    1909:1909:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1968:1968:void onOptionsMenuClosed(android.view.Menu) -> a
    2036:2036:boolean onContextItemSelected(android.view.MenuItem) -> a
    2469:2542:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    2546:2549:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> a
    2683:2685:void performConfigurationChanged(android.content.res.Configuration) -> a
    2896:2902:void setNextTransition(int,int) -> a
    2933:2934:void setAnimatingAway(android.view.View) -> a
    2937:2938:void setAnimator(android.animation.Animator) -> a
    2800:2808:void performDestroyView() -> a0
    1572:1572:android.animation.Animator onCreateAnimator(int,boolean,int) -> b
    1711:1712:void onActivityCreated(android.os.Bundle) -> b
    1781:1781:void onMultiWindowModeChanged(boolean) -> b
    1926:1926:void onPrepareOptionsMenu(android.view.Menu) -> b
    1957:1957:boolean onOptionsItemSelected(android.view.MenuItem) -> b
    2592:2603:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    2702:2710:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    2882:2886:void setNextAnim(int) -> b
    2833:2837:void performDetach() -> b0
    361:361:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> c
    1594:1599:void onCreate(android.os.Bundle) -> c
    1790:1790:void onPictureInPictureModeChanged(boolean) -> c
    2740:2748:boolean performContextItemSelected(android.view.MenuItem) -> c
    2752:2758:void performOptionsMenuClosed(android.view.Menu) -> c
    2955:2956:void setStateAfterAnimating(int) -> c
    2688:2690:void performLowMemory() -> c0
    352:353:androidx.lifecycle.ViewModelStore getViewModelStore() -> d
    1371:1371:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> d
    1810:1810:void onPrimaryNavigationFragmentChanged(boolean) -> d
    2714:2722:boolean performPrepareOptionsMenu(android.view.Menu) -> d
    2726:2736:boolean performOptionsItemSelected(android.view.MenuItem) -> d
    2770:2779:void performPause() -> d0
    1771:1771:void onSaveInstanceState(android.os.Bundle) -> e
    2446:2456:void callStartTransitionListener() -> e
    2673:2675:void performMultiWindowModeChanged(boolean) -> e
    2662:2670:void performPrimaryNavigationFragmentChanged() -> e0
    561:561:boolean equals(java.lang.Object) -> equals
    779:779:androidx.fragment.app.FragmentActivity getActivity() -> f
    1727:1728:void onViewStateRestored(android.os.Bundle) -> f
    2678:2680:void performPictureInPictureModeChanged(boolean) -> f
    2640:2646:void performResume() -> f0
    2306:2306:boolean getAllowEnterTransitionOverlap() -> g
    2611:2616:void performActivityCreated(android.os.Bundle) -> g
    2973:2974:void setHideReplaced(boolean) -> g
    2623:2629:void performStart() -> g0
    1093:1099:void setMenuVisibility(boolean) -> h
    2331:2331:boolean getAllowReturnTransitionOverlap() -> h
    2577:2584:void performCreate(android.os.Bundle) -> h
    2785:2794:void performStop() -> h0
    568:568:int hashCode() -> hashCode
    1122:1133:void setUserVisibleHint(boolean) -> i
    1403:1405:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> i
    2926:2929:android.view.View getAnimatingAway() -> i
    791:793:androidx.fragment.app.FragmentActivity requireActivity() -> i0
    2761:2767:void performSaveInstanceState(android.os.Bundle) -> j
    2941:2944:android.animation.Animator getAnimator() -> j
    763:765:android.content.Context requireContext() -> j0
    627:627:android.os.Bundle getArguments() -> k
    1614:1622:void restoreChildFragmentState(android.os.Bundle) -> k
    899:901:androidx.fragment.app.FragmentManager requireFragmentManager() -> k0
    538:545:void restoreViewState(android.os.Bundle) -> l
    913:914:androidx.fragment.app.FragmentManager getChildFragmentManager() -> l
    1688:1690:android.view.View requireView() -> l0
    615:619:void setArguments(android.os.Bundle) -> m
    752:752:android.content.Context getContext() -> m
    2426:2438:void startPostponedEnterTransition() -> m0
    2089:2092:java.lang.Object getEnterTransition() -> n
    2868:2871:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> n0
    2912:2915:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> o
    459:474:void initLifecycle() -> o0
    1795:1796:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1990:1991:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1835:1836:void onLowMemory() -> onLowMemory
    2168:2171:java.lang.Object getExitTransition() -> p
    2919:2922:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> q
    881:881:androidx.fragment.app.FragmentManager getFragmentManager() -> r
    806:806:java.lang.Object getHost() -> s
    2851:2865:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2875:2878:int getNextAnim() -> t
    573:587:java.lang.String toString() -> toString
    2889:2892:int getNextTransition() -> u
    2905:2908:int getNextTransitionStyle() -> v
    925:925:androidx.fragment.app.Fragment getParentFragment() -> w
    2206:2209:java.lang.Object getReenterTransition() -> x
    829:829:android.content.res.Resources getResources() -> y
    1064:1064:boolean getRetainInstance() -> z
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    androidx.fragment.app.Fragment this$0 -> a
    462:462:void <init>(androidx.fragment.app.Fragment) -> <init>
    466:471:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$a:
    androidx.fragment.app.Fragment this$0 -> d
    2429:2429:void <init>(androidx.fragment.app.Fragment) -> <init>
    2432:2433:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$b:
    androidx.fragment.app.Fragment this$0 -> a
    2553:2553:void <init>(androidx.fragment.app.Fragment) -> <init>
    2557:2558:android.view.View onFindViewById(int) -> a
    2565:2565:boolean onHasView() -> c
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$c:
    java.lang.Object mReenterTransition -> j
    java.lang.Object mSharedElementEnterTransition -> k
    java.lang.Object mReturnTransition -> h
    java.lang.Object mExitTransition -> i
    androidx.core.app.SharedElementCallback mEnterTransitionCallback -> o
    java.lang.Object mEnterTransition -> g
    androidx.core.app.SharedElementCallback mExitTransitionCallback -> p
    int mNextTransitionStyle -> f
    int mNextAnim -> d
    java.lang.Boolean mAllowReturnTransitionOverlap -> m
    int mNextTransition -> e
    java.lang.Boolean mAllowEnterTransitionOverlap -> n
    boolean mEnterTransitionPostponed -> q
    int mStateAfterAnimating -> c
    java.lang.Object mSharedElementReturnTransition -> l
    boolean mIsHideReplaced -> s
    androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> r
    android.animation.Animator mAnimator -> b
    android.view.View mAnimatingAway -> a
    2990:3023:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$d:
    421:422:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnStartEnterTransitionListener -> androidx.fragment.app.Fragment$e:
    void onStartEnterTransition() -> a
    void startListening() -> b
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    android.os.Bundle mState -> d
    395:395:void <clinit>() -> <clinit>
    373:375:void <init>(android.os.Bundle) -> <init>
    377:382:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    386:386:int describeContents() -> describeContents
    391:392:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$a:
    396:396:void <init>() -> <init>
    396:396:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    396:396:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    399:399:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    404:404:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    396:396:java.lang.Object[] newArray(int) -> newArray
    409:409:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    boolean mStopped -> m
    boolean mStartedIntentSenderFromFragment -> n
    androidx.fragment.app.FragmentController mFragments -> i
    boolean mStartedActivityFromFragment -> o
    boolean mCreated -> k
    androidx.collection.SparseArrayCompat mPendingFragmentActivityResults -> q
    androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry -> j
    boolean mResumed -> l
    int mNextCandidateRequestIndex -> p
    127:128:void <init>() -> <init>
    357:357:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    502:502:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    628:628:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    714:715:void checkForValidRequestCode(int) -> a
    788:799:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> a
    995:1011:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> a
    830:831:int allocateRequestIndex(androidx.fragment.app.Fragment) -> b
    599:613:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    636:636:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> g
    478:480:void onResumeFragments() -> h
    583:584:void supportInvalidateOptionsMenu() -> i
    990:991:void markFragmentsCreated() -> j
    155:182:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    273:276:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    284:317:void onCreate(android.os.Bundle) -> onCreate
    324:329:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    336:340:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    347:351:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    365:368:void onDestroy() -> onDestroy
    375:377:void onLowMemory() -> onLowMemory
    384:390:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    250:251:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    437:439:void onNewIntent(android.content.Intent) -> onNewIntent
    405:411:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    418:422:void onPause() -> onPause
    265:266:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    467:469:void onPostResume() -> onPostResume
    487:492:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    754:772:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    456:460:void onResume() -> onResume
    510:529:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    536:552:void onStart() -> onStart
    446:447:void onStateNotSaved() -> onStateNotSaved
    559:566:void onStop() -> onStop
    658:664:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    671:677:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    685:692:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    700:707:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$a:
    androidx.fragment.app.FragmentActivity this$0 -> i
    871:873:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    882:882:androidx.lifecycle.Lifecycle getLifecycle() -> a
    900:901:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    933:934:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> a
    971:972:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    977:977:android.view.View onFindViewById(int) -> a
    894:894:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> b
    905:905:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> b
    982:983:boolean onHasView() -> c
    888:888:androidx.lifecycle.ViewModelStore getViewModelStore() -> d
    868:868:java.lang.Object onGetHost() -> h
    916:916:androidx.fragment.app.FragmentActivity onGetHost() -> h
    911:911:android.view.LayoutInflater onGetLayoutInflater() -> i
    965:966:int onGetWindowAnimations() -> j
    960:960:boolean onHasWindowAnimations() -> k
    921:922:void onSupportInvalidateOptionsMenu() -> l
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.c:
    31:31:void <init>() -> <init>
    android.view.View onFindViewById(int) -> a
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean onHasView() -> c
androidx.fragment.app.FragmentController -> androidx.fragment.app.d:
    androidx.fragment.app.FragmentHostCallback mHost -> a
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> a
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> a
    116:118:void attachHost(androidx.fragment.app.Fragment) -> a
    134:134:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    190:191:void restoreSaveState(android.os.Parcelable) -> a
    246:247:void dispatchActivityCreated() -> a
    340:341:void dispatchMultiWindowModeChanged(boolean) -> a
    362:363:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    386:386:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    424:424:boolean dispatchContextItemSelected(android.view.MenuItem) -> a
    435:436:void dispatchOptionsMenuClosed(android.view.Menu) -> a
    235:236:void dispatchCreate() -> b
    351:352:void dispatchPictureInPictureModeChanged(boolean) -> b
    398:398:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    411:411:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> b
    329:330:void dispatchDestroy() -> c
    374:375:void dispatchLowMemory() -> d
    279:280:void dispatchPause() -> e
    268:269:void dispatchResume() -> f
    257:258:void dispatchStart() -> g
    290:291:void dispatchStop() -> h
    446:446:boolean execPendingActions() -> i
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> j
    141:142:void noteStateNotSaved() -> k
    151:151:android.os.Parcelable saveAllState() -> l
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.e:
    androidx.collection.SimpleArrayMap sClassMap -> a
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    114:117:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
    64:67:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> b
    44:50:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> c
    88:91:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> d
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.f:
    android.app.Activity mActivity -> d
    android.os.Handler mHandler -> f
    int mWindowAnimations -> g
    androidx.fragment.app.FragmentManagerImpl mFragmentManager -> h
    android.content.Context mContext -> e
    58:59:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    62:67:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    80:80:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    129:130:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> a
    185:185:android.view.View onFindViewById(int) -> a
    209:209:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    86:86:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> b
    190:190:boolean onHasView() -> c
    195:195:android.app.Activity getActivity() -> e
    200:200:android.content.Context getContext() -> f
    205:205:android.os.Handler getHandler() -> g
    java.lang.Object onGetHost() -> h
    95:95:android.view.LayoutInflater onGetLayoutInflater() -> i
    179:179:int onGetWindowAnimations() -> j
    172:172:boolean onHasWindowAnimations() -> k
    111:111:void onSupportInvalidateOptionsMenu() -> l
androidx.fragment.app.FragmentManager -> androidx.fragment.app.g:
    androidx.fragment.app.FragmentFactory mFragmentFactory -> d
    androidx.fragment.app.FragmentFactory DEFAULT_FACTORY -> e
    49:49:void <clinit>() -> <clinit>
    48:117:void <init>() -> <init>
    androidx.fragment.app.FragmentTransaction beginTransaction() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> a
    androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> a
    void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> a
    androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> a
    401:402:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> a
    boolean executePendingTransactions() -> b
    411:414:androidx.fragment.app.FragmentFactory getFragmentFactory() -> c
    java.util.List getFragments() -> d
    boolean popBackStackImmediate() -> e
androidx.fragment.app.FragmentManager$BackStackEntry -> androidx.fragment.app.g$a:
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.g$b:
    454:454:void <init>() -> <init>
    512:512:void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    476:476:void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentAttached
    589:589:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    598:598:void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDetached
    551:551:void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentPaused
    465:465:void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentPreAttached
    488:488:void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    542:542:void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentResumed
    571:571:void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    533:533:void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStarted
    560:560:void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStopped
    524:524:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    580:580:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
androidx.fragment.app.FragmentManager$OnBackStackChangedListener -> androidx.fragment.app.g$c:
    void onBackStackChanged() -> a
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.h:
    int mNextFragmentIndex -> h
    android.os.Bundle mStateBundle -> F
    java.util.ArrayList mTmpIsPop -> D
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> m
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> n
    androidx.fragment.app.FragmentHostCallback mHost -> t
    android.view.animation.Interpolator DECELERATE_CUBIC -> M
    java.util.ArrayList mBackStackIndices -> o
    java.util.ArrayList mBackStack -> k
    boolean mStateSaved -> y
    java.util.ArrayList mAdded -> i
    java.util.ArrayList mPostponedTransactions -> H
    android.util.SparseArray mStateArray -> G
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> I
    java.lang.Runnable mExecCommit -> J
    boolean mDestroyed -> A
    int mCurState -> s
    java.util.ArrayList mBackStackChangeListeners -> q
    java.util.HashMap mActive -> j
    boolean DEBUG -> K
    java.util.ArrayList mPendingActions -> f
    java.util.ArrayList mTmpAddedFragments -> E
    boolean mNeedMenuInvalidate -> x
    java.util.ArrayList mTmpRecords -> C
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> r
    androidx.fragment.app.Fragment mParent -> v
    android.view.animation.Interpolator DECELERATE_QUINT -> L
    androidx.fragment.app.Fragment mPrimaryNav -> w
    java.util.ArrayList mCreatedMenus -> l
    boolean mStopped -> z
    boolean mExecutingActions -> g
    androidx.fragment.app.FragmentContainer mContainer -> u
    boolean mHavePendingDeferredStart -> B
    java.util.ArrayList mAvailBackStackIndices -> p
    76:574:void <clinit>() -> <clinit>
    75:147:void <init>() -> <init>
    2316:2422:android.os.Parcelable saveAllState() -> A
    1583:1592:void scheduleCommit() -> B
    1322:1327:void startPendingDeferredFragments() -> C
    2551:2555:void burpActive() -> D
    1534:1535:void checkStateLoss() -> E
    1711:1714:void cleanupExec() -> F
    2121:2141:void endAnimatingAwayFragments() -> G
    2109:2114:void forcePostponedTransactions() -> H
    192:201:void updateOnBackPressedCallbackEnabled() -> I
    155:172:void throwException(java.lang.RuntimeException) -> a
    178:178:androidx.fragment.app.FragmentTransaction beginTransaction() -> a
    269:270:void popBackStack(int,int) -> a
    293:319:boolean popBackStackImmediate(java.lang.String,int,int) -> a
    349:350:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> a
    359:365:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    440:441:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> a
    474:543:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    580:590:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float) -> a
    594:597:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float) -> a
    602:701:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> a
    724:1063:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> a
    1075:1129:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> a
    1288:1319:void moveToState(int,boolean) -> a
    1374:1395:void addFragment(androidx.fragment.app.Fragment,boolean) -> a
    1486:1498:androidx.fragment.app.Fragment findFragmentById(int) -> a
    1504:1521:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> a
    1556:1572:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> a
    1616:1637:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> a
    1746:1772:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> a
    1931:1964:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> a
    1985:2017:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> a
    2064:2078:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> a
    2087:2103:void addAddedFragments(androidx.collection.ArraySet) -> a
    2187:2191:void addBackStackState(androidx.fragment.app.BackStackRecord) -> a
    2196:2247:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> a
    2436:2543:void restoreSaveState(android.os.Parcelable) -> a
    2559:2559:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> a
    2663:2669:void dispatchMultiWindowModeChanged(boolean) -> a
    2681:2687:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    2699:2728:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    2763:2774:boolean dispatchContextItemSelected(android.view.MenuItem) -> a
    2778:2787:void dispatchOptionsMenuClosed(android.view.Menu) -> a
    2821:2823:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> a
    2857:2858:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> a
    2890:2902:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> a
    2938:2950:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> a
    2954:2966:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> a
    334:338:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    183:185:boolean executePendingTransactions() -> b
    392:402:void addRetainedFragment(androidx.fragment.app.Fragment) -> b
    1525:1530:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> b
    1596:1612:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> b
    1641:1648:void freeBackStackIndex(int) -> b
    1687:1704:void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> b
    1840:1895:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> b
    1905:1914:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> b
    2155:2167:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> b
    2672:2678:void dispatchPictureInPictureModeChanged(boolean) -> b
    2732:2744:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    2748:2759:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> b
    2874:2886:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> b
    2922:2934:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> b
    3060:3072:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> b
    3133:3145:int transitToStyleIndex(int,boolean) -> b
    717:717:boolean isStateAtLeast(int) -> c
    1463:1480:void attachFragment(androidx.fragment.app.Fragment) -> c
    1658:1659:void ensureExecReady(boolean) -> c
    1790:1791:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> c
    2832:2851:androidx.fragment.app.FragmentFactory getFragmentFactory() -> c
    2906:2918:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> c
    3075:3087:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> c
    373:378:java.util.List getFragments() -> d
    1162:1210:void completeShowHideFragment(androidx.fragment.app.Fragment) -> d
    2654:2657:void dispatchStateChange(int) -> d
    2999:3011:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> d
    3030:3042:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> d
    252:253:boolean popBackStackImmediate() -> e
    1445:1460:void detachFragment(androidx.fragment.app.Fragment) -> e
    2984:2996:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> e
    3109:3121:int reverseTransit(int) -> e
    1136:1149:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> f
    2969:2981:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> f
    3092:3101:boolean checkForMenus() -> f
    388:388:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> g
    2607:2610:void dispatchActivityCreated() -> g
    3014:3026:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> g
    383:383:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> h
    2601:2604:void dispatchCreate() -> h
    3045:3057:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> h
    1419:1426:void hideFragment(androidx.fragment.app.Fragment) -> i
    2638:2650:void dispatchDestroy() -> i
    211:220:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> j
    2634:2635:void dispatchDestroyView() -> j
    1330:1344:void makeActive(androidx.fragment.app.Fragment) -> k
    2690:2696:void dispatchLowMemory() -> k
    1347:1371:void makeInactive(androidx.fragment.app.Fragment) -> l
    2625:2626:void dispatchPause() -> l
    1219:1276:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> m
    2809:2812:void dispatchPrimaryNavigationFragmentChanged() -> m
    1132:1133:void moveToState(androidx.fragment.app.Fragment) -> n
    2619:2622:void dispatchResume() -> n
    705:714:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> o
    2613:2616:void dispatchStart() -> o
    3152:3168:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3244:3244:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1398:1403:void removeFragment(androidx.fragment.app.Fragment) -> p
    2629:2631:void dispatchStop() -> p
    405:415:void removeRetainedFragment(androidx.fragment.app.Fragment) -> q
    2172:2176:void doPendingDeferredStart() -> q
    1720:1737:boolean execPendingActions() -> r
    2280:2310:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> r
    342:345:void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    324:324:int getBackStackEntryCount() -> s
    2264:2277:void saveFragmentViewState(androidx.fragment.app.Fragment) -> s
    2791:2800:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> t
    3248:3248:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> t
    458:468:java.lang.String toString() -> toString
    1435:1442:void showFragment(androidx.fragment.app.Fragment) -> u
    2817:2817:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> u
    230:243:void handleOnBackPressed() -> v
    2803:2806:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> v
    453:453:boolean isDestroyed() -> w
    2036:2040:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> w
    1545:1545:boolean isStateSaved() -> x
    3105:3105:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> x
    2589:2598:void noteStateNotSaved() -> y
    2179:2184:void reportBackStackChanged() -> z
androidx.fragment.app.FragmentManagerImpl$1 -> androidx.fragment.app.h$a:
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
    105:105:void <init>(androidx.fragment.app.FragmentManagerImpl,boolean) -> <init>
    108:109:void handleOnBackPressed() -> a
androidx.fragment.app.FragmentManagerImpl$2 -> androidx.fragment.app.h$b:
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    147:147:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    150:151:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> androidx.fragment.app.h$c:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
    androidx.fragment.app.Fragment val$fragment -> b
    1083:1083:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1093:1103:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1107:1107:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1086:1086:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$3$1 -> androidx.fragment.app.h$c$a:
    androidx.fragment.app.FragmentManagerImpl$3 this$1 -> d
    1093:1093:void <init>(androidx.fragment.app.FragmentManagerImpl$3) -> <init>
    1096:1101:void run() -> run
androidx.fragment.app.FragmentManagerImpl$4 -> androidx.fragment.app.h$d:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    android.view.View val$viewToAnimate -> b
    androidx.fragment.app.Fragment val$fragment -> c
    1113:1113:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1116:1124:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$5 -> androidx.fragment.app.h$e:
    android.view.ViewGroup val$container -> a
    android.view.View val$animatingView -> b
    androidx.fragment.app.Fragment val$fragment -> c
    1176:1176:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1179:1184:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$6 -> androidx.fragment.app.h$f:
    androidx.fragment.app.FragmentManagerImpl this$0 -> b
    2841:2841:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    2847:2847:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> androidx.fragment.app.h$g:
    android.view.animation.Animation animation -> a
    android.animation.Animator animator -> b
    3397:3401:void <init>(android.view.animation.Animation) -> <init>
    3405:3409:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation -> androidx.fragment.app.h$h:
    android.view.ViewGroup mParent -> d
    boolean mEnded -> f
    boolean mTransitionEnded -> g
    boolean mAnimating -> h
    android.view.View mChild -> e
    3429:3436:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    3440:3449:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    3455:3464:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    3469:3477:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> androidx.fragment.app.h$i:
    boolean mRecursive -> b
    androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback -> a
    88:91:void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> <init>
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> androidx.fragment.app.h$j:
    int[] Fragment -> a
    3252:3252:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentManagerImpl$OpGenerator -> androidx.fragment.app.h$k:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl$PopBackStackState -> androidx.fragment.app.h$l:
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    java.lang.String mName -> a
    int mId -> b
    int mFlags -> c
    3291:3295:void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3300:3310:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> androidx.fragment.app.h$m:
    boolean mIsBack -> a
    int mNumPostponed -> c
    androidx.fragment.app.BackStackRecord mRecord -> b
    3325:3328:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3337:3342:void onStartEnterTransition() -> a
    3351:3352:void startListening() -> b
    3386:3387:void cancelTransaction() -> c
    3368:3379:void completeTransaction() -> d
    3358:3358:boolean isReady() -> e
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    java.lang.String mPrimaryNavActiveWho -> g
    int mNextFragmentIndex -> h
    java.util.ArrayList mAdded -> e
    java.util.ArrayList mActive -> d
    androidx.fragment.app.BackStackState[] mBackStack -> f
    58:58:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    36:42:void <init>(android.os.Parcel) -> <init>
    46:46:int describeContents() -> describeContents
    51:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$a:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    67:67:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.i:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> h
    java.util.HashSet mRetainedFragments -> b
    boolean mStateAutomaticallySaved -> e
    boolean mHasBeenCleared -> f
    boolean mHasSavedSnapshot -> g
    java.util.HashMap mViewModelStores -> d
    java.util.HashMap mChildNonConfigs -> c
    40:40:void <clinit>() -> <clinit>
    82:84:void <init>(boolean) -> <init>
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> a
    99:99:boolean addRetainedFragment(androidx.fragment.app.Fragment) -> a
    88:92:void onCleared() -> b
    148:163:void clearNonConfigState(androidx.fragment.app.Fragment) -> b
    104:104:java.util.Collection getRetainedFragments() -> c
    129:134:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> c
    95:95:boolean isCleared() -> d
    139:144:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> d
    124:124:boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> e
    230:231:boolean equals(java.lang.Object) -> equals
    108:119:boolean shouldDestroy(androidx.fragment.app.Fragment) -> f
    242:245:int hashCode() -> hashCode
    251:278:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.i$a:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.j:
    androidx.fragment.app.FragmentManager mFragmentManager -> c
    androidx.fragment.app.FragmentTransaction mCurTransaction -> e
    int mBehavior -> d
    androidx.fragment.app.Fragment mCurrentPrimaryItem -> f
    134:137:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    157:184:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    189:195:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    229:233:void finishUpdate(android.view.ViewGroup) -> a
    237:237:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    248:248:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    264:264:java.lang.String makeFragmentName(int,long) -> a
    147:148:void startUpdate(android.view.ViewGroup) -> b
    200:225:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    androidx.fragment.app.Fragment getItem(int) -> c
    243:243:android.os.Parcelable saveState() -> c
    260:260:long getItemId(int) -> d
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    boolean mHidden -> n
    int mMaxLifecycleState -> o
    java.lang.String mTag -> i
    boolean mRetainInstance -> j
    int mContainerId -> h
    boolean mRemoving -> k
    boolean mDetached -> l
    int mFragmentId -> g
    androidx.fragment.app.Fragment mInstance -> q
    android.os.Bundle mArguments -> m
    android.os.Bundle mSavedFragmentState -> p
    boolean mFromLayout -> f
    java.lang.String mWho -> e
    java.lang.String mClassName -> d
    173:173:void <clinit>() -> <clinit>
    47:60:void <init>(androidx.fragment.app.Fragment) -> <init>
    62:76:void <init>(android.os.Parcel) -> <init>
    80:113:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory) -> a
    153:153:int describeContents() -> describeContents
    119:148:java.lang.String toString() -> toString
    158:171:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$a:
    174:174:void <init>() -> <init>
    174:174:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    177:177:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:java.lang.Object[] newArray(int) -> newArray
    182:182:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStatePagerAdapter -> androidx.fragment.app.k:
    androidx.fragment.app.Fragment mCurrentPrimaryItem -> h
    androidx.fragment.app.FragmentManager mFragmentManager -> c
    androidx.fragment.app.FragmentTransaction mCurTransaction -> e
    java.util.ArrayList mFragments -> g
    java.util.ArrayList mSavedState -> f
    int mBehavior -> d
    124:125:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    140:143:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    167:201:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    206:221:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    255:259:void finishUpdate(android.view.ViewGroup) -> a
    263:263:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    291:319:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    153:154:void startUpdate(android.view.ViewGroup) -> b
    226:251:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    androidx.fragment.app.Fragment getItem(int) -> c
    269:286:android.os.Parcelable saveState() -> c
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> h
    androidx.fragment.app.FragmentManager mFragmentManager -> f
    boolean mAttached -> j
    int mContainerId -> g
    androidx.fragment.app.FragmentTabHost$TabInfo mLastTab -> i
    java.util.ArrayList mTabs -> d
    android.content.Context mContext -> e
    137:139:void <init>(android.content.Context) -> <init>
    148:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    153:159:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    402:428:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> a
    433:439:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> a
    299:334:void onAttachedToWindow() -> onAttachedToWindow
    344:346:void onDetachedFromWindow() -> onDetachedFromWindow
    371:378:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    357:360:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    388:397:void onTabChanged(java.lang.String) -> onTabChanged
    259:260:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    196:196:void setup() -> setup
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> d
    114:114:void <clinit>() -> <clinit>
    93:94:void <init>(android.os.Parcelable) -> <init>
    97:99:void <init>(android.os.Parcel) -> <init>
    109:109:java.lang.String toString() -> toString
    103:105:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$a:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$TabInfo -> androidx.fragment.app.FragmentTabHost$a:
    android.os.Bundle args -> c
    java.lang.String tag -> a
    java.lang.Class clss -> b
    androidx.fragment.app.Fragment fragment -> d
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.l:
    int mBreadCrumbShortTitleRes -> m
    boolean mAllowAddToBackStack -> i
    java.lang.String mName -> j
    int mBreadCrumbTitleRes -> k
    int mTransition -> f
    int mTransitionStyle -> g
    int mPopEnterAnim -> d
    int mPopExitAnim -> e
    int mEnterAnim -> b
    boolean mReorderingAllowed -> q
    int mExitAnim -> c
    java.util.ArrayList mOps -> a
    java.lang.CharSequence mBreadCrumbTitleText -> l
    java.util.ArrayList mSharedElementSourceNames -> o
    java.lang.CharSequence mBreadCrumbShortTitleText -> n
    boolean mAddToBackStack -> h
    java.util.ArrayList mCommitRunnables -> r
    java.util.ArrayList mSharedElementTargetNames -> p
    48:108:void <init>() -> <init>
    int commit() -> a
    113:118:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> a
    125:126:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> a
    134:135:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> a
    156:157:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> a
    161:165:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> a
    306:308:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> a
    350:351:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> a
    505:506:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commitAllowingStateLoss() -> b
    200:200:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> b
    222:223:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> b
    289:291:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> b
    void commitNowAllowingStateLoss() -> c
    255:257:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> c
    239:241:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> d
    532:533:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> d
    boolean isEmpty() -> e
    271:273:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> e
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.l$a:
    int mPopExitAnim -> f
    androidx.fragment.app.Fragment mFragment -> b
    int mExitAnim -> d
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> h
    int mPopEnterAnim -> e
    androidx.lifecycle.Lifecycle$State mOldMaxState -> g
    int mEnterAnim -> c
    int mCmd -> a
    72:73:void <init>() -> <init>
    75:80:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    82:87:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.m:
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    int[] INVERSE_OPS -> a
    45:63:void <clinit>() -> <clinit>
    68:74:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> a
    107:143:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> a
    163:193:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> a
    279:292:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> a
    312:369:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> a
    394:417:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    425:465:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> a
    471:476:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> a
    493:494:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> a
    507:510:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> a
    648:654:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> a
    691:695:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> a
    840:844:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> a
    891:897:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> a
    913:922:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> a
    937:949:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> a
    958:964:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> a
    980:997:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> a
    1003:1018:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> a
    1026:1033:void setViewVisibility(java.util.ArrayList,int) -> a
    1042:1063:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> a
    1077:1082:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> a
    1125:1212:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> a
    1222:1226:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> a
    214:269:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> b
    520:523:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> b
    562:568:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> b
    784:786:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> b
    1094:1102:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> b
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.m$a:
    java.util.ArrayList val$exitingViews -> d
    285:285:void <init>(java.util.ArrayList) -> <init>
    288:289:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.m$b:
    androidx.fragment.app.Fragment val$inFragment -> g
    java.lang.Object val$exitTransition -> k
    java.util.ArrayList val$exitingViews -> j
    java.lang.Object val$enterTransition -> d
    java.util.ArrayList val$enteringViews -> i
    java.util.ArrayList val$sharedElementsIn -> h
    androidx.fragment.app.FragmentTransitionImpl val$impl -> e
    android.view.View val$nonExistentView -> f
    394:394:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    397:415:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.m$c:
    android.view.View val$epicenterView -> h
    androidx.collection.ArrayMap val$inSharedElements -> g
    android.graphics.Rect val$epicenter -> j
    boolean val$inIsPop -> f
    androidx.fragment.app.Fragment val$inFragment -> d
    androidx.fragment.app.Fragment val$outFragment -> e
    androidx.fragment.app.FragmentTransitionImpl val$impl -> i
    624:624:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    627:632:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.m$d:
    android.view.View val$nonExistentView -> i
    android.graphics.Rect val$inEpicenter -> o
    androidx.fragment.app.Fragment val$inFragment -> j
    java.util.ArrayList val$sharedElementsOut -> m
    androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments -> g
    java.lang.Object val$finalSharedElementTransition -> f
    androidx.fragment.app.Fragment val$outFragment -> k
    java.util.ArrayList val$sharedElementsIn -> h
    boolean val$inIsPop -> l
    androidx.collection.ArrayMap val$nameOverrides -> e
    androidx.fragment.app.FragmentTransitionImpl val$impl -> d
    java.lang.Object val$enterTransition -> n
    736:736:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    739:761:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.m$e:
    androidx.fragment.app.BackStackRecord firstOutTransaction -> f
    boolean firstOutIsPop -> e
    androidx.fragment.app.Fragment lastIn -> a
    androidx.fragment.app.Fragment firstOut -> d
    boolean lastInIsPop -> b
    androidx.fragment.app.BackStackRecord lastInTransaction -> c
    1233:1233:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.n:
    32:32:void <init>() -> <init>
    36:36:boolean canHandle(java.lang.Object) -> a
    92:113:void addTargets(java.lang.Object,java.util.ArrayList) -> a
    119:119:boolean hasSimpleTarget(android.transition.Transition) -> a
    143:171:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    178:200:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    206:207:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    214:246:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    262:284:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    288:292:void addTarget(java.lang.Object,android.view.View) -> a
    304:316:void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    41:45:java.lang.Object cloneTransition(java.lang.Object) -> b
    61:72:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> b
    127:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    251:257:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
    296:300:void removeTarget(java.lang.Object,android.view.View) -> b
    50:55:java.lang.Object wrapTransitionInSet(java.lang.Object) -> c
    76:88:void setEpicenter(java.lang.Object,android.view.View) -> c
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.n$a:
    android.graphics.Rect val$epicenter -> a
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.n$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:161:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    151:157:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    165:165:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    169:169:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    147:147:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.n$c:
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    236:236:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    231:232:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    240:240:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    244:244:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    218:227:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.n$d:
    android.graphics.Rect val$epicenter -> a
    306:306:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    309:310:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.o:
    42:42:void <init>() -> <init>
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    boolean canHandle(java.lang.Object) -> a
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    79:82:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> a
    134:141:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> a
    153:182:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> a
    193:209:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> a
    216:230:void findNamedViews(java.util.Map,android.view.View) -> a
    237:251:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> a
    296:308:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> a
    315:333:void bfsAddViewChildren(java.util.List,android.view.View) -> a
    340:345:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> a
    352:352:boolean isNullOrEmpty(java.util.List) -> a
    360:365:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> b
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    void removeTarget(java.lang.Object,android.view.View) -> b
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> b
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
    void setEpicenter(java.lang.Object,android.view.View) -> c
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> c
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.o$a:
    java.util.ArrayList val$outNames -> h
    java.util.ArrayList val$sharedElementsOut -> g
    java.util.ArrayList val$inNames -> f
    int val$numSharedElements -> d
    java.util.ArrayList val$sharedElementsIn -> e
    173:173:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    176:180:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.o$b:
    java.util.ArrayList val$sharedElementsIn -> d
    java.util.Map val$nameOverrides -> e
    237:237:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    240:249:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.o$c:
    java.util.ArrayList val$sharedElementsIn -> d
    java.util.Map val$nameOverrides -> e
    296:296:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    299:306:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.p:
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> d
    24:25:void <init>() -> <init>
    46:47:androidx.lifecycle.Lifecycle getLifecycle() -> a
    51:52:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> a
    31:34:void initialize() -> d
    40:40:boolean isInitialized() -> e
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.q:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> a.f.a.a.a:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> a.f.a.a.b:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> a.f.a.a.c:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> a.f.a.a.d:
    float mStepSize -> b
    float[] mValues -> a
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.legacy.content.WakefulBroadcastReceiver -> androidx.legacy.content.WakefulBroadcastReceiver:
    76:77:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
androidx.legacy.widget.Space -> androidx.legacy.widget.Space:
    42:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:62:void <init>(android.content.Context) -> <init>
    83:98:int getDefaultSize2(int,int) -> a
    75:75:void draw(android.graphics.Canvas) -> draw
    107:110:void onMeasure(int,int) -> onMeasure
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.a:
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.b:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    81:86:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> a
    91:102:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> a
    105:161:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> a
    45:65:boolean hasLifecycleMethods(java.lang.Class) -> b
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> c
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.b$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    169:181:void <init>(java.util.Map) -> <init>
    185:188:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
    192:197:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.b$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    205:209:void <init>(int,java.lang.reflect.Method) -> <init>
    214:226:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
    234:238:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    24:26:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    30:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.c:
    23:23:void <init>() -> <init>
    50:50:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    38:38:void onActivityPaused(android.app.Activity) -> onActivityPaused
    34:34:void onActivityResumed(android.app.Activity) -> onActivityResumed
    46:46:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    30:30:void onActivityStarted(android.app.Activity) -> onActivityStarted
androidx.lifecycle.FullLifecycleObserver -> androidx.lifecycle.d:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
    void onCreate(androidx.lifecycle.LifecycleOwner) -> b
    void onPause(androidx.lifecycle.LifecycleOwner) -> c
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
    25:28:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    32:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
    32:32:void <clinit>() -> <clinit>
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.e:
    void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger) -> a
androidx.lifecycle.GenericLifecycleObserver -> androidx.lifecycle.f:
androidx.lifecycle.Lifecycle -> androidx.lifecycle.g:
    78:85:void <init>() -> <init>
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
    androidx.lifecycle.Lifecycle$State getCurrentState() -> a
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.g$a:
    132:127:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.g$b:
    androidx.lifecycle.Lifecycle$State[] $VALUES -> d
    170:163:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.h:
    java.util.concurrent.atomic.AtomicBoolean sInitialized -> a
    37:37:void <clinit>() -> <clinit>
    40:45:void init(android.content.Context) -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.h$a:
    49:49:void <init>() -> <init>
    53:54:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    62:62:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    58:58:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.i:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.j:
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.k:
    androidx.lifecycle.Lifecycle getLifecycle() -> a
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.l:
    androidx.lifecycle.Lifecycle$State mState -> b
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> a
    boolean mHandlingEvent -> e
    java.util.ArrayList mParentStates -> g
    java.lang.ref.WeakReference mLifecycleOwner -> c
    boolean mNewEventOccurred -> f
    int mAddingObserverCounter -> d
    94:97:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    108:109:void markState(androidx.lifecycle.Lifecycle$State) -> a
    130:132:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> a
    169:199:void addObserver(androidx.lifecycle.LifecycleObserver) -> a
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> a
    307:320:void backwardPass(androidx.lifecycle.LifecycleOwner) -> a
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> a
    118:119:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> b
    150:155:boolean isSynced() -> b
    223:224:void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
    243:246:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> b
    292:304:void forwardPass(androidx.lifecycle.LifecycleOwner) -> b
    159:164:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> c
    202:203:void popParentState() -> c
    261:263:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> c
    135:142:void moveToState(androidx.lifecycle.Lifecycle$State) -> d
    325:327:void sync() -> d
    206:207:void pushParentState(androidx.lifecycle.Lifecycle$State) -> e
    277:280:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> f
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.l$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$State -> b
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
    261:243:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.l$b:
    androidx.lifecycle.Lifecycle$State mState -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
    353:356:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    359:363:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleRegistryOwner -> androidx.lifecycle.m:
    androidx.lifecycle.LifecycleRegistry getLifecycle() -> a
androidx.lifecycle.LifecycleService -> androidx.lifecycle.LifecycleService:
    androidx.lifecycle.ServiceLifecycleDispatcher mDispatcher -> d
    30:32:void <init>() -> <init>
    77:77:androidx.lifecycle.Lifecycle getLifecycle() -> a
    45:46:android.os.IBinder onBind(android.content.Intent) -> onBind
    37:39:void onCreate() -> onCreate
    70:72:void onDestroy() -> onDestroy
    53:55:void onStart(android.content.Intent,int) -> onStart
    64:64:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
androidx.lifecycle.Lifecycling -> androidx.lifecycle.n:
    java.util.Map sCallbackCache -> a
    java.util.Map sClassToAdapters -> b
    42:43:void <clinit>() -> <clinit>
    67:97:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> a
    104:106:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> a
    117:133:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> a
    205:205:java.lang.String getAdapterName(java.lang.String) -> a
    141:147:int getObserverConstructorType(java.lang.Class) -> b
    198:198:boolean isLifecycleParent(java.lang.Class) -> c
    152:194:int resolveObserverCallbackType(java.lang.Class) -> d
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    androidx.lifecycle.LifecycleEventObserver val$observer -> a
    60:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    java.lang.Object NOT_SET -> j
    java.lang.Runnable mPostValueRunnable -> i
    java.lang.Object mData -> d
    java.lang.Object mPendingData -> e
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mVersion -> f
    boolean mDispatchingValue -> g
    java.lang.Object mDataLock -> a
    boolean mDispatchInvalidated -> h
    int mActiveCount -> c
    64:64:void <clinit>() -> <clinit>
    108:111:void <init>() -> <init>
    136:155:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> a
    189:204:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> a
    242:249:void removeObserver(androidx.lifecycle.Observer) -> a
    284:287:void postValue(java.lang.Object) -> a
    319:324:java.lang.Object getValue() -> a
    460:461:void assertMainThread(java.lang.String) -> a
    114:132:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> b
    304:308:void setValue(java.lang.Object) -> b
    371:371:boolean hasActiveObservers() -> b
    339:339:void onActive() -> c
    352:352:void onInactive() -> d
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$a:
    androidx.lifecycle.LiveData this$0 -> d
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:89:void run() -> run
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    androidx.lifecycle.LiveData this$0 -> f
    androidx.lifecycle.LifecycleOwner mOwner -> e
    378:381:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    390:395:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    399:399:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> a
    404:405:void detachObserver() -> a
    385:385:boolean shouldBeActive() -> b
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$b:
    androidx.lifecycle.Observer mObserver -> a
    androidx.lifecycle.LiveData this$0 -> d
    boolean mActive -> b
    int mLastVersion -> c
    413:415:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    420:420:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> a
    424:424:void detachObserver() -> a
    427:444:void activeStateChanged(boolean) -> a
    boolean shouldBeActive() -> b
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.o:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.p:
    40:41:void <init>() -> <init>
    50:51:void setValue(java.lang.Object) -> b
androidx.lifecycle.Observer -> androidx.lifecycle.q:
    void onChanged(java.lang.Object) -> a
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.r:
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.s:
    androidx.lifecycle.LifecycleRegistry mRegistry -> i
    boolean mPauseSent -> f
    int mStartedCounter -> d
    boolean mStopSent -> g
    androidx.lifecycle.ProcessLifecycleOwner sInstance -> l
    int mResumedCounter -> e
    java.lang.Runnable mDelayedPauseRunnable -> j
    androidx.lifecycle.ReportFragment$ActivityInitializationListener mInitializationListener -> k
    android.os.Handler mHandler -> h
    89:89:void <clinit>() -> <clinit>
    152:153:void <init>() -> <init>
    156:175:void attach(android.content.Context) -> a
    180:180:androidx.lifecycle.Lifecycle getLifecycle() -> a
    103:104:void init(android.content.Context) -> b
    127:131:void activityPaused() -> d
    115:124:void activityResumed() -> e
    107:112:void activityStarted() -> f
    134:136:void activityStopped() -> g
    139:143:void dispatchPauseIfNeeded() -> h
    146:150:void dispatchStopIfNeeded() -> i
androidx.lifecycle.ProcessLifecycleOwner$1 -> androidx.lifecycle.s$a:
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> d
    64:64:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    67:69:void run() -> run
androidx.lifecycle.ProcessLifecycleOwner$2 -> androidx.lifecycle.s$b:
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
    73:73:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    76:76:void onCreate() -> a
    85:86:void onResume() -> b
    80:81:void onStart() -> c
androidx.lifecycle.ProcessLifecycleOwner$3 -> androidx.lifecycle.s$c:
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
    159:159:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    162:163:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    167:168:void onActivityPaused(android.app.Activity) -> onActivityPaused
    172:173:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwnerInitializer -> androidx.lifecycle.ProcessLifecycleOwnerInitializer:
    34:34:void <init>() -> <init>
    63:63:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    52:52:java.lang.String getType(android.net.Uri) -> getType
    58:58:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    37:39:boolean onCreate() -> onCreate
    46:46:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    68:68:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    29:32:void <init>(java.lang.Object) -> <init>
    36:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.ReportFragment -> androidx.lifecycle.t:
    androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener -> d
    32:32:void <init>() -> <init>
    48:48:androidx.lifecycle.ReportFragment get(android.app.Activity) -> a
    114:126:void dispatch(androidx.lifecycle.Lifecycle$Event) -> a
    129:130:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> a
    39:45:void injectIfNeededIn(android.app.Activity) -> b
    55:58:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> b
    67:70:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> c
    61:64:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> d
    74:77:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    107:111:void onDestroy() -> onDestroy
    95:97:void onPause() -> onPause
    88:91:void onResume() -> onResume
    81:84:void onStart() -> onStart
    101:103:void onStop() -> onStop
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.t$a:
    void onCreate() -> a
    void onResume() -> b
    void onStart() -> c
androidx.lifecycle.ServiceLifecycleDispatcher -> androidx.lifecycle.u:
    androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable mLastDispatchRunnable -> c
    android.os.Handler mHandler -> b
    androidx.lifecycle.LifecycleRegistry mRegistry -> a
    38:41:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    44:49:void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event) -> a
    89:89:androidx.lifecycle.Lifecycle getLifecycle() -> a
    63:64:void onServicePreSuperOnBind() -> b
    55:56:void onServicePreSuperOnCreate() -> c
    80:82:void onServicePreSuperOnDestroy() -> d
    72:73:void onServicePreSuperOnStart() -> e
androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable -> androidx.lifecycle.u$a:
    androidx.lifecycle.LifecycleRegistry mRegistry -> d
    boolean mWasExecuted -> f
    androidx.lifecycle.Lifecycle$Event mEvent -> e
    97:100:void <init>(androidx.lifecycle.LifecycleRegistry,androidx.lifecycle.Lifecycle$Event) -> <init>
    104:108:void run() -> run
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    androidx.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    23:25:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    29:31:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.ViewModel -> androidx.lifecycle.v:
    java.util.Map mBagOfTags -> a
    108:112:void <init>() -> <init>
    126:140:void clear() -> a
    185:192:void closeWithRuntimeException(java.lang.Object) -> a
    122:122:void onCleared() -> b
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.w:
    androidx.lifecycle.ViewModelStore mViewModelStore -> b
    androidx.lifecycle.ViewModelProvider$Factory mFactory -> a
    105:108:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    126:128:androidx.lifecycle.ViewModel get(java.lang.Class) -> a
    150:168:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.w$a:
    android.app.Application mApplication -> a
    androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance -> b
    220:222:void <init>(android.app.Application) -> <init>
    207:210:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> a
    227:241:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.w$b:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.w$c:
    60:60:void <init>() -> <init>
    androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> a
    76:76:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.w$d:
    174:174:void <init>() -> <init>
    182:184:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProviders -> androidx.lifecycle.x:
    42:44:android.app.Application checkApplication(android.app.Activity) -> a
    51:53:android.app.Activity checkActivity(androidx.fragment.app.Fragment) -> a
    101:105:androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelProvider$Factory) -> a
    70:70:androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment) -> b
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.y:
    java.util.HashMap mMap -> a
    38:40:void <init>() -> <init>
    43:47:void put(java.lang.String,androidx.lifecycle.ViewModel) -> a
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> a
    61:65:void clear() -> a
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.z:
    androidx.lifecycle.ViewModelStore getViewModelStore() -> d
androidx.loader.app.LoaderManager -> androidx.loader.a.a:
    40:44:void <init>() -> <init>
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void markForRedelivery() -> a
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> a
androidx.loader.app.LoaderManagerImpl -> androidx.loader.a.b:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    boolean DEBUG -> c
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    481:482:void markForRedelivery() -> a
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.a.b$a:
    androidx.loader.content.Loader mLoader -> m
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> n
    int mId -> k
    androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver -> o
    androidx.loader.content.Loader mPriorLoader -> p
    android.os.Bundle mArgs -> l
    134:138:void removeObserver(androidx.lifecycle.Observer) -> a
    149:163:androidx.loader.content.Loader destroy(boolean) -> a
    212:218:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    189:195:void setValue(java.lang.Object) -> b
    76:78:void onActive() -> c
    82:84:void onInactive() -> d
    71:71:androidx.loader.content.Loader getLoader() -> e
    111:121:void markForRedelivery() -> f
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.a.b$b:
    void dump(java.lang.String,java.io.PrintWriter) -> a
    boolean hasDeliveredData() -> a
    void reset() -> b
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.a.b$c:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> c
    androidx.collection.SparseArrayCompat mLoaders -> b
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> a
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    344:351:void onCleared() -> b
    335:340:void markForRedelivery() -> c
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.a.b$c$a:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.loader.content.Loader -> androidx.loader.b.a:
    androidx.loader.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mAbandoned -> e
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> c
    boolean mReset -> f
    boolean mContentChanged -> g
    boolean mProcessingChange -> h
    int mId -> a
    boolean mStarted -> d
    409:411:void abandon() -> a
    527:530:java.lang.String dataToString(java.lang.Object) -> a
    555:566:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    318:318:boolean cancelLoad() -> b
    425:425:void onAbandon() -> c
    334:334:boolean onCancelLoad() -> d
    463:463:void onReset() -> e
    296:296:void onStartLoading() -> f
    392:392:void onStopLoading() -> g
    447:453:void reset() -> h
    282:286:void startLoading() -> i
    380:382:void stopLoading() -> j
    207:208:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    535:540:java.lang.String toString() -> toString
    187:188:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
    223:224:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
androidx.loader.content.Loader$OnLoadCanceledListener -> androidx.loader.b.a$a:
androidx.loader.content.Loader$OnLoadCompleteListener -> androidx.loader.b.a$b:
androidx.palette.graphics.ColorCutQuantizer -> androidx.palette.a.a:
    int[] mHistogram -> b
    java.util.List mQuantizedColors -> c
    androidx.palette.graphics.Palette$Filter[] mFilters -> d
    float[] mTempHsl -> e
    java.util.Comparator VBOX_COMPARATOR_VOLUME -> f
    int[] mColors -> a
    457:457:void <clinit>() -> <clinit>
    73:140:void <init>(int[],int,androidx.palette.graphics.Palette$Filter[]) -> <init>
    146:146:java.util.List getQuantizedColors() -> a
    176:196:void splitBoxes(java.util.PriorityQueue,int) -> a
    199:208:java.util.List generateAverageColors(java.util.Collection) -> a
    408:431:void modifySignificantOctet(int[],int,int,int) -> a
    440:440:boolean shouldIgnoreColor(androidx.palette.graphics.Palette$Swatch) -> a
    444:451:boolean shouldIgnoreColor(int,float[]) -> a
    478:478:int approximateToRgb888(int,int,int) -> a
    484:484:int approximateToRgb888(int) -> a
    468:471:int quantizeFromRgb888(int) -> b
    510:517:int modifyWordWidth(int,int,int) -> b
    152:162:java.util.List quantizePixels(int) -> c
    505:505:int quantizedBlue(int) -> d
    498:498:int quantizedGreen(int) -> e
    491:491:int quantizedRed(int) -> f
    434:436:boolean shouldIgnoreColor(int) -> g
androidx.palette.graphics.ColorCutQuantizer$1 -> androidx.palette.a.a$a:
    457:457:void <init>() -> <init>
    460:460:int compare(androidx.palette.graphics.ColorCutQuantizer$Vbox,androidx.palette.graphics.ColorCutQuantizer$Vbox) -> a
    457:457:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.palette.graphics.ColorCutQuantizer$Vbox -> androidx.palette.a.a$b:
    androidx.palette.graphics.ColorCutQuantizer this$0 -> j
    int mMinBlue -> h
    int mMaxBlue -> i
    int mMinGreen -> f
    int mMaxGreen -> g
    int mMinRed -> d
    int mMaxRed -> e
    int mUpperIndex -> b
    int mPopulation -> c
    int mLowerIndex -> a
    225:229:void <init>(androidx.palette.graphics.ColorCutQuantizer,int,int) -> <init>
    237:237:boolean canSplit() -> a
    343:368:int findSplitPoint() -> b
    248:292:void fitBox() -> c
    375:396:androidx.palette.graphics.Palette$Swatch getAverageColor() -> d
    241:241:int getColorCount() -> e
    320:329:int getLongestColorDimension() -> f
    232:232:int getVolume() -> g
    300:301:androidx.palette.graphics.ColorCutQuantizer$Vbox splitBox() -> h
androidx.palette.graphics.Palette -> androidx.palette.a.b:
    java.util.List mTargets -> b
    java.util.List mSwatches -> a
    java.util.Map mSelectedSwatches -> c
    androidx.palette.graphics.Palette$Swatch mDominantSwatch -> e
    android.util.SparseBooleanArray mUsedColors -> d
    androidx.palette.graphics.Palette$Filter DEFAULT_FILTER -> f
    960:960:void <clinit>() -> <clinit>
    158:166:void <init>(java.util.List,java.util.List) -> <init>
    103:103:androidx.palette.graphics.Palette$Builder from(android.graphics.Bitmap) -> a
    316:316:androidx.palette.graphics.Palette$Swatch getSwatchForTarget(androidx.palette.graphics.Target) -> a
    355:362:void generate() -> a
    401:422:float generateScore(androidx.palette.graphics.Palette$Swatch,androidx.palette.graphics.Target) -> a
    201:201:androidx.palette.graphics.Palette$Swatch getLightVibrantSwatch() -> b
    366:371:androidx.palette.graphics.Palette$Swatch generateScoredTarget(androidx.palette.graphics.Target) -> b
    394:397:boolean shouldBeScoredForTarget(androidx.palette.graphics.Palette$Swatch,androidx.palette.graphics.Target) -> b
    376:388:androidx.palette.graphics.Palette$Swatch getMaxScoredSwatchForTarget(androidx.palette.graphics.Target) -> c
    427:436:androidx.palette.graphics.Palette$Swatch findDominantSwatch() -> c
androidx.palette.graphics.Palette$1 -> androidx.palette.a.b$a:
    960:960:void <init>() -> <init>
    966:966:boolean isAllowed(int,float[]) -> a
    973:973:boolean isBlack(float[]) -> a
    987:987:boolean isNearRedILine(float[]) -> b
    980:980:boolean isWhite(float[]) -> c
androidx.palette.graphics.Palette$Builder -> androidx.palette.a.b$b:
    java.util.List mSwatches -> a
    android.graphics.Bitmap mBitmap -> b
    java.util.List mTargets -> c
    int mResizeMaxDimension -> f
    android.graphics.Rect mRegion -> h
    int mMaxColors -> d
    int mResizeArea -> e
    java.util.List mFilters -> g
    616:618:void <init>(android.graphics.Bitmap) -> <init>
    735:745:androidx.palette.graphics.Palette$Builder setRegion(int,int,int,int) -> a
    787:837:androidx.palette.graphics.Palette generate() -> a
    885:905:int[] getPixelsFromBitmap(android.graphics.Bitmap) -> a
    913:932:android.graphics.Bitmap scaleBitmapDown(android.graphics.Bitmap) -> b
androidx.palette.graphics.Palette$Filter -> androidx.palette.a.b$c:
    boolean isAllowed(int,float[]) -> a
androidx.palette.graphics.Palette$Swatch -> androidx.palette.a.b$d:
    float[] mHsl -> i
    int mBodyTextColor -> h
    boolean mGeneratedTextColors -> f
    int mTitleTextColor -> g
    int mRgb -> d
    int mPopulation -> e
    int mGreen -> b
    int mBlue -> c
    int mRed -> a
    454:460:void <init>(int,int) -> <init>
    521:522:int getBodyTextColor() -> a
    491:495:float[] getHsl() -> b
    502:502:int getPopulation() -> c
    480:480:int getRgb() -> d
    511:512:int getTitleTextColor() -> e
    580:584:boolean equals(java.lang.Object) -> equals
    526:564:void ensureTextColorsGenerated() -> f
    593:593:int hashCode() -> hashCode
    568:575:java.lang.String toString() -> toString
androidx.palette.graphics.Target -> androidx.palette.a.c:
    androidx.palette.graphics.Target MUTED -> i
    androidx.palette.graphics.Target DARK_MUTED -> j
    androidx.palette.graphics.Target DARK_VIBRANT -> g
    androidx.palette.graphics.Target LIGHT_MUTED -> h
    androidx.palette.graphics.Target LIGHT_VIBRANT -> e
    androidx.palette.graphics.Target VIBRANT -> f
    float[] mWeights -> c
    float[] mSaturationTargets -> a
    float[] mLightnessTargets -> b
    boolean mIsExclusive -> d
    90:113:void <clinit>() -> <clinit>
    120:124:void <init>() -> <init>
    205:205:float getLightnessWeight() -> a
    229:232:void setTargetDefaultValues(float[]) -> a
    258:260:void setDefaultDarkLightnessValues(androidx.palette.graphics.Target) -> a
    179:179:float getMaximumLightness() -> b
    269:271:void setDefaultLightLightnessValues(androidx.palette.graphics.Target) -> b
    155:155:float getMaximumSaturation() -> c
    279:281:void setDefaultMutedSaturationValues(androidx.palette.graphics.Target) -> c
    163:163:float getMinimumLightness() -> d
    263:266:void setDefaultNormalLightnessValues(androidx.palette.graphics.Target) -> d
    139:139:float getMinimumSaturation() -> e
    274:276:void setDefaultVibrantSaturationValues(androidx.palette.graphics.Target) -> e
    216:216:float getPopulationWeight() -> f
    192:192:float getSaturationWeight() -> g
    171:171:float getTargetLightness() -> h
    147:147:float getTargetSaturation() -> i
    225:225:boolean isExclusive() -> j
    241:255:void normalizeWeights() -> k
    235:238:void setDefaultWeights() -> l
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
    androidx.preference.CheckBoxPreference$Listener mListener -> X
    45:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:65:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:82:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    90:92:void performClick(android.view.View) -> a
    109:118:void syncCheckboxView(android.view.View) -> c
    95:106:void syncViewIfAccessibilityEnabled(android.view.View) -> d
androidx.preference.CheckBoxPreference$Listener -> androidx.preference.CheckBoxPreference$a:
    androidx.preference.CheckBoxPreference this$0 -> a
    121:121:void <init>(androidx.preference.CheckBoxPreference) -> <init>
    125:132:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
    android.graphics.drawable.Drawable mDialogIcon -> U
    int mDialogLayoutResId -> X
    java.lang.CharSequence mDialogTitle -> S
    java.lang.CharSequence mDialogMessage -> T
    java.lang.CharSequence mPositiveButtonText -> V
    java.lang.CharSequence mNegativeButtonText -> W
    52:84:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    87:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    91:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    257:258:void onClick() -> B
    180:180:android.graphics.drawable.Drawable getDialogIcon() -> H
    252:252:int getDialogLayoutResource() -> I
    153:153:java.lang.CharSequence getDialogMessage() -> J
    122:122:java.lang.CharSequence getDialogTitle() -> K
    232:232:java.lang.CharSequence getNegativeButtonText() -> L
    206:206:java.lang.CharSequence getPositiveButtonText() -> M
androidx.preference.DialogPreference$TargetFragment -> androidx.preference.DialogPreference$a:
    androidx.preference.Preference findPreference(java.lang.CharSequence) -> a
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> g0
    android.content.Context mContext -> d0
    android.widget.ArrayAdapter mAdapter -> e0
    android.widget.Spinner mSpinner -> f0
    61:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    79:80:void onClick() -> B
    98:98:android.widget.ArrayAdapter createAdapter() -> R
    103:109:void updateEntries() -> S
    128:133:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    136:144:int findSpinnerIndexOfValue(java.lang.String) -> f
    118:124:void notifyChanged() -> y
androidx.preference.DropDownPreference$1 -> androidx.preference.DropDownPreference$a:
    androidx.preference.DropDownPreference this$0 -> d
    39:39:void <init>(androidx.preference.DropDownPreference) -> <init>
    42:48:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    53:53:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
    java.lang.String mText -> Y
    androidx.preference.EditTextPreference$OnBindEditTextListener mOnBindEditTextListener -> Z
    44:55:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    58:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    116:124:android.os.Parcelable onSaveInstanceState() -> D
    111:111:boolean shouldDisableDependents() -> F
    162:162:androidx.preference.EditTextPreference$OnBindEditTextListener getOnBindEditTextListener() -> N
    96:96:java.lang.String getText() -> O
    101:101:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> a
    129:132:void onRestoreInstanceState(android.os.Parcelable) -> a
    106:107:void onSetInitialValue(java.lang.Object) -> b
    76:88:void setText(java.lang.String) -> d
    150:151:void setOnBindEditTextListener(androidx.preference.EditTextPreference$OnBindEditTextListener) -> setOnBindEditTextListener
androidx.preference.EditTextPreference$OnBindEditTextListener -> androidx.preference.EditTextPreference$a:
    void onBindEditText(android.widget.EditText) -> a
androidx.preference.EditTextPreference$SavedState -> androidx.preference.EditTextPreference$SavedState:
    java.lang.String mText -> d
    181:181:void <clinit>() -> <clinit>
    197:199:void <init>(android.os.Parcel) -> <init>
    202:203:void <init>(android.os.Parcelable) -> <init>
    207:209:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.EditTextPreference$SavedState$1 -> androidx.preference.EditTextPreference$SavedState$a:
    182:182:void <init>() -> <init>
    182:182:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    185:185:androidx.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    182:182:java.lang.Object[] newArray(int) -> newArray
    190:190:androidx.preference.EditTextPreference$SavedState[] newArray(int) -> newArray
androidx.preference.EditTextPreference$SimpleSummaryProvider -> androidx.preference.EditTextPreference$b:
    androidx.preference.EditTextPreference$SimpleSummaryProvider sSimpleSummaryProvider -> a
    221:221:void <init>() -> <init>
    217:217:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> a
    231:234:androidx.preference.EditTextPreference$SimpleSummaryProvider getInstance() -> a
    239:242:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference) -> a
androidx.preference.EditTextPreferenceDialogFragmentCompat -> androidx.preference.a:
    java.lang.CharSequence mText -> u0
    android.widget.EditText mEditText -> t0
    28:28:void <init>() -> <init>
    38:42:androidx.preference.EditTextPreferenceDialogFragmentCompat newInstance(java.lang.String) -> b
    63:68:void onBindDialogView(android.view.View) -> b
    47:53:void onCreate(android.os.Bundle) -> c
    57:59:void onSaveInstanceState(android.os.Bundle) -> e
    95:102:void onDialogClosed(boolean) -> j
    90:90:boolean needInputMethod() -> p0
    82:82:androidx.preference.EditTextPreference getEditTextPreference() -> q0
androidx.preference.ExpandButton -> androidx.preference.b:
    long mId -> S
    35:42:void <init>(android.content.Context,java.util.List,long) -> <init>
    45:50:void initLayout() -> H
    58:82:void setSummary(java.util.List) -> a
    86:88:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    92:92:long getId() -> f
androidx.preference.ListPreference -> androidx.preference.ListPreference:
    java.lang.CharSequence[] mEntryValues -> Z
    java.lang.CharSequence[] mEntries -> Y
    boolean mValueSet -> c0
    java.lang.String mSummary -> b0
    java.lang.String mValue -> a0
    49:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    78:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    260:268:android.os.Parcelable onSaveInstanceState() -> D
    117:117:java.lang.CharSequence[] getEntries() -> N
    212:213:java.lang.CharSequence getEntry() -> O
    145:145:java.lang.CharSequence[] getEntryValues() -> P
    203:203:java.lang.String getValue() -> Q
    245:245:int getValueIndex() -> R
    250:250:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> a
    273:276:void onRestoreInstanceState(android.os.Parcelable) -> a
    255:256:void onSetInitialValue(java.lang.Object) -> b
    223:230:int findIndexOfValue(java.lang.String) -> d
    186:195:void setValue(java.lang.String) -> e
    161:176:java.lang.CharSequence getSummary() -> o
androidx.preference.ListPreference$SavedState -> androidx.preference.ListPreference$SavedState:
    java.lang.String mValue -> d
    285:285:void <clinit>() -> <clinit>
    301:303:void <init>(android.os.Parcel) -> <init>
    306:307:void <init>(android.os.Parcelable) -> <init>
    311:313:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.ListPreference$SavedState$1 -> androidx.preference.ListPreference$SavedState$a:
    286:286:void <init>() -> <init>
    286:286:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    289:289:androidx.preference.ListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    286:286:java.lang.Object[] newArray(int) -> newArray
    294:294:androidx.preference.ListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.ListPreference$SimpleSummaryProvider -> androidx.preference.ListPreference$a:
    androidx.preference.ListPreference$SimpleSummaryProvider sSimpleSummaryProvider -> a
    325:325:void <init>() -> <init>
    321:321:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> a
    335:338:androidx.preference.ListPreference$SimpleSummaryProvider getInstance() -> a
    343:346:java.lang.CharSequence provideSummary(androidx.preference.ListPreference) -> a
androidx.preference.ListPreferenceDialogFragmentCompat -> androidx.preference.c:
    int mClickedDialogEntryIndex -> t0
    java.lang.CharSequence[] mEntryValues -> v0
    java.lang.CharSequence[] mEntries -> u0
    25:25:void <init>() -> <init>
    81:100:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> a
    38:43:androidx.preference.ListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> b
    48:65:void onCreate(android.os.Bundle) -> c
    69:73:void onSaveInstanceState(android.os.Bundle) -> e
    104:111:void onDialogClosed(boolean) -> j
    76:76:androidx.preference.ListPreference getListPreference() -> q0
androidx.preference.ListPreferenceDialogFragmentCompat$1 -> androidx.preference.c$a:
    androidx.preference.ListPreferenceDialogFragmentCompat this$0 -> d
    84:84:void <init>(androidx.preference.ListPreferenceDialogFragmentCompat) -> <init>
    87:94:void onClick(android.content.DialogInterface,int) -> onClick
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
    java.lang.CharSequence[] mEntryValues -> Z
    java.lang.CharSequence[] mEntries -> Y
    java.util.Set mValues -> a0
    49:64:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    210:218:android.os.Parcelable onSaveInstanceState() -> D
    107:107:java.lang.CharSequence[] getEntries() -> N
    135:135:java.lang.CharSequence[] getEntryValues() -> O
    157:157:java.util.Set getValues() -> P
    192:199:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> a
    223:226:void onRestoreInstanceState(android.os.Parcelable) -> a
    205:206:void onSetInitialValue(java.lang.Object) -> b
    144:149:void setValues(java.util.Set) -> c
androidx.preference.MultiSelectListPreference$SavedState -> androidx.preference.MultiSelectListPreference$SavedState:
    java.util.Set mValues -> d
    235:235:void <clinit>() -> <clinit>
    251:258:void <init>(android.os.Parcel) -> <init>
    261:262:void <init>(android.os.Parcelable) -> <init>
    266:269:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.MultiSelectListPreference$SavedState$1 -> androidx.preference.MultiSelectListPreference$SavedState$a:
    236:236:void <init>() -> <init>
    236:236:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    239:239:androidx.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    236:236:java.lang.Object[] newArray(int) -> newArray
    244:244:androidx.preference.MultiSelectListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat -> androidx.preference.d:
    boolean mPreferenceChanged -> u0
    java.lang.CharSequence[] mEntries -> v0
    java.lang.CharSequence[] mEntryValues -> w0
    java.util.Set mNewValues -> t0
    29:40:void <init>() -> <init>
    100:120:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> a
    50:55:androidx.preference.MultiSelectListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> b
    60:83:void onCreate(android.os.Bundle) -> c
    87:92:void onSaveInstanceState(android.os.Bundle) -> e
    124:131:void onDialogClosed(boolean) -> j
    95:95:androidx.preference.MultiSelectListPreference getListPreference() -> q0
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1 -> androidx.preference.d$a:
    androidx.preference.MultiSelectListPreferenceDialogFragmentCompat this$0 -> a
    108:108:void <init>(androidx.preference.MultiSelectListPreferenceDialogFragmentCompat) -> <init>
    111:118:void onClick(android.content.DialogInterface,int,boolean) -> onClick
androidx.preference.Preference -> androidx.preference.Preference:
    androidx.preference.PreferenceManager mPreferenceManager -> e
    int mViewId -> l
    android.content.Intent mIntent -> r
    int mWidgetLayoutResId -> K
    long mId -> g
    androidx.preference.PreferenceDataStore mPreferenceDataStore -> f
    androidx.preference.Preference$OnPreferenceClickListener mOnClickListener -> j
    boolean mEnabled -> u
    boolean mPersistent -> w
    androidx.preference.Preference$OnPreferenceChangeListener mOnChangeListener -> i
    java.lang.CharSequence mTitle -> m
    java.lang.String mDependencyKey -> x
    java.lang.Object mDefaultValue -> y
    android.os.Bundle mExtras -> t
    boolean mHasSingleLineTitleAttr -> E
    boolean mIconSpaceReserved -> G
    boolean mHasId -> h
    boolean mParentDependencyMet -> A
    android.graphics.drawable.Drawable mIcon -> p
    java.util.List mDependents -> M
    boolean mAllowDividerAbove -> C
    androidx.preference.PreferenceGroup mParentGroup -> N
    int mIconResId -> o
    boolean mBaseMethodCalled -> O
    boolean mShouldDisableView -> I
    int mLayoutResId -> J
    int mOrder -> k
    androidx.preference.Preference$OnPreferenceCopyListener mOnCopyListener -> P
    androidx.preference.Preference$SummaryProvider mSummaryProvider -> Q
    boolean mSelectable -> v
    java.lang.String mKey -> q
    java.lang.String mFragment -> s
    android.content.Context mContext -> d
    androidx.preference.Preference$OnPreferenceChangeInternalListener mListener -> L
    java.lang.CharSequence mSummary -> n
    boolean mDependencyMet -> z
    android.view.View$OnClickListener mClickListener -> R
    boolean mSingleLineTitle -> F
    boolean mCopyingEnabled -> H
    boolean mVisible -> B
    boolean mAllowDividerBelow -> D
    204:278:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    297:298:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    312:314:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    323:324:void <init>(android.content.Context) -> <init>
    1357:1358:void onAttached() -> A
    929:929:void onClick() -> B
    1366:1368:void onDetached() -> C
    2035:2036:android.os.Parcelable onSaveInstanceState() -> D
    1178:1179:void performClick() -> E
    1516:1516:boolean shouldDisableDependents() -> F
    998:998:boolean shouldPersist() -> G
    1575:1589:void dispatchSetInitialValue() -> H
    1387:1393:void registerDependency() -> I
    1399:1405:void unregisterDependency() -> J
    339:339:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> a
    349:350:void setIntent(android.content.Intent) -> a
    502:593:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    599:607:void setEnabledStateOnViews(android.view.View,boolean) -> a
    691:696:void setIcon(android.graphics.drawable.Drawable) -> a
    749:750:void setSummary(java.lang.CharSequence) -> a
    1093:1095:void setSummaryProvider(androidx.preference.Preference$SummaryProvider) -> a
    1118:1118:boolean callChangeListener(java.lang.Object) -> a
    1166:1167:void performClick(android.view.View) -> a
    1244:1256:int compareTo(androidx.preference.Preference) -> a
    1305:1312:void onAttachedToHierarchy(androidx.preference.PreferenceManager) -> a
    1323:1328:void onAttachedToHierarchy(androidx.preference.PreferenceManager,long) -> a
    1341:1347:void assignParent(androidx.preference.PreferenceGroup) -> a
    1382:1383:void clearWasDetached() -> a
    1420:1424:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String) -> a
    1483:1491:void onDependencyChanged(androidx.preference.Preference,boolean) -> a
    1614:1615:void onSetInitialValue(boolean,java.lang.Object) -> a
    1631:1634:void tryCommit(android.content.SharedPreferences$Editor) -> a
    1730:1739:java.util.Set getPersistedStringSet(java.util.Set) -> a
    1784:1793:int getPersistedInt(int) -> a
    1946:1955:boolean getPersistedBoolean(boolean) -> a
    2061:2072:void dispatchRestoreInstanceState(android.os.Bundle) -> a
    2085:2089:void onRestoreInstanceState(android.os.Parcelable) -> a
    2096:2096:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    657:661:void setTitle(java.lang.CharSequence) -> b
    1212:1212:android.content.Context getContext() -> b
    1436:1443:void registerDependent(androidx.preference.Preference) -> b
    1464:1474:void notifyDependencyChange(boolean) -> b
    1500:1508:void onParentChanged(androidx.preference.Preference,boolean) -> b
    1628:1628:void onSetInitialValue(java.lang.Object) -> b
    1677:1686:java.lang.String getPersistedString(java.lang.String) -> b
    1700:1718:boolean persistStringSet(java.util.Set) -> b
    1754:1771:boolean persistInt(int) -> b
    2010:2021:void dispatchSaveInstanceState(android.os.Bundle) -> b
    422:425:android.os.Bundle getExtras() -> c
    705:707:void setIcon(int) -> c
    1452:1455:void unregisterDependent(androidx.preference.Preference) -> c
    1647:1665:boolean persistString(java.lang.String) -> c
    1916:1933:boolean persistBoolean(boolean) -> c
    2047:2048:void restoreHierarchyState(android.os.Bundle) -> c
    91:91:int compareTo(java.lang.Object) -> compareTo
    453:454:void setLayoutResource(int) -> d
    1973:1986:java.lang.StringBuilder getFilterableStringBuilder() -> d
    1997:1998:void saveHierarchyState(android.os.Bundle) -> d
    376:376:java.lang.String getFragment() -> e
    621:627:void setOrder(int) -> e
    670:671:void setTitle(int) -> f
    920:920:long getId() -> f
    358:358:android.content.Intent getIntent() -> g
    952:952:java.lang.String getKey() -> h
    462:462:int getLayoutResource() -> i
    636:636:int getOrder() -> j
    1552:1552:androidx.preference.PreferenceGroup getParent() -> k
    408:414:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> l
    1295:1295:androidx.preference.PreferenceManager getPreferenceManager() -> m
    1228:1229:android.content.SharedPreferences getSharedPreferences() -> n
    732:735:java.lang.CharSequence getSummary() -> o
    1107:1107:androidx.preference.Preference$SummaryProvider getSummaryProvider() -> p
    680:680:java.lang.CharSequence getTitle() -> q
    486:486:int getWidgetLayoutResource() -> r
    975:975:boolean hasKey() -> s
    1267:1268:void setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener) -> setOnPreferenceChangeInternalListener
    1129:1130:void setOnPreferenceChangeListener(androidx.preference.Preference$OnPreferenceChangeListener) -> setOnPreferenceChangeListener
    1148:1149:void setOnPreferenceClickListener(androidx.preference.Preference$OnPreferenceClickListener) -> setOnPreferenceClickListener
    1081:1081:boolean isCopyingEnabled() -> t
    1960:1960:java.lang.String toString() -> toString
    794:794:boolean isEnabled() -> u
    986:986:boolean isPersistent() -> v
    815:815:boolean isSelectable() -> w
    878:878:boolean isVisible() -> x
    1274:1277:void notifyChanged() -> y
    1284:1287:void notifyHierarchyChanged() -> z
androidx.preference.Preference$1 -> androidx.preference.Preference$a:
    androidx.preference.Preference this$0 -> d
    178:178:void <init>(androidx.preference.Preference) -> <init>
    181:182:void onClick(android.view.View) -> onClick
androidx.preference.Preference$BaseSavedState -> androidx.preference.Preference$BaseSavedState:
    2189:2189:void <clinit>() -> <clinit>
    2203:2204:void <init>(android.os.Parcel) -> <init>
    2207:2208:void <init>(android.os.Parcelable) -> <init>
androidx.preference.Preference$BaseSavedState$1 -> androidx.preference.Preference$BaseSavedState$a:
    2190:2190:void <init>() -> <init>
    2190:2190:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2193:2193:androidx.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2190:2190:java.lang.Object[] newArray(int) -> newArray
    2198:2198:androidx.preference.Preference$BaseSavedState[] newArray(int) -> newArray
androidx.preference.Preference$OnPreferenceChangeInternalListener -> androidx.preference.Preference$b:
    void onPreferenceHierarchyChange(androidx.preference.Preference) -> a
    void onPreferenceChange(androidx.preference.Preference) -> b
androidx.preference.Preference$OnPreferenceChangeListener -> androidx.preference.Preference$c:
    boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object) -> a
androidx.preference.Preference$OnPreferenceClickListener -> androidx.preference.Preference$d:
    boolean onPreferenceClick(androidx.preference.Preference) -> a
androidx.preference.Preference$OnPreferenceCopyListener -> androidx.preference.Preference$e:
    androidx.preference.Preference mPreference -> d
    2222:2224:void <init>(androidx.preference.Preference) -> <init>
    2229:2231:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2240:2250:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.preference.Preference$SummaryProvider -> androidx.preference.Preference$f:
    java.lang.CharSequence provideSummary(androidx.preference.Preference) -> a
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
    45:46:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:68:boolean shouldDisableDependents() -> F
    73:101:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    105:121:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    63:63:boolean isEnabled() -> u
androidx.preference.PreferenceDataStore -> androidx.preference.e:
    boolean getBoolean(java.lang.String,boolean) -> a
    int getInt(java.lang.String,int) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> a
    void putBoolean(java.lang.String,boolean) -> b
    void putInt(java.lang.String,int) -> b
    void putString(java.lang.String,java.lang.String) -> b
    void putStringSet(java.lang.String,java.util.Set) -> b
androidx.preference.PreferenceDialogFragmentCompat -> androidx.preference.f:
    int mWhichButtonClicked -> s0
    int mDialogLayoutRes -> q0
    androidx.preference.DialogPreference mPreference -> l0
    java.lang.CharSequence mPositiveButtonText -> n0
    android.graphics.drawable.BitmapDrawable mDialogIcon -> r0
    java.lang.CharSequence mDialogTitle -> m0
    java.lang.CharSequence mDialogMessage -> p0
    java.lang.CharSequence mNegativeButtonText -> o0
    50:50:void <init>() -> <init>
    188:188:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> a
    210:212:void requestInputMethod(android.app.Dialog) -> a
    222:228:android.view.View onCreateDialogView(android.content.Context) -> b
    239:257:void onBindDialogView(android.view.View) -> b
    77:81:void onCreate(android.os.Bundle) -> c
    123:133:void onSaveInstanceState(android.os.Bundle) -> e
    void onDialogClosed(boolean) -> j
    138:163:android.app.Dialog onCreateDialog(android.os.Bundle) -> n
    173:179:androidx.preference.DialogPreference getPreference() -> o0
    261:262:void onClick(android.content.DialogInterface,int) -> onClick
    266:268:void onDismiss(android.content.DialogInterface) -> onDismiss
    203:203:boolean needInputMethod() -> p0
androidx.preference.PreferenceFragmentCompat -> androidx.preference.g:
    boolean mHavePrefs -> d0
    boolean mInitDone -> e0
    java.lang.Runnable mSelectPreferenceRunnable -> g0
    int mLayoutResId -> f0
    java.lang.Runnable mRequestFocus -> i0
    androidx.preference.PreferenceManager mPreferenceManager -> b0
    androidx.recyclerview.widget.RecyclerView mList -> c0
    androidx.preference.PreferenceFragmentCompat$DividerDecoration mDividerDecoration -> a0
    android.os.Handler mHandler -> h0
    90:132:void <init>() -> <init>
    298:305:void onDestroyView() -> S
    284:287:void onStart() -> W
    291:294:void onStop() -> X
    void onCreatePreferences(android.os.Bundle,java.lang.String) -> a
    179:202:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    243:244:void setDivider(android.graphics.drawable.Drawable) -> a
    259:280:void onViewCreated(android.view.View,android.os.Bundle) -> a
    375:392:void setPreferencesFromResource(int,java.lang.String) -> a
    447:456:void onNavigateToScreen(androidx.preference.PreferenceScreen) -> a
    462:465:androidx.preference.Preference findPreference(java.lang.CharSequence) -> a
    580:609:void onDisplayPreferenceDialog(androidx.preference.Preference) -> a
    399:433:boolean onPreferenceTreeClick(androidx.preference.Preference) -> b
    567:567:androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen) -> b
    141:161:void onCreate(android.os.Bundle) -> c
    343:350:void setPreferenceScreen(androidx.preference.PreferenceScreen) -> c
    533:547:androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> c
    254:255:void setDividerHeight(int) -> d
    309:317:void onSaveInstanceState(android.os.Bundle) -> e
    481:487:void bindPreferences() -> n0
    625:625:androidx.fragment.app.Fragment getCallbackFragment() -> o0
    513:513:androidx.recyclerview.widget.RecyclerView getListView() -> p0
    334:334:androidx.preference.PreferenceScreen getPreferenceScreen() -> q0
    503:503:void onBindPreferences() -> r0
    557:557:androidx.recyclerview.widget.RecyclerView$LayoutManager onCreateLayoutManager() -> s0
    510:510:void onUnbindPreferences() -> t0
    475:477:void postBindPreferences() -> u0
    469:470:void requirePreferenceManager() -> v0
    490:496:void unbindPreferences() -> w0
androidx.preference.PreferenceFragmentCompat$1 -> androidx.preference.g$a:
    androidx.preference.PreferenceFragmentCompat this$0 -> a
    121:121:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    124:129:void handleMessage(android.os.Message) -> handleMessage
androidx.preference.PreferenceFragmentCompat$2 -> androidx.preference.g$b:
    androidx.preference.PreferenceFragmentCompat this$0 -> d
    132:132:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    135:136:void run() -> run
androidx.preference.PreferenceFragmentCompat$DividerDecoration -> androidx.preference.g$c:
    androidx.preference.PreferenceFragmentCompat this$0 -> d
    int mDividerHeight -> b
    android.graphics.drawable.Drawable mDivider -> a
    boolean mAllowDividerAfterLastItem -> c
    788:788:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    810:813:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    816:830:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView) -> a
    834:841:void setDivider(android.graphics.drawable.Drawable) -> a
    844:846:void setDividerHeight(int) -> a
    792:805:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> b
    849:850:void setAllowDividerAfterLastItem(boolean) -> b
androidx.preference.PreferenceFragmentCompat$OnPreferenceDisplayDialogCallback -> androidx.preference.g$d:
    boolean onPreferenceDisplayDialog(androidx.preference.PreferenceFragmentCompat,androidx.preference.Preference) -> a
androidx.preference.PreferenceFragmentCompat$OnPreferenceStartFragmentCallback -> androidx.preference.g$e:
    boolean onPreferenceStartFragment(androidx.preference.PreferenceFragmentCompat,androidx.preference.Preference) -> a
androidx.preference.PreferenceFragmentCompat$OnPreferenceStartScreenCallback -> androidx.preference.g$f:
    boolean onPreferenceStartScreen(androidx.preference.PreferenceFragmentCompat,androidx.preference.PreferenceScreen) -> a
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
    androidx.collection.SimpleArrayMap mIdRecycleCache -> S
    java.util.List mPreferences -> T
    int mInitialExpandedChildrenCount -> X
    boolean mOrderingAsAdded -> U
    int mCurrentPreferenceOrder -> V
    boolean mAttachedToHierarchy -> W
    androidx.preference.PreferenceGroup$OnExpandButtonClickListener mOnExpandButtonClickListener -> Y
    82:99:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    102:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    106:107:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    444:455:void onAttached() -> A
    459:469:void onDetached() -> C
    513:514:android.os.Parcelable onSaveInstanceState() -> D
    163:163:int getInitialExpandedChildrenCount() -> H
    439:439:androidx.preference.PreferenceGroup$OnExpandButtonClickListener getOnExpandButtonClickListener() -> I
    179:179:int getPreferenceCount() -> J
    400:400:boolean isOnSameScreenAsChildren() -> K
    484:486:void sortPreferences() -> L
    502:509:void dispatchRestoreInstanceState(android.os.Bundle) -> a
    519:522:void onRestoreInstanceState(android.os.Parcelable) -> a
    170:171:void addItemFromInflater(androidx.preference.Preference) -> b
    473:481:void notifyDependencyChange(boolean) -> b
    491:498:void dispatchSaveInstanceState(android.os.Bundle) -> b
    199:238:boolean addPreference(androidx.preference.Preference) -> c
    367:368:androidx.preference.Preference findPreference(java.lang.CharSequence) -> c
    121:122:void setOrderingAsAdded(boolean) -> d
    350:351:boolean onPrepareAddPreference(androidx.preference.Preference) -> d
    189:189:androidx.preference.Preference getPreference(int) -> g
    149:154:void setInitialExpandedChildrenCount(int) -> h
    425:426:void setOnExpandButtonClickListener(androidx.preference.PreferenceGroup$OnExpandButtonClickListener) -> setOnExpandButtonClickListener
androidx.preference.PreferenceGroup$1 -> androidx.preference.PreferenceGroup$a:
    androidx.preference.PreferenceGroup this$0 -> d
    72:72:void <init>(androidx.preference.PreferenceGroup) -> <init>
    75:77:void run() -> run
androidx.preference.PreferenceGroup$OnExpandButtonClickListener -> androidx.preference.PreferenceGroup$b:
    void onExpandButtonClick() -> a
androidx.preference.PreferenceGroup$PreferencePositionCallback -> androidx.preference.PreferenceGroup$c:
androidx.preference.PreferenceGroup$SavedState -> androidx.preference.PreferenceGroup$SavedState:
    int mInitialExpandedChildrenCount -> d
    576:576:void <clinit>() -> <clinit>
    592:594:void <init>(android.os.Parcel) -> <init>
    597:599:void <init>(android.os.Parcelable,int) -> <init>
    603:605:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.PreferenceGroup$SavedState$1 -> androidx.preference.PreferenceGroup$SavedState$a:
    577:577:void <init>() -> <init>
    577:577:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    580:580:androidx.preference.PreferenceGroup$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    577:577:java.lang.Object[] newArray(int) -> newArray
    585:585:androidx.preference.PreferenceGroup$SavedState[] newArray(int) -> newArray
androidx.preference.PreferenceGroupAdapter -> androidx.preference.h:
    android.os.Handler mHandler -> g
    java.util.List mPreferenceResourceDescriptors -> f
    androidx.preference.PreferenceGroup mPreferenceGroup -> c
    java.util.List mVisiblePreferences -> e
    java.lang.Runnable mSyncRunnable -> h
    java.util.List mPreferences -> d
    88:107:void <init>(androidx.preference.PreferenceGroup) -> <init>
    184:206:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup) -> a
    215:272:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup) -> a
    288:306:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List) -> a
    339:342:long getItemId(int) -> a
    357:359:void onPreferenceHierarchyChange(androidx.preference.Preference) -> a
    417:419:void onBindViewHolder(androidx.preference.PreferenceViewHolder,int) -> a
    47:47:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    47:47:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> b
    317:317:boolean isGroupExpandable(androidx.preference.PreferenceGroup) -> b
    334:334:int getItemCount() -> b
    347:353:void onPreferenceChange(androidx.preference.Preference) -> b
    368:378:int getItemViewType(int) -> b
    385:412:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> b
    328:328:androidx.preference.Preference getItem(int) -> c
    115:173:void updatePreferences() -> f
androidx.preference.PreferenceGroupAdapter$1 -> androidx.preference.h$a:
    androidx.preference.PreferenceGroupAdapter this$0 -> d
    81:81:void <init>(androidx.preference.PreferenceGroupAdapter) -> <init>
    84:85:void run() -> run
androidx.preference.PreferenceGroupAdapter$2 -> androidx.preference.h$b:
    java.util.List val$visiblePreferenceList -> b
    java.util.List val$oldVisibleList -> a
    androidx.preference.PreferenceManager$PreferenceComparisonCallback val$comparisonCallback -> c
    139:139:void <init>(androidx.preference.PreferenceGroupAdapter,java.util.List,java.util.List,androidx.preference.PreferenceManager$PreferenceComparisonCallback) -> <init>
    147:147:int getNewListSize() -> a
    159:159:boolean areContentsTheSame(int,int) -> a
    142:142:int getOldListSize() -> b
    152:152:boolean areItemsTheSame(int,int) -> b
androidx.preference.PreferenceGroupAdapter$3 -> androidx.preference.h$c:
    androidx.preference.PreferenceGroup val$group -> a
    androidx.preference.PreferenceGroupAdapter this$0 -> b
    293:293:void <init>(androidx.preference.PreferenceGroupAdapter,androidx.preference.PreferenceGroup) -> <init>
    296:303:boolean onPreferenceClick(androidx.preference.Preference) -> a
androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor -> androidx.preference.h$d:
    int mWidgetLayoutResId -> b
    java.lang.String mClassName -> c
    int mLayoutResId -> a
    457:461:void <init>(androidx.preference.Preference) -> <init>
    465:469:boolean equals(java.lang.Object) -> equals
    476:480:int hashCode() -> hashCode
androidx.preference.PreferenceInflater -> androidx.preference.i:
    android.content.Context mContext -> a
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> e
    java.lang.Object[] mConstructorArgs -> b
    java.lang.String[] mDefaultPackages -> d
    java.util.HashMap CONSTRUCTOR_MAP -> f
    androidx.preference.PreferenceManager mPreferenceManager -> c
    40:43:void <clinit>() -> <clinit>
    51:54:void <init>(android.content.Context,androidx.preference.PreferenceManager) -> <init>
    57:67:void init(androidx.preference.PreferenceManager) -> a
    77:78:void setDefaultPackages(java.lang.String[]) -> a
    94:94:android.content.Context getContext() -> a
    107:111:androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup) -> a
    133:174:androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup) -> a
    181:185:androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup) -> a
    205:246:androidx.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet) -> a
    266:266:androidx.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet) -> a
    307:350:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet) -> a
    354:360:void skipCurrentTag(org.xmlpull.v1.XmlPullParser) -> a
    274:283:androidx.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet) -> b
androidx.preference.PreferenceManager -> androidx.preference.j:
    android.content.Context mContext -> a
    java.lang.String mSharedPreferencesName -> g
    int mSharedPreferencesMode -> h
    int mStorage -> i
    long mNextId -> b
    androidx.preference.PreferenceDataStore mPreferenceDataStore -> d
    androidx.preference.PreferenceManager$OnPreferenceTreeClickListener mOnPreferenceTreeClickListener -> l
    androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener mOnDisplayPreferenceDialogListener -> m
    android.content.SharedPreferences mSharedPreferences -> c
    boolean mNoCommit -> f
    androidx.preference.PreferenceManager$PreferenceComparisonCallback mPreferenceComparisonCallback -> k
    androidx.preference.PreferenceManager$OnNavigateToScreenListener mOnNavigateToScreenListener -> n
    android.content.SharedPreferences$Editor mEditor -> e
    androidx.preference.PreferenceScreen mPreferenceScreen -> j
    104:108:void <init>(android.content.Context) -> <init>
    124:124:java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> a
    213:222:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen) -> a
    264:266:void setSharedPreferencesName(java.lang.String) -> a
    429:437:boolean setPreferences(androidx.preference.PreferenceScreen) -> a
    451:455:androidx.preference.Preference findPreference(java.lang.CharSequence) -> a
    468:479:android.content.SharedPreferences$Editor getEditor() -> a
    497:501:void setNoCommit(boolean) -> a
    536:539:void showDialog(androidx.preference.Preference) -> a
    237:239:long getNextId() -> b
    569:569:androidx.preference.PreferenceManager$OnNavigateToScreenListener getOnNavigateToScreenListener() -> c
    552:552:androidx.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener() -> d
    513:513:androidx.preference.PreferenceManager$PreferenceComparisonCallback getPreferenceComparisonCallback() -> e
    380:380:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> f
    419:419:androidx.preference.PreferenceScreen getPreferenceScreen() -> g
    391:410:android.content.SharedPreferences getSharedPreferences() -> h
    493:493:boolean shouldCommit() -> i
    527:528:void setOnDisplayPreferenceDialogListener(androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener) -> setOnDisplayPreferenceDialogListener
    562:563:void setOnNavigateToScreenListener(androidx.preference.PreferenceManager$OnNavigateToScreenListener) -> setOnNavigateToScreenListener
    548:549:void setOnPreferenceTreeClickListener(androidx.preference.PreferenceManager$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener -> androidx.preference.j$a:
    void onDisplayPreferenceDialog(androidx.preference.Preference) -> a
androidx.preference.PreferenceManager$OnNavigateToScreenListener -> androidx.preference.j$b:
    void onNavigateToScreen(androidx.preference.PreferenceScreen) -> a
androidx.preference.PreferenceManager$OnPreferenceTreeClickListener -> androidx.preference.j$c:
    boolean onPreferenceTreeClick(androidx.preference.Preference) -> b
androidx.preference.PreferenceManager$PreferenceComparisonCallback -> androidx.preference.j$d:
    boolean arePreferenceContentsTheSame(androidx.preference.Preference,androidx.preference.Preference) -> a
    boolean arePreferenceItemsTheSame(androidx.preference.Preference,androidx.preference.Preference) -> b
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate -> androidx.preference.k:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> f
    androidx.core.view.AccessibilityDelegateCompat mItemDelegate -> h
    androidx.core.view.AccessibilityDelegateCompat mDefaultItemDelegate -> g
    48:50:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    55:55:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> b
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1 -> androidx.preference.k$a:
    androidx.preference.PreferenceRecyclerViewAccessibilityDelegate this$0 -> d
    58:58:void <init>(androidx.preference.PreferenceRecyclerViewAccessibilityDelegate) -> <init>
    61:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    81:81:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
    boolean mShouldUseGeneratedIds -> Z
    53:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:60:void onClick() -> B
    71:71:boolean isOnSameScreenAsChildren() -> K
    81:81:boolean shouldUseGeneratedIds() -> M
androidx.preference.PreferenceViewHolder -> androidx.preference.l:
    android.util.SparseArray mCachedViews -> t
    boolean mDividerAllowedAbove -> u
    boolean mDividerAllowedBelow -> v
    36:45:void <init>(android.view.View) -> <init>
    80:80:boolean isDividerAllowedAbove() -> B
    104:104:boolean isDividerAllowedBelow() -> C
    94:95:void setDividerAllowedAbove(boolean) -> b
    61:69:android.view.View findViewById(int) -> c
    118:119:void setDividerAllowedBelow(boolean) -> c
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
    boolean mAdjustable -> Z
    boolean mShowSeekBarValue -> a0
    boolean mUpdatesContinuously -> b0
    android.widget.SeekBar$OnSeekBarChangeListener mSeekBarChangeListener -> c0
    int mSeekBarIncrement -> V
    android.widget.SeekBar mSeekBar -> X
    int mMin -> T
    boolean mTrackingTouch -> W
    android.widget.TextView mSeekBarValueTextView -> Y
    int mMax -> U
    android.view.View$OnKeyListener mSeekBarKeyListener -> d0
    int mSeekBarValue -> S
    133:149:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    152:153:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:157:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    414:425:android.os.Parcelable onSaveInstanceState() -> D
    165:195:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    207:207:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> a
    348:363:void setValueInternal(int,boolean) -> a
    389:398:void syncValueInternal(android.widget.SeekBar) -> a
    430:443:void onRestoreInstanceState(android.os.Parcelable) -> a
    199:203:void onSetInitialValue(java.lang.Object) -> b
    274:281:void setMax(int) -> g
    253:257:void setSeekBarIncrement(int) -> h
    380:381:void setValue(int) -> i
    407:410:void updateLabelValue(int) -> j
androidx.preference.SeekBarPreference$1 -> androidx.preference.SeekBarPreference$a:
    androidx.preference.SeekBarPreference this$0 -> a
    74:74:void <init>(androidx.preference.SeekBarPreference) -> <init>
    77:83:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    87:88:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    92:96:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
androidx.preference.SeekBarPreference$2 -> androidx.preference.SeekBarPreference$b:
    androidx.preference.SeekBarPreference this$0 -> d
    104:104:void <init>(androidx.preference.SeekBarPreference) -> <init>
    107:120:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.preference.SeekBarPreference$SavedState -> androidx.preference.SeekBarPreference$SavedState:
    int mMax -> f
    int mSeekBarValue -> d
    int mMin -> e
    451:451:void <clinit>() -> <clinit>
    469:475:void <init>(android.os.Parcel) -> <init>
    478:479:void <init>(android.os.Parcelable) -> <init>
    483:489:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.SeekBarPreference$SavedState$1 -> androidx.preference.SeekBarPreference$SavedState$a:
    452:452:void <init>() -> <init>
    452:452:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    455:455:androidx.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    452:452:java.lang.Object[] newArray(int) -> newArray
    460:460:androidx.preference.SeekBarPreference$SavedState[] newArray(int) -> newArray
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
    androidx.preference.SwitchPreference$Listener mListener -> X
    java.lang.CharSequence mSwitchOn -> Y
    java.lang.CharSequence mSwitchOff -> Z
    65:89:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    101:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    111:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    127:131:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    195:197:void performClick(android.view.View) -> a
    214:227:void syncSwitchView(android.view.View) -> c
    200:211:void syncViewIfAccessibilityEnabled(android.view.View) -> d
    151:153:void setSwitchTextOff(java.lang.CharSequence) -> e
    140:142:void setSwitchTextOn(java.lang.CharSequence) -> f
androidx.preference.SwitchPreference$Listener -> androidx.preference.SwitchPreference$a:
    androidx.preference.SwitchPreference this$0 -> a
    230:230:void <init>(androidx.preference.SwitchPreference) -> <init>
    234:242:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
    androidx.preference.SwitchPreferenceCompat$Listener mListener -> X
    java.lang.CharSequence mSwitchOn -> Y
    java.lang.CharSequence mSwitchOff -> Z
    65:89:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    101:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    111:112:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    125:129:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> a
    193:195:void performClick(android.view.View) -> a
    212:225:void syncSwitchView(android.view.View) -> c
    198:209:void syncViewIfAccessibilityEnabled(android.view.View) -> d
    149:151:void setSwitchTextOff(java.lang.CharSequence) -> e
    138:140:void setSwitchTextOn(java.lang.CharSequence) -> f
androidx.preference.SwitchPreferenceCompat$Listener -> androidx.preference.SwitchPreferenceCompat$a:
    androidx.preference.SwitchPreferenceCompat this$0 -> a
    228:228:void <init>(androidx.preference.SwitchPreferenceCompat) -> <init>
    232:240:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
    java.lang.CharSequence mSummaryOn -> T
    java.lang.CharSequence mSummaryOff -> U
    boolean mCheckedSet -> V
    boolean mDisableDependentsState -> W
    boolean mChecked -> S
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:70:void onClick() -> B
    251:259:android.os.Parcelable onSaveInstanceState() -> D
    102:103:boolean shouldDisableDependents() -> F
    78:78:boolean isChecked() -> H
    193:193:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> a
    264:267:void onRestoreInstanceState(android.os.Parcelable) -> a
    198:202:void onSetInitialValue(java.lang.Object) -> b
    211:213:void syncSummaryView(androidx.preference.PreferenceViewHolder) -> b
    220:247:void syncSummaryView(android.view.View) -> b
    147:151:void setSummaryOff(java.lang.CharSequence) -> c
    88:98:void setChecked(boolean) -> d
    115:119:void setSummaryOn(java.lang.CharSequence) -> d
    188:189:void setDisableDependentsState(boolean) -> e
androidx.preference.TwoStatePreference$SavedState -> androidx.preference.TwoStatePreference$SavedState:
    boolean mChecked -> d
    276:276:void <clinit>() -> <clinit>
    292:294:void <init>(android.os.Parcel) -> <init>
    297:298:void <init>(android.os.Parcelable) -> <init>
    302:304:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.TwoStatePreference$SavedState$1 -> androidx.preference.TwoStatePreference$SavedState$a:
    277:277:void <init>() -> <init>
    277:277:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    280:280:androidx.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    277:277:java.lang.Object[] newArray(int) -> newArray
    285:285:androidx.preference.TwoStatePreference$SavedState[] newArray(int) -> newArray
androidx.preference.UnPressableLinearLayout -> androidx.preference.UnPressableLinearLayout:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:void dispatchSetPressed(boolean) -> dispatchSetPressed
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
    int mMaxWidth -> d
    int mMaxHeight -> e
    45:46:void <init>(android.content.Context) -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:int getMaxHeight() -> getMaxHeight
    75:75:int getMaxWidth() -> getMaxWidth
    91:112:void onMeasure(int,int) -> onMeasure
    80:82:void setMaxHeight(int) -> setMaxHeight
    69:71:void setMaxWidth(int) -> setMaxWidth
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.a:
    java.lang.Runnable mOnItemProcessedCallback -> e
    int mExistingUpdateTypes -> h
    androidx.recyclerview.widget.AdapterHelper$Callback mCallback -> d
    boolean mDisableRecycler -> f
    androidx.core.util.Pools$Pool mUpdateOpPool -> a
    androidx.recyclerview.widget.OpReorderer mOpReorderer -> g
    java.util.ArrayList mPostponedList -> c
    java.util.ArrayList mPendingUpdates -> b
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    75:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    119:125:void consumePostponedUpdates() -> a
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> a
    472:497:int findPositionOffset(int,int) -> a
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> a
    540:544:boolean onItemRangeMoved(int,int,int) -> a
    588:620:int applyPendingUpdatesToPosition(int) -> a
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> a
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    468:468:int findPositionOffset(int) -> b
    516:521:boolean onItemRangeInserted(int,int) -> b
    557:585:void consumeUpdatesInOnePass() -> b
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    460:460:boolean hasPendingUpdates() -> c
    464:464:boolean hasAnyUpdateTypes(int) -> c
    528:533:boolean onItemRangeRemoved(int,int) -> c
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> d
    330:407:int updatePositionWithPostponed(int,int) -> d
    411:428:boolean canFindInPreLayout(int) -> d
    624:624:boolean hasUpdates() -> d
    93:116:void preProcess() -> e
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> e
    87:90:void reset() -> f
    231:232:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> f
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> g
androidx.recyclerview.widget.AdapterHelper$Callback -> androidx.recyclerview.widget.a$a:
    androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    void offsetPositionsForMove(int,int) -> a
    void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> b
    void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> c
    void offsetPositionsForAdd(int,int) -> d
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.a$b:
    java.lang.Object payload -> c
    int itemCount -> d
    int positionStart -> b
    int cmd -> a
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:661:java.lang.String cmdToString() -> a
    681:685:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:674:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.b:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> a
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    48:49:void onRemoved(int,int) -> a
    60:61:void onChanged(int,int,java.lang.Object) -> a
    42:43:void onInserted(int,int) -> b
    54:55:void onMoved(int,int) -> c
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.c:
    androidx.recyclerview.widget.ListUpdateCallback mWrapped -> a
    java.lang.Object mLastEventPayload -> e
    int mLastEventCount -> d
    int mLastEventType -> b
    int mLastEventPosition -> c
    46:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> a
    90:100:void onRemoved(int,int) -> a
    110:124:void onChanged(int,int,java.lang.Object) -> a
    76:86:void onInserted(int,int) -> b
    104:106:void onMoved(int,int) -> c
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.d:
    androidx.recyclerview.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    androidx.recyclerview.widget.ChildHelper$Callback mCallback -> a
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> a
    98:111:void addView(android.view.View,int,boolean) -> a
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> a
    253:253:int getChildCount() -> a
    282:288:void detachViewFromParent(int) -> a
    328:330:void hide(android.view.View) -> a
    206:216:android.view.View findHiddenNonRemovedView(int) -> b
    263:263:int getUnfilteredChildCount() -> b
    297:309:int indexOfChild(android.view.View) -> b
    180:181:android.view.View getChildAt(int) -> c
    188:197:void removeAllViewsUnfiltered() -> c
    319:319:boolean isHidden(android.view.View) -> c
    140:151:void removeView(android.view.View) -> d
    273:273:android.view.View getUnfilteredChildAt(int) -> d
    160:172:void removeViewAt(int) -> e
    373:389:boolean removeViewIfHidden(android.view.View) -> e
    114:131:int getOffset(int) -> f
    350:352:void unhide(android.view.View) -> f
    60:62:void hideViewInternal(android.view.View) -> g
    70:74:boolean unhideViewInternal(android.view.View) -> h
    363:363:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.d$a:
    androidx.recyclerview.widget.ChildHelper$Bucket mNext -> b
    long mData -> a
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> a
    441:445:void reset() -> a
    448:467:void insert(int,boolean) -> a
    415:418:void ensureNext() -> b
    493:502:int countOnesBefore(int) -> b
    432:436:boolean get(int) -> c
    470:488:boolean remove(int) -> d
    406:412:void set(int) -> e
    508:508:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Callback -> androidx.recyclerview.widget.d$b:
    void addView(android.view.View,int) -> a
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    android.view.View getChildAt(int) -> a
    void onEnteredHiddenState(android.view.View) -> a
    void removeAllViews() -> a
    int getChildCount() -> b
    androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    void removeViewAt(int) -> b
    void detachViewFromParent(int) -> c
    void onLeftHiddenState(android.view.View) -> c
    int indexOfChild(android.view.View) -> d
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.e:
    java.util.ArrayList mAddAnimations -> o
    java.util.ArrayList mChangesList -> n
    java.util.ArrayList mMovesList -> m
    java.util.ArrayList mAdditionsList -> l
    java.util.ArrayList mPendingChanges -> k
    android.animation.TimeInterpolator sDefaultInterpolator -> s
    java.util.ArrayList mPendingMoves -> j
    java.util.ArrayList mPendingAdditions -> i
    java.util.ArrayList mPendingRemovals -> h
    java.util.ArrayList mChangeAnimations -> r
    java.util.ArrayList mRemoveAnimations -> q
    java.util.ArrayList mMoveAnimations -> p
    38:55:void <init>() -> <init>
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> a
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    419:426:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    641:644:void cancelAll(java.util.List) -> a
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> a
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> b
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> b
    557:638:void endAnimations() -> b
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    531:531:boolean isRunning() -> g
    102:189:void runPendingAnimations() -> i
    550:553:void dispatchFinishedWhenDone() -> j
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> t
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> u
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> v
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.e$a:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> e
    java.util.ArrayList val$moves -> d
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.e$b:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> e
    java.util.ArrayList val$changes -> d
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.e$c:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> e
    java.util.ArrayList val$additions -> d
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.e$d:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> b
    android.view.View val$view -> c
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.e$e:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> c
    android.view.View val$view -> b
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.e$f:
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> e
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> f
    android.view.View val$view -> c
    int val$deltaY -> d
    int val$deltaX -> b
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.e$g:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$oldViewAnim -> b
    android.view.View val$view -> c
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.e$h:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$newViewAnimation -> b
    android.view.View val$newView -> c
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.e$i:
    androidx.recyclerview.widget.RecyclerView$ViewHolder oldHolder -> a
    androidx.recyclerview.widget.RecyclerView$ViewHolder newHolder -> b
    int toY -> f
    int fromY -> d
    int toX -> e
    int fromX -> c
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.e$j:
    androidx.recyclerview.widget.RecyclerView$ViewHolder holder -> a
    int toX -> d
    int toY -> e
    int fromX -> b
    int fromY -> c
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.f:
    java.util.Comparator SNAKE_COMPARATOR -> a
    84:84:void <clinit>() -> <clinit>
    105:105:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> a
    123:198:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> a
    204:208:androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> a
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.f$a:
    84:84:void <init>() -> <init>
    87:88:int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake) -> a
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.f$b:
    295:295:void <init>() -> <init>
    boolean areContentsTheSame(int,int) -> a
    int getNewListSize() -> a
    boolean areItemsTheSame(int,int) -> b
    int getOldListSize() -> b
    360:360:java.lang.Object getChangePayload(int,int) -> c
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.f$c:
    java.util.List mSnakes -> a
    int[] mOldItemStatuses -> b
    int[] mNewItemStatuses -> c
    androidx.recyclerview.widget.DiffUtil$Callback mCallback -> d
    int mNewListSize -> f
    boolean mDetectMoves -> g
    int mOldListSize -> e
    567:579:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    586:596:void addRootSnake() -> a
    646:650:void findAddition(int,int,int) -> a
    723:766:boolean findMatchingItem(int,int,int,boolean) -> a
    802:803:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    816:853:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> a
    857:868:androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> a
    873:909:void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> a
    610:643:void findMatchingItems() -> b
    653:657:void findRemoval(int,int,int) -> b
    913:950:void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> b
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.f$d:
    int currentPos -> b
    boolean removal -> c
    int posInOwnerList -> a
    973:977:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.f$e:
    int newListEnd -> d
    int oldListEnd -> b
    int newListStart -> c
    int oldListStart -> a
    482:483:void <init>() -> <init>
    485:490:void <init>(int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.f$f:
    boolean reverse -> e
    int y -> b
    int size -> c
    int x -> a
    boolean removal -> d
    442:442:void <init>() -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.g:
    int mHorizontalThumbWidth -> n
    int mVerticalThumbCenterY -> l
    int[] mHorizontalRange -> y
    int mHorizontalTrackHeight -> j
    int mVerticalTrackWidth -> f
    boolean mNeedHorizontalScrollbar -> u
    int mMargin -> b
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mOnScrollListener -> C
    int mAnimationState -> A
    java.lang.Runnable mHideRunnable -> B
    int[] EMPTY_STATE_SET -> E
    int mDragState -> w
    float mVerticalDragY -> m
    int mRecyclerViewWidth -> q
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> d
    int mHorizontalThumbCenterX -> o
    int[] mVerticalRange -> x
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> s
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> h
    int mVerticalThumbHeight -> k
    android.animation.ValueAnimator mShowHideAnimator -> z
    int mHorizontalThumbHeight -> i
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> c
    int mVerticalThumbWidth -> e
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> g
    int mScrollbarMinimumRange -> a
    boolean mNeedVerticalScrollbar -> t
    int[] PRESSED_STATE_SET -> D
    int mState -> v
    float mHorizontalDragX -> p
    int mRecyclerViewHeight -> r
    74:75:void <clinit>() -> <clinit>
    141:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    191:192:void requestRedraw() -> a
    244:255:void hide(int) -> a
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> a
    339:375:void updateScrollPosition(int,int) -> a
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> a
    461:475:void horizontalScrollTo(float) -> a
    479:490:int scrollTo(float,float,int[],int,int,int) -> a
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> a
    195:213:void setState(int) -> b
    228:240:void show() -> b
    268:277:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> b
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> b
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
    446:458:void verticalScrollTo(float) -> b
    496:496:boolean isPointInsideVerticalThumb(float,float) -> b
    258:259:void cancelHide() -> c
    262:264:void resetHideDelay(int) -> c
    183:187:void destroyCallbacks() -> d
    542:544:int[] getHorizontalRange() -> e
    533:535:int[] getVerticalRange() -> f
    216:216:boolean isLayoutRTL() -> g
    177:180:void setupCallbacks() -> h
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.g$a:
    androidx.recyclerview.widget.FastScroller this$0 -> d
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.g$b:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.g$c:
    androidx.recyclerview.widget.FastScroller this$0 -> b
    boolean mCanceled -> a
    551:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.g$d:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.h:
    long mFrameIntervalNs -> f
    long mPostTimeNs -> e
    java.util.Comparator sTaskComparator -> i
    java.util.ArrayList mTasks -> g
    java.lang.ThreadLocal sGapWorker -> h
    java.util.ArrayList mRecyclerViews -> d
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> a
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    217:262:void buildTaskList() -> a
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> a
    279:305:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> a
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> a
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> a
    367:369:void prefetch(long) -> a
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> b
    356:364:void flushTasksWithDeadline(long) -> b
    374:404:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.h$a:
    190:190:void <init>() -> <init>
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> a
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.h$b:
    int[] mPrefetchArray -> c
    int mCount -> d
    int mPrefetchDy -> b
    int mPrefetchDx -> a
    65:65:void <init>() -> <init>
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> a
    112:113:void addPosition(int,int) -> a
    139:145:boolean lastPrefetchIncludedPosition(int) -> a
    152:156:void clearPrefetchPositions() -> a
    74:76:void setPrefetchVector(int,int) -> b
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.h$c:
    androidx.recyclerview.widget.RecyclerView view -> d
    int position -> e
    boolean immediate -> a
    int viewVelocity -> b
    int distanceToItem -> c
    38:38:void <init>() -> <init>
    46:51:void clear() -> a
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    android.graphics.Rect mDecorInsets -> P
    boolean mPendingSpanCountChange -> I
    int mSpanCount -> J
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> M
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> N
    android.view.View[] mSet -> L
    androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> O
    boolean mUsingSpansToEstimateScrollBarDimensions -> Q
    int[] mCachedBorders -> K
    73:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1192:1192:boolean supportsPredictiveItemAnimations() -> D
    191:198:void cachePreLayoutSpanMapping() -> M
    186:188:void clearPreLayoutSpanMappingCache() -> N
    370:373:void ensureViewSet() -> O
    282:288:void updateMeasurements() -> P
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    147:165:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    202:204:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    221:223:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> a
    227:229:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> a
    244:244:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    249:252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    258:258:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    292:310:void setMeasuredDimension(android.graphics.Rect,int,int) -> a
    327:346:int[] calculateItemBorders(int[],int,int) -> a
    361:367:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> a
    378:380:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    423:452:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> a
    457:469:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    517:527:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    532:706:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> a
    718:739:void measureChild(android.view.View,int,boolean) -> a
    752:755:void guessMeasurement(float,int) -> a
    759:769:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    777:794:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> a
    1070:1187:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    108:109:void setStackFromEnd(boolean) -> b
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    214:216:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> b
    386:388:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    393:418:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> b
    473:490:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> b
    1215:1218:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> b
    233:237:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> c
    494:511:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> c
    1197:1200:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    208:210:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> d
    169:177:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> e
    1224:1227:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    350:354:int getSpaceForSpanRange(int,int) -> f
    1206:1209:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> f
    181:183:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> g
    1306:1307:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> i
    1273:1274:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> j
    816:821:void setSpanCount(int) -> l
    316:317:void calculateItemBorders(int) -> m
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$a:
    1350:1350:void <init>() -> <init>
    1354:1354:int getSpanSize(int) -> a
    1359:1359:int getSpanIndex(int,int) -> d
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$b:
    int mSpanSize -> f
    int mSpanIndex -> e
    1382:1383:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1386:1387:void <init>(int,int) -> <init>
    1390:1391:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1394:1395:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1416:1416:int getSpanIndex() -> e
    1426:1426:int getSpanSize() -> f
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$c:
    android.util.SparseIntArray mSpanIndexCache -> a
    android.util.SparseIntArray mSpanGroupIndexCache -> b
    boolean mCacheSpanIndices -> c
    boolean mCacheSpanGroupIndices -> d
    836:842:void <init>() -> <init>
    int getSpanSize(int) -> a
    897:898:void invalidateSpanGroupIndexCache() -> a
    932:941:int getCachedSpanGroupIndex(int,int) -> a
    999:1017:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> a
    889:890:void invalidateSpanIndexCache() -> b
    919:928:int getCachedSpanIndex(int,int) -> b
    1031:1063:int getSpanGroupIndex(int,int) -> c
    int getSpanIndex(int,int) -> d
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler -> androidx.recyclerview.widget.i:
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.j:
    boolean mInfinite -> i
    int mStartLine -> f
    int mEndLine -> g
    int mItemDirection -> d
    int mLayoutDirection -> e
    boolean mStopInFocusable -> h
    boolean mRecycle -> a
    int mAvailable -> b
    int mCurrentPosition -> c
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> u
    boolean mLastStackFromEnd -> v
    androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> E
    int mInitialPrefetchItemCount -> G
    boolean mReverseLayout -> w
    boolean mShouldReverseLayout -> x
    int mPendingScrollPositionOffset -> B
    androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult -> F
    int mPendingScrollPosition -> A
    int[] mReusableIntPair -> H
    boolean mStackFromEnd -> y
    boolean mSmoothScrollbarEnabled -> z
    androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState -> t
    androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState -> D
    int mOrientation -> s
    boolean mRecycleChildrenOnDetach -> C
    159:160:void <init>(android.content.Context) -> <init>
    169:172:void <init>(android.content.Context,int,boolean) -> <init>
    183:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1700:1700:boolean shouldMeasureTwice() -> B
    2150:2150:boolean supportsPredictiveItemAnimations() -> D
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> E
    1040:1043:void ensureLayoutState() -> F
    1923:1924:int findFirstVisibleItemPosition() -> G
    1963:1964:int findLastVisibleItemPosition() -> H
    330:330:int getOrientation() -> I
    1036:1036:boolean isLayoutRTL() -> J
    1223:1223:boolean isSmoothScrollbarEnabled() -> K
    1271:1271:boolean resolveIsInfinite() -> L
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> M
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> N
    1885:1885:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> O
    1892:1892:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> P
    1771:1771:android.view.View getChildClosestToEnd() -> Q
    1761:1761:android.view.View getChildClosestToStart() -> R
    362:367:void resolveShouldLayoutReverse() -> S
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    279:288:void onRestoreInstanceState(android.os.Parcelable) -> a
    295:295:boolean canScrollHorizontally() -> a
    394:400:void setReverseLayout(boolean) -> a
    482:497:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> a
    502:506:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> a
    743:743:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> a
    834:867:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    875:876:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    961:966:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1007:1008:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> a
    1229:1268:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> a
    1277:1281:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    1288:1314:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    1368:1371:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    1409:1412:void assertNotInLayoutOrScroll(java.lang.String) -> a
    1421:1436:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> a
    1546:1547:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> a
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1627:1696:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> a
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> a
    1855:1879:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> a
    1990:2004:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> a
    2041:2081:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    303:303:boolean canScrollVertically() -> b
    310:316:void setStackFromEnd(boolean) -> b
    755:757:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> b
    806:824:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> b
    986:992:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> b
    1021:1022:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> b
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> b
    1502:1532:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> b
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> b
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> c
    407:420:android.view.View findViewByPosition(int) -> c
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    1382:1383:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    1453:1484:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> c
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> d
    537:721:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> e
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    2012:2031:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> e
    1011:1018:void updateLayoutStateToFillEnd(int,int) -> f
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> f
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> f
    725:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> g
    1025:1033:void updateLayoutStateToFillStart(int,int) -> g
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> g
    447:450:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> h
    1823:1823:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> h
    1070:1076:void scrollToPosition(int) -> i
    1173:1177:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> i
    1840:1840:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> i
    1162:1166:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> j
    1716:1723:int convertFocusDirectionToLayoutDirection(int) -> j
    340:353:void setOrientation(int) -> k
    1184:1188:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> k
    192:192:boolean isAutoMeasureEnabled() -> v
    252:274:android.os.Parcelable onSaveInstanceState() -> y
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$a:
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> a
    boolean mValid -> e
    int mPosition -> b
    int mCoordinate -> c
    boolean mLayoutFromEnd -> d
    2452:2454:void <init>() -> <init>
    2468:2471:void assignCoordinateFromPadding() -> a
    2484:2485:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> a
    2537:2545:void assignFromView(android.view.View,int) -> a
    2457:2461:void reset() -> b
    2490:2534:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> b
    2475:2475:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$b:
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    int mConsumed -> a
    boolean mFocusable -> d
    2548:2548:void <init>() -> <init>
    2555:2559:void resetInternal() -> a
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$c:
    boolean mInfinite -> m
    boolean mIsPreLayout -> j
    int mLastScrollDelta -> k
    int mExtraFillSpace -> h
    int mNoRecycleSpace -> i
    int mLayoutDirection -> f
    int mScrollingOffset -> g
    int mCurrentPosition -> d
    int mItemDirection -> e
    int mOffset -> b
    int mAvailable -> c
    boolean mRecycle -> a
    java.util.List mScrapList -> l
    2192:2278:void <init>() -> <init>
    2289:2289:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    2299:2304:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    2331:2332:void assignPositionFromScrapList() -> a
    2335:2342:void assignPositionFromScrapList(android.view.View) -> a
    2315:2327:android.view.View nextViewFromScrapList() -> b
    2345:2370:android.view.View nextViewInLimitedList(android.view.View) -> b
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    boolean mAnchorLayoutFromEnd -> f
    int mAnchorPosition -> d
    int mAnchorOffset -> e
    2428:2428:void <clinit>() -> <clinit>
    2392:2394:void <init>() -> <init>
    2396:2400:void <init>(android.os.Parcel) -> <init>
    2402:2406:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2409:2409:boolean hasValidAnchor() -> b
    2413:2414:void invalidateAnchor() -> c
    2418:2418:int describeContents() -> describeContents
    2423:2426:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$a:
    2429:2429:void <init>() -> <init>
    2429:2429:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2432:2432:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2429:2429:java.lang.Object[] newArray(int) -> newArray
    2437:2437:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.k:
    boolean mHasCalculatedMillisPerPixel -> m
    android.view.animation.LinearInterpolator mLinearInterpolator -> i
    int mInterimTargetDx -> o
    android.util.DisplayMetrics mDisplayMetrics -> l
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> j
    android.graphics.PointF mTargetVector -> k
    float mMillisPerPixel -> n
    int mInterimTargetDy -> p
    93:95:void <init>(android.content.Context) -> <init>
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> a
    244:249:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    280:282:int calculateDtToFit(int,int,int,int,int) -> a
    339:341:int calculateDxToMakeVisible(android.view.View,int) -> a
    266:271:int clampApplyScroll(int,int) -> b
    314:316:int calculateDyToMakeVisible(android.view.View,int) -> b
    191:191:int calculateTimeForDeceleration(int) -> d
    205:205:int calculateTimeForScrolling(int) -> e
    103:103:void onStart() -> f
    151:153:void onStop() -> g
    218:218:int getHorizontalSnapPreference() -> i
    232:232:int getVerticalSnapPreference() -> j
    170:174:float getSpeedPerPixel() -> k
androidx.recyclerview.widget.ListUpdateCallback -> androidx.recyclerview.widget.l:
    void onChanged(int,int,java.lang.Object) -> a
    void onRemoved(int,int) -> a
    void onInserted(int,int) -> b
    void onMoved(int,int) -> c
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.m:
    androidx.recyclerview.widget.OpReorderer$Callback mCallback -> a
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    33:36:void reorderOps(java.util.List) -> a
    39:52:void swapMoveOp(java.util.List,int,int) -> a
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    213:224:int getLastMoveOutOfOrder(java.util.List) -> b
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
androidx.recyclerview.widget.OpReorderer$Callback -> androidx.recyclerview.widget.m$a:
    androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.n:
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int mLastTotalSpace -> b
    android.graphics.Rect mTmpRect -> c
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    46:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    int getDecoratedEnd(android.view.View) -> a
    int getEnd() -> a
    void offsetChildren(int) -> a
    241:243:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> a
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    int getDecoratedMeasurement(android.view.View) -> b
    int getEndAfterPadding() -> b
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    int getDecoratedMeasurementInOther(android.view.View) -> c
    int getEndPadding() -> c
    int getDecoratedStart(android.view.View) -> d
    int getMode() -> d
    int getModeInOther() -> e
    int getTransformedEndWithDecoration(android.view.View) -> e
    int getStartAfterPadding() -> f
    int getTransformedStartWithDecoration(android.view.View) -> f
    int getTotalSpace() -> g
    78:78:int getTotalSpaceChange() -> h
    64:65:void onLayoutComplete() -> i
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.n$a:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    266:266:int getEnd() -> a
    271:272:void offsetChildren(int) -> a
    297:299:int getDecoratedEnd(android.view.View) -> a
    261:261:int getEndAfterPadding() -> b
    281:283:int getDecoratedMeasurement(android.view.View) -> b
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> c
    334:334:int getEndPadding() -> c
    304:306:int getDecoratedStart(android.view.View) -> d
    339:339:int getMode() -> d
    311:312:int getTransformedEndWithDecoration(android.view.View) -> e
    344:344:int getModeInOther() -> e
    276:276:int getStartAfterPadding() -> f
    317:318:int getTransformedStartWithDecoration(android.view.View) -> f
    323:323:int getTotalSpace() -> g
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.n$b:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    364:364:int getEnd() -> a
    369:370:void offsetChildren(int) -> a
    395:397:int getDecoratedEnd(android.view.View) -> a
    359:359:int getEndAfterPadding() -> b
    379:381:int getDecoratedMeasurement(android.view.View) -> b
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> c
    432:432:int getEndPadding() -> c
    402:404:int getDecoratedStart(android.view.View) -> d
    437:437:int getMode() -> d
    409:410:int getTransformedEndWithDecoration(android.view.View) -> e
    442:442:int getModeInOther() -> e
    374:374:int getStartAfterPadding() -> f
    415:416:int getTransformedStartWithDecoration(android.view.View) -> f
    421:421:int getTotalSpace() -> g
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.o:
    androidx.recyclerview.widget.OrientationHelper mHorizontalHelper -> d
    androidx.recyclerview.widget.OrientationHelper mVerticalHelper -> c
    38:38:void <init>() -> <init>
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    82:140:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    199:207:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> a
    222:248:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> a
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> b
    169:172:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
    273:276:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> d
    253:258:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> e
    264:267:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> f
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> g
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.o$a:
    androidx.recyclerview.widget.PagerSnapHelper this$0 -> q
    172:172:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    175:183:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    187:187:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> a
    192:192:int calculateTimeForScrolling(int) -> e
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    float mScaledHorizontalScrollFactor -> e0
    androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper -> u0
    boolean mIsAttached -> u
    android.widget.EdgeEffect mRightGlow -> N
    android.view.animation.Interpolator sQuinticInterpolator -> K0
    java.util.List mPendingAccessibilityImportanceChange -> y0
    int mEatenAccessibilityChangeFlags -> C
    android.graphics.RectF mTempRectF -> n
    androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator -> P
    android.graphics.Rect mTempRect -> l
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> r0
    int mInterceptRequestLayoutDepth -> y
    int[] CLIP_TO_PADDING_ATTR -> C0
    java.lang.Runnable mUpdateChildViewsRunnable -> k
    boolean mDataSetHasChangedAfterLayout -> G
    int mInitialTouchX -> T
    androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> A0
    boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION -> H0
    androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState -> f
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> p0
    int mMaxFlingVelocity -> d0
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> E0
    boolean ALLOW_THREAD_GAP_WORK -> G0
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> o
    int[] mReusableIntPair -> x0
    boolean mClipToPadding -> j
    androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory -> K
    int[] mMinMaxLayoutPositions -> t0
    boolean mHasFixedSize -> v
    androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener -> b0
    int[] mScrollOffset -> v0
    android.widget.EdgeEffect mTopGlow -> M
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> l0
    android.graphics.Rect mTempRect2 -> m
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> J0
    java.util.List mOnChildAttachStateListeners -> F
    boolean mLayoutWasDefered -> z
    androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver -> d
    androidx.recyclerview.widget.ChildHelper mChildHelper -> h
    java.util.List mScrollListeners -> m0
    boolean mDispatchItemsChangedEvent -> H
    int mInitialTouchY -> U
    boolean mItemsAddedOrRemoved -> n0
    java.util.ArrayList mItemDecorations -> r
    boolean mAdapterUpdateDuringMeasure -> D
    int mScrollState -> Q
    float mScaledVerticalScrollFactor -> f0
    boolean mPreserveFocusAfterLayout -> g0
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout -> p
    java.lang.Runnable mItemAnimatorRunner -> z0
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener -> t
    int mLayoutOrScrollCounter -> I
    boolean mEnableFastScroller -> w
    androidx.recyclerview.widget.AdapterHelper mAdapterHelper -> g
    android.widget.EdgeEffect mLeftGlow -> L
    androidx.recyclerview.widget.RecyclerView$Recycler mRecycler -> e
    androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> s0
    int mLastTouchX -> V
    androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger -> h0
    java.util.ArrayList mOnItemTouchListeners -> s
    boolean mLayoutSuppressed -> A
    int mScrollPointerId -> R
    boolean IGNORE_DETACHED_FOCUSED_CHILD -> I0
    android.view.VelocityTracker mVelocityTracker -> S
    int[] NESTED_SCROLLING_ATTRS -> B0
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> D0
    int mMinFlingVelocity -> c0
    boolean POST_UPDATES_ON_ANIMATION -> F0
    int mTouchSlop -> a0
    int mDispatchScrollCounter -> J
    int[] mNestedOffsets -> w0
    android.widget.EdgeEffect mBottomGlow -> O
    androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener -> q
    boolean mFirstLayoutComplete -> x
    androidx.recyclerview.widget.GapWorker mGapWorker -> i0
    androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> j0
    boolean mPostedAnimatorRunner -> q0
    int mLastTouchY -> W
    boolean mItemsChanged -> o0
    androidx.recyclerview.widget.ViewInfoStore mViewInfoStore -> i
    boolean mIgnoreMotionEventTillDown -> B
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> E
    androidx.recyclerview.widget.RecyclerView$State mState -> k0
    218:596:void <clinit>() -> <clinit>
    644:645:void <init>(android.content.Context) -> <init>
    648:649:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    652:728:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    3581:3589:void dispatchContentChangedIfNecessary() -> A
    3939:4024:void dispatchLayoutStep1() -> B
    4031:4050:void dispatchLayoutStep2() -> C
    4057:4141:void dispatchLayoutStep3() -> D
    3808:3831:android.view.View findNextViewToFocus() -> E
    1908:1918:boolean hasUpdatedView() -> F
    749:753:void initAutofill() -> G
    847:967:void initChildrenHelper() -> H
    3677:3677:boolean predictiveItemAnimationsEnabled() -> I
    3687:3715:void processAdapterUpdatesAndSetAnimationFlags() -> J
    3835:3842:void recoverFocusFromState() -> K
    2472:2492:void releaseGlows() -> L
    3793:3796:void resetFocusInfo() -> M
    3341:3346:void resetScroll() -> N
    3772:3790:void saveFocusInfo() -> O
    2416:2420:void stopScrollersInternal() -> P
    209:209:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    209:209:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> a
    209:209:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> a
    209:209:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    784:834:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> a
    837:843:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> a
    1199:1218:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> a
    1570:1584:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> a
    1599:1600:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> a
    1831:1856:void scrollStep(int,int,int[]) -> a
    1933:1980:boolean scrollByInternal(int,int,android.view.MotionEvent) -> a
    2320:2337:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> a
    2445:2469:void pullGlows(float,float,float,float) -> a
    2518:2545:void absorbGlows(int,int) -> a
    2749:2750:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> a
    2824:2849:void requestChildOnScreen(android.view.View,android.view.View) -> a
    2963:2978:void assertNotInLayoutOrScroll(java.lang.String) -> a
    3033:3044:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> a
    3562:3574:void onExitLayoutOrScroll(boolean) -> a
    3623:3634:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    3921:3929:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> a
    4161:4188:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    4197:4204:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    4207:4230:void findMinMaxChildLayoutPositions(int[]) -> a
    4269:4273:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    4287:4305:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> a
    4460:4468:void clearOldPositions() -> a
    4523:4549:void offsetPositionRecordsForRemove(int,int,boolean) -> a
    4558:4577:void viewRangeUpdate(int,int,java.lang.Object) -> a
    4580:4580:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    4852:4874:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> a
    4892:4893:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> a
    5002:5008:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> a
    5100:5117:void dispatchOnScrollStateChanged(int) -> a
    7430:7441:void dispatchChildAttached(android.view.View) -> a
    11351:11357:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    11390:11393:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> a
    11463:11465:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> a
    11475:11475:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> a
    2858:2861:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1275:1279:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    2994:2995:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1708:1712:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    1652:1662:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> b
    1867:1871:void consumePendingUpdateOperations() -> b
    2495:2515:void considerReleasingGlowsOnScroll(int,int) -> b
    3062:3071:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> b
    4277:4282:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    4598:4601:void processDataSetCompletelyChanged(boolean) -> b
    4830:4847:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> b
    7416:7427:void dispatchChildDetached(android.view.View) -> b
    11378:11381:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1757:1766:void jumpToPositionForSmoothScroller(int) -> c
    2158:2189:void stopInterceptRequestLayout(boolean) -> c
    3354:3362:void onPointerUp(android.view.MotionEvent) -> c
    3512:3520:void defaultOnMeasure(int,int) -> c
    3743:3769:void dispatchLayout() -> c
    4264:4264:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    4698:4703:android.view.View findContainingItemView(android.view.View) -> c
    4406:4406:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2028:2031:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2003:2006:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2051:2054:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2100:2103:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2076:2079:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2123:2126:int computeVerticalScrollRange() -> computeVerticalScrollRange
    1433:1444:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    4716:4717:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> d
    4984:4988:void offsetChildrenHorizontal(int) -> d
    5060:5081:void dispatchOnScrolled(int,int) -> d
    11361:11375:void dispatchPendingImportantForAccessibilityChanges() -> d
    11481:11481:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11486:11486:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11469:11469:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11449:11449:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    3647:3648:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1421:1422:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1413:1414:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    4335:4392:void draw(android.graphics.Canvas) -> draw
    4936:4936:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2353:2400:boolean fling(int,int) -> e
    2588:2598:void ensureBottomGlow() -> e
    4744:4745:int getChildAdapterPosition(android.view.View) -> e
    4946:4950:void offsetChildrenVertical(int) -> e
    5743:5759:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    2548:2558:void ensureLeftGlow() -> f
    4505:4519:void offsetPositionRecordsForInsert(int,int) -> f
    4759:4760:int getChildLayoutPosition(android.view.View) -> f
    5095:5095:void onScrollStateChanged(int) -> f
    2663:2736:android.view.View focusSearch(android.view.View,int) -> focusSearch
    1743:1754:void scrollToPosition(int) -> g
    2561:2571:void ensureRightGlow() -> g
    4471:4502:void offsetPositionRecordsForMove(int,int) -> g
    4675:4680:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> g
    4411:4412:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4419:4420:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4427:4428:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    776:776:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1228:1228:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    1255:1258:int getBaseline() -> getBaseline
    13345:13348:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    1101:1101:boolean getClipToPadding() -> getClipToPadding
    761:761:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    2628:2628:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    3662:3662:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    1625:1625:int getItemDecorationCount() -> getItemDecorationCount
    1476:1476:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2438:2438:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2428:2428:int getMinFlingVelocity() -> getMinFlingVelocity
    5768:5771:long getNanoTime() -> getNanoTime
    1377:1377:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4647:4647:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1489:1489:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1537:1537:int getScrollState() -> getScrollState
    13375:13378:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    1784:1793:void smoothScrollToPosition(int) -> h
    2574:2585:void ensureTopGlow() -> h
    5011:5032:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> h
    5057:5057:void onScrolled(int,int) -> h
    11438:11438:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    735:735:java.lang.String exceptionLabel() -> i
    2308:2309:void smoothScrollBy(int,int) -> i
    4963:4963:void onChildAttachedToWindow(android.view.View) -> i
    11433:11434:void stopNestedScroll(int) -> i
    2934:2934:boolean isAttachedToWindow() -> isAttachedToWindow
    2244:2244:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11413:11413:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    4975:4975:void onChildDetachedFromWindow(android.view.View) -> j
    5133:5133:boolean hasPendingAdapterUpdates() -> j
    11423:11423:boolean startNestedScroll(int,int) -> j
    970:1050:void initAdapterManager() -> k
    1453:1465:boolean removeAnimatingView(android.view.View) -> k
    4233:4234:boolean didChildRangeChange(int,int) -> k
    2601:2602:void invalidateGlows() -> l
    5721:5736:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> l
    4624:4633:void invalidateItemDecorations() -> m
    4722:4725:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> m
    3577:3577:boolean isAccessibilityEnabled() -> n
    3909:3917:int getDeepestFocusedViewWithId(android.view.View) -> n
    3611:3611:boolean isComputingLayout() -> o
    2875:2905:void onAttachedToWindow() -> onAttachedToWindow
    2909:2927:void onDetachedFromWindow() -> onDetachedFromWindow
    4396:4402:void onDraw(android.graphics.Canvas) -> onDraw
    3366:3411:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3076:3180:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4309:4313:void onLayout(boolean,int,int,int,int) -> onLayout
    3416:3503:void onMeasure(int,int) -> onMeasure
    2865:2870:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1396:1406:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1382:1391:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    3524:3529:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3195:3196:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4325:4331:void markItemDecorInsetsDirty() -> p
    4608:4617:void markKnownViewsInvalid() -> q
    3554:3555:void onEnterLayoutOrScroll() -> r
    4240:4257:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1288:1292:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3003:3007:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1720:1723:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    2808:2812:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2853:2853:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3185:3191:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4317:4322:void requestLayout() -> requestLayout
    3558:3559:void onExitLayoutOrScroll() -> s
    1803:1816:void scrollBy(int,int) -> scrollBy
    1797:1799:void scrollTo(int,int) -> scrollTo
    3639:3643:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    770:772:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1162:1166:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1678:1683:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    1077:1085:void setClipToPadding(boolean) -> setClipToPadding
    2614:2617:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1064:1065:void setHasFixedSize(boolean) -> setHasFixedSize
    3543:3551:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1527:1528:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2273:2274:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1317:1356:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2292:2295:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11408:11409:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1367:1368:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1695:1696:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4665:4666:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1501:1502:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1242:1243:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1541:1553:void setScrollState(int) -> setScrollState
    1114:1128:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1512:1513:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    11418:11418:boolean startNestedScroll(int) -> startNestedScroll
    11428:11429:void stopNestedScroll() -> stopNestedScroll
    2217:2235:void suppressLayout(boolean) -> suppressLayout
    3670:3674:void postAnimationRunner() -> t
    1173:1186:void removeAndRecycleViews() -> u
    5405:5420:void repositionShadowingViews() -> v
    4446:4457:void saveOldPositions() -> w
    2141:2145:void startInterceptRequestLayout() -> x
    2408:2410:void stopScroll() -> y
    3349:3351:void cancelScroll() -> z
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$a:
    androidx.recyclerview.widget.RecyclerView this$0 -> d
    396:396:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    399:401:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$b:
    androidx.recyclerview.widget.RecyclerView this$0 -> d
    586:586:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    589:593:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$c:
    596:596:void <init>() -> <init>
    599:600:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$d:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    608:608:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    618:619:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    639:640:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    612:614:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    624:636:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$e:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    847:847:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    858:863:void addView(android.view.View,int) -> a
    892:892:android.view.View getChildAt(int) -> a
    897:908:void removeAllViews() -> a
    918:930:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    953:957:void onEnteredHiddenState(android.view.View) -> a
    850:850:int getChildCount() -> b
    872:888:void removeViewAt(int) -> b
    912:912:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    934:949:void detachViewFromParent(int) -> c
    961:965:void onLeftHiddenState(android.view.View) -> c
    867:867:int indexOfChild(android.view.View) -> d
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$f:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    970:970:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    973:985:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    1005:1007:void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    1034:1035:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    1045:1048:void offsetPositionsForMove(int,int) -> a
    990:993:void offsetPositionsForRemovingInvisible(int,int) -> b
    1011:1012:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    998:1000:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> c
    1015:1030:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    1039:1041:void offsetPositionsForAdd(int,int) -> d
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$g:
    androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable -> a
    boolean mHasStableIds -> b
    6863:6865:void <init>() -> <init>
    6944:6945:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> a
    6956:6966:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> a
    6978:6993:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    7020:7021:void setHasStableIds(boolean) -> a
    7036:7036:long getItemId(int) -> a
    7112:7112:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    7166:7167:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> a
    7192:7192:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    7277:7278:void notifyItemChanged(int,java.lang.Object) -> a
    7326:7327:void notifyItemRangeChanged(int,int,java.lang.Object) -> a
    7358:7359:void notifyItemMoved(int,int) -> a
    int getItemCount() -> b
    void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> b
    7008:7008:int getItemViewType(int) -> b
    7126:7126:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    7180:7181:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> b
    7201:7201:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> b
    7377:7378:void notifyItemRangeInserted(int,int) -> b
    7138:7138:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    7146:7146:boolean hasObservers() -> c
    7411:7412:void notifyItemRangeRemoved(int,int) -> c
    7054:7054:boolean hasStableIds() -> d
    7075:7075:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    7233:7234:void notifyDataSetChanged() -> e
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$h:
    12122:12122:void <init>() -> <init>
    12124:12124:boolean hasObservers() -> a
    12147:12150:void notifyItemRangeChanged(int,int,java.lang.Object) -> a
    12173:12176:void notifyItemMoved(int,int) -> a
    12132:12135:void notifyChanged() -> b
    12157:12160:void notifyItemRangeInserted(int,int) -> b
    12167:12170:void notifyItemRangeRemoved(int,int) -> c
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$i:
    11601:11601:void <init>() -> <init>
    11604:11604:void onChanged() -> a
    11608:11608:void onItemRangeChanged(int,int) -> a
    11613:11614:void onItemRangeChanged(int,int,java.lang.Object) -> a
    11626:11626:void onItemRangeMoved(int,int,int) -> a
    11618:11618:void onItemRangeInserted(int,int) -> b
    11622:11622:void onItemRangeRemoved(int,int) -> c
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> androidx.recyclerview.widget.RecyclerView$j:
    int onGetChildDrawingOrder(int,int) -> a
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$k:
    5484:5484:void <init>() -> <init>
    5515:5515:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$l:
    long mChangeDuration -> f
    long mMoveDuration -> e
    long mRemoveDuration -> d
    long mAddDuration -> c
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    12608:12671:void <init>() -> <init>
    boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    12754:12755:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> a
    12793:12793:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> a
    12822:12822:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    13212:13212:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> a
    13220:13225:void dispatchAnimationsFinished() -> a
    boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void endAnimations() -> b
    13077:13081:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    12697:12697:long getAddDuration() -> c
    12733:12733:long getChangeDuration() -> d
    13092:13092:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    12679:12679:long getMoveDuration() -> e
    12993:13004:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    12715:12715:long getRemoveDuration() -> f
    boolean isRunning() -> g
    13238:13238:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> h
    void runPendingAnimations() -> i
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> androidx.recyclerview.widget.RecyclerView$l$a:
    void onAnimationsFinished() -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$l$b:
    void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$l$c:
    int top -> b
    int left -> a
    13305:13306:void <init>() -> <init>
    13317:13317:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    13333:13338:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$m:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    12566:12567:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12571:12583:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$n:
    10582:10582:void <init>() -> <init>
    10593:10594:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    10602:10602:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> a
    10634:10635:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> a
    10659:10661:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    10615:10616:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> b
    10624:10624:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$o:
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback -> c
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback -> d
    boolean mPrefetchMaxObservedInInitialPrefetch -> n
    int mWidthMode -> o
    int mPrefetchMaxCountObserved -> m
    boolean mIsAttachedToWindow -> i
    boolean mAutoMeasure -> j
    androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller -> g
    boolean mMeasurementCacheEnabled -> k
    boolean mItemPrefetchEnabled -> l
    androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck -> e
    androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck -> f
    androidx.recyclerview.widget.ChildHelper mChildHelper -> a
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    boolean mRequestedSimpleAnimations -> h
    int mHeight -> r
    int mHeightMode -> p
    int mWidth -> q
    7459:7565:void <init>() -> <init>
    10349:10350:void requestSimpleAnimationsInNextLayout() -> A
    10542:10542:boolean shouldMeasureTwice() -> B
    10183:10186:void stopSmoothScroller() -> C
    7894:7894:boolean supportsPredictiveItemAnimations() -> D
    7713:7718:void setMeasuredDimension(android.graphics.Rect,int,int) -> a
    7753:7759:int chooseSize(int,int,int) -> a
    7774:7777:void assertNotInLayoutOrScroll(java.lang.String) -> a
    7959:7959:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    7987:7987:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    7990:7992:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> a
    7995:7997:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    8041:8044:boolean removeCallbacks(java.lang.Runnable) -> a
    8207:8207:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    8224:8229:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    8248:8248:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    8265:8265:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    8292:8292:boolean canScrollHorizontally() -> a
    8328:8329:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    8395:8396:void addDisappearingView(android.view.View) -> a
    8413:8414:void addDisappearingView(android.view.View,int) -> a
    8440:8491:void addViewInt(android.view.View,int,boolean) -> a
    8668:8669:void detachViewInternal(int,android.view.View) -> a
    8681:8691:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    8733:8736:void moveView(int,int) -> a
    8777:8779:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    8788:8791:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    9069:9074:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    9077:9093:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> a
    9184:9184:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    9246:9263:void measureChildWithMargins(android.view.View,int,int) -> a
    9323:9364:int getChildMeasureSpec(int,int,int,int,boolean) -> a
    9462:9467:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> a
    9482:9505:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> a
    9584:9590:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> a
    9677:9677:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    9763:9763:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> a
    9783:9794:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> a
    9821:9829:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> a
    9868:9868:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> a
    9890:9890:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> a
    9908:9908:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    9936:9936:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> a
    9960:9960:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    9997:9998:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> a
    10015:10015:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> a
    10030:10030:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> a
    10133:10134:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> a
    10180:10180:void onRestoreInstanceState(android.os.Parcelable) -> a
    10189:10192:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> a
    10225:10226:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10255:10270:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10274:10275:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    10290:10291:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> a
    10305:10311:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10330:10336:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10405:10406:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    10427:10427:boolean performAccessibilityAction(int,android.os.Bundle) -> a
    10443:10469:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> a
    10475:10475:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> a
    10496:10496:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> a
    10512:10521:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> a
    7634:7645:void setMeasureSpecs(int,int) -> b
    8062:8062:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> b
    8098:8099:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    8282:8282:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    8302:8302:boolean canScrollVertically() -> b
    8342:8348:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> b
    8424:8425:void addView(android.view.View) -> b
    8436:8437:void addView(android.view.View,int) -> b
    8661:8662:void detachViewAt(int) -> b
    9170:9170:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> b
    9217:9226:boolean isMeasurementUpToDate(int,int,int) -> b
    9515:9516:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> b
    9971:9971:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> b
    10045:10045:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> b
    10215:10221:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    10385:10386:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> c
    8071:8071:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> c
    8580:8590:android.view.View findContainingItemView(android.view.View) -> c
    8608:8620:android.view.View findViewByPosition(int) -> c
    8702:8703:void attachView(android.view.View,int) -> c
    9105:9132:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> c
    9711:9744:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> c
    9984:9984:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> c
    10060:10060:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    10144:10145:void setMeasuredDimension(int,int) -> c
    10369:10369:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    7661:7690:void setMeasuredDimensionFromChildren(int,int) -> d
    8539:8539:int getBaseline() -> d
    8810:8810:android.view.View getChildAt(int) -> d
    9619:9619:int getBottomDecorationHeight(android.view.View) -> d
    9698:9698:android.view.View onInterceptFocusSearch(android.view.View,int) -> d
    9843:9856:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> d
    9947:9947:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> d
    10075:10075:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> d
    10422:10422:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> d
    8162:8163:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> e
    8800:8800:int getChildCount() -> e
    9000:9003:void offsetChildrenHorizontal(int) -> e
    9563:9563:int getDecoratedBottom(android.view.View) -> e
    10090:10090:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    10525:10529:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> e
    7618:7631:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> f
    8107:8107:boolean getClipToPadding() -> f
    9012:9015:void offsetChildrenVertical(int) -> f
    9527:9527:int getDecoratedLeft(android.view.View) -> f
    10105:10105:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> f
    8177:8177:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> g
    8966:8971:android.view.View getFocusedChild() -> g
    9391:9392:int getDecoratedMeasuredHeight(android.view.View) -> g
    10200:10200:void onScrollStateChanged(int) -> g
    8514:8518:void removeViewAt(int) -> h
    8876:8876:int getHeight() -> h
    9377:9378:int getDecoratedMeasuredWidth(android.view.View) -> h
    8315:8315:void scrollToPosition(int) -> i
    8844:8844:int getHeightMode() -> i
    9551:9551:int getDecoratedRight(android.view.View) -> i
    8989:8990:int getItemCount() -> j
    9539:9539:int getDecoratedTop(android.view.View) -> j
    8366:8366:int getLayoutDirection() -> k
    9634:9634:int getLeftDecorationWidth(android.view.View) -> k
    8550:8550:int getPosition(android.view.View) -> l
    10160:10160:int getMinimumHeight() -> l
    9649:9649:int getRightDecorationWidth(android.view.View) -> m
    10152:10152:int getMinimumWidth() -> m
    8916:8916:int getPaddingBottom() -> n
    9604:9604:int getTopDecorationHeight(android.view.View) -> n
    8502:8503:void removeView(android.view.View) -> o
    8886:8886:int getPaddingLeft() -> o
    8906:8906:int getPaddingRight() -> p
    8896:8896:int getPaddingTop() -> q
    8860:8860:int getWidth() -> r
    8827:8827:int getWidthMode() -> s
    10546:10554:boolean hasFlexibleChildInBothOrientations() -> t
    8007:8007:boolean isAttachedToWindow() -> u
    7868:7868:boolean isAutoMeasureEnabled() -> v
    7935:7935:boolean isItemPrefetchEnabled() -> w
    8354:8354:boolean isSmoothScrolling() -> x
    10174:10174:android.os.Parcelable onSaveInstanceState() -> y
    7724:7727:void requestLayout() -> z
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$o$a:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7468:7468:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7471:7471:android.view.View getChildAt(int) -> a
    7481:7481:int getParentEnd() -> a
    7493:7495:int getChildEnd(android.view.View) -> a
    7476:7476:int getParentStart() -> b
    7486:7488:int getChildStart(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$o$b:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7504:7504:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7507:7507:android.view.View getChildAt(int) -> a
    7517:7517:int getParentEnd() -> a
    7530:7532:int getChildEnd(android.view.View) -> a
    7512:7512:int getParentStart() -> b
    7523:7525:int getChildStart(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> androidx.recyclerview.widget.RecyclerView$o$c:
    void addPosition(int,int) -> a
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$o$d:
    int spanCount -> b
    boolean reverseLayout -> c
    int orientation -> a
    boolean stackFromEnd -> d
    10560:10560:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$p:
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> a
    boolean mInsetsDirty -> c
    android.graphics.Rect mDecorInsets -> b
    boolean mPendingInvalidate -> d
    11505:11506:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11509:11510:void <init>(int,int) -> <init>
    11513:11514:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11517:11518:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11521:11522:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11581:11581:int getViewLayoutPosition() -> a
    11563:11563:boolean isItemChanged() -> b
    11552:11552:boolean isItemRemoved() -> c
    11541:11541:boolean isViewInvalid() -> d
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener -> androidx.recyclerview.widget.RecyclerView$q:
    void onChildViewAttachedToWindow(android.view.View) -> a
    void onChildViewDetachedFromWindow(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$r:
    12543:12543:void <init>() -> <init>
    boolean onFling(int,int) -> a
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$s:
    boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    void onRequestDisallowInterceptTouchEvent(boolean) -> a
    void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$t:
    10747:10747:void <init>() -> <init>
    10755:10755:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> a
    10768:10768:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$u:
    android.util.SparseArray mScrap -> a
    int mAttachCount -> b
    5527:5552:void <init>() -> <init>
    5596:5605:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> a
    5632:5642:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    5645:5648:long runningAverage(long,long) -> a
    5658:5661:void factorInBindTime(int,long) -> a
    5669:5670:boolean willBindInTime(int,long,long) -> a
    5674:5675:void attach() -> a
    5695:5704:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    5558:5562:void clear() -> b
    5652:5655:void factorInCreateTime(int,long) -> b
    5664:5665:boolean willCreateInTime(int,long,long) -> b
    5707:5712:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> b
    5678:5679:void detach() -> c
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$u$a:
    long mBindRunningAverageNs -> d
    long mCreateRunningAverageNs -> c
    int mMaxScrap -> b
    java.util.ArrayList mScrapHeap -> a
    5544:5548:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$v:
    androidx.recyclerview.widget.RecyclerView this$0 -> i
    java.util.List mUnmodifiableAttachedScrap -> d
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool -> g
    int mViewCacheMax -> f
    int mRequestedCacheMax -> e
    java.util.ArrayList mCachedViews -> c
    androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> h
    java.util.ArrayList mChangedScrap -> b
    java.util.ArrayList mAttachedScrap -> a
    5788:5798:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5811:5813:void clear() -> a
    5895:5910:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> a
    5979:5981:int convertPreLayoutPositionToPostLayout(int) -> a
    6033:6036:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> a
    6215:6233:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> a
    6412:6422:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    6430:6435:void quickRecycleScrapView(android.view.View) -> a
    6537:6587:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> a
    6592:6640:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> a
    6644:6654:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    6658:6660:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    6692:6703:void offsetPositionRecordsForInsert(int,int) -> a
    6712:6731:void offsetPositionRecordsForRemove(int,int,boolean) -> a
    6734:6735:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> a
    6738:6745:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> a
    6009:6009:android.view.View getViewForPosition(int,boolean) -> b
    6248:6275:void recycleView(android.view.View) -> b
    6317:6321:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    6501:6502:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> b
    6664:6689:void offsetPositionRecordsForMove(int,int) -> b
    6790:6805:void clearOldPositions() -> b
    6447:6464:void scrapView(android.view.View) -> c
    6473:6481:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    6488:6488:android.view.View getScrapViewAt(int) -> c
    6492:6496:void clearScrap() -> c
    6755:6771:void viewRangeUpdate(int,int) -> c
    5857:5866:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    6005:6005:android.view.View getViewForPosition(int) -> d
    6748:6751:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> d
    6190:6206:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    6303:6309:void recycleCachedViewAt(int) -> e
    6484:6484:int getScrapCount() -> e
    5821:5823:void setViewCacheSize(int) -> f
    5843:5843:java.util.List getScrapList() -> f
    6209:6212:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    6808:6816:void markItemDecorInsetsDirty() -> g
    6774:6787:void markKnownViewsInvalid() -> h
    6278:6286:void recycleAndClearCachedViews() -> i
    5826:5834:void updateViewCacheSize() -> j
androidx.recyclerview.widget.RecyclerView$RecyclerListener -> androidx.recyclerview.widget.RecyclerView$w:
    void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$x:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    5423:5424:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5428:5435:void onChanged() -> a
    5439:5443:void onItemRangeChanged(int,int,java.lang.Object) -> a
    5463:5467:void onItemRangeMoved(int,int,int) -> a
    5447:5451:void onItemRangeInserted(int,int) -> b
    5470:5476:void triggerUpdateProcessor() -> b
    5455:5459:void onItemRangeRemoved(int,int) -> c
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> f
    12214:12214:void <clinit>() -> <clinit>
    12192:12195:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12201:12202:void <init>(android.os.Parcelable) -> <init>
    12211:12212:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> a
    12206:12208:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$a:
    12214:12214:void <init>() -> <init>
    12214:12214:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12214:12214:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12217:12217:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12222:12222:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12214:12214:java.lang.Object[] newArray(int) -> newArray
    12227:12227:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$y:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    boolean mRunning -> e
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> c
    boolean mStarted -> h
    int mTargetPosition -> a
    boolean mPendingInitialRun -> d
    android.view.View mTargetView -> f
    androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> g
    11656:11658:void <init>() -> <init>
    void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    11675:11687:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    11715:11722:android.graphics.PointF computeScrollVectorForPosition(int) -> a
    11787:11832:void onAnimation(int,int) -> a
    11838:11838:int getChildPosition(android.view.View) -> a
    11845:11845:int getChildCount() -> a
    11878:11882:void normalize(android.graphics.PointF) -> a
    11731:11731:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> b
    11852:11852:android.view.View findViewByPosition(int) -> b
    11865:11871:void onChildAttachedToWindow(android.view.View) -> b
    11700:11701:void setTargetPosition(int) -> c
    11783:11783:int getTargetPosition() -> c
    11765:11765:boolean isPendingInitialRun() -> d
    11773:11773:boolean isRunning() -> e
    void onStart() -> f
    void onStop() -> g
    11741:11755:void stop() -> h
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$y$a:
    android.view.animation.Interpolator mInterpolator -> e
    boolean mChanged -> f
    int mConsecutiveUpdates -> g
    int mJumpToPosition -> d
    int mDy -> b
    int mDuration -> c
    int mDx -> a
    11950:11951:void <init>(int,int) -> <init>
    11970:11975:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    11993:11994:void jumpTo(int) -> a
    11997:11997:boolean hasJumpTarget() -> a
    12001:12022:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> a
    12088:12093:void update(int,int,int,android.view.animation.Interpolator) -> a
    12025:12029:void validate() -> b
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> androidx.recyclerview.widget.RecyclerView$y$b:
    android.graphics.PointF computeScrollVectorForPosition(int) -> a
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$z:
    int mFocusedSubChildId -> o
    int mFocusedItemPosition -> m
    boolean mTrackOldChangeHolders -> i
    boolean mIsMeasuring -> j
    boolean mRunSimpleAnimations -> k
    boolean mRunPredictiveAnimations -> l
    int mItemCount -> f
    int mDeletedInvisibleItemCountSincePreviousLayout -> d
    int mLayoutStep -> e
    int mPreviousLayoutItemCount -> c
    int mTargetPosition -> a
    android.util.SparseArray mData -> b
    boolean mStructureChanged -> g
    boolean mInPreLayout -> h
    long mFocusedItemId -> n
    int mRemainingScrollHorizontal -> p
    int mRemainingScrollVertical -> q
    12242:12313:void <init>() -> <init>
    12248:12251:void assertLayoutStep(int) -> a
    12339:12344:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    12491:12491:int getItemCount() -> a
    12446:12446:int getTargetScrollPosition() -> b
    12455:12455:boolean hasTargetScrollPosition() -> c
    12370:12370:boolean isPreLayout() -> d
    12381:12381:boolean willRunPredictiveAnimations() -> e
    12520:12520:java.lang.String toString() -> toString
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$a0:
    android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> a
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$b0:
    boolean mReSchedulePostAnimationCallback -> i
    int mLastFlingX -> d
    android.widget.OverScroller mOverScroller -> f
    android.view.animation.Interpolator mInterpolator -> g
    int mLastFlingY -> e
    boolean mEatRunOnAnimationRequest -> h
    androidx.recyclerview.widget.RecyclerView this$0 -> j
    5149:5151:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5306:5311:void postOnAnimation() -> a
    5319:5331:void fling(int,int) -> a
    5337:5366:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> a
    5369:5371:float distanceInfluenceForSnapDuration(float) -> a
    5375:5393:int computeScrollDuration(int,int,int,int) -> a
    5397:5399:void stop() -> b
    5314:5316:void internalPostOnAnimation() -> c
    5155:5303:void run() -> run
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$c0:
    boolean mInChangeScrap -> o
    int mIsRecyclableCount -> m
    int mFlags -> j
    long mItemId -> e
    androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView -> r
    java.util.List FULLUPDATE_PAYLOADS -> s
    int mItemViewType -> f
    int mPreLayoutPosition -> g
    int mOldPosition -> d
    int mPosition -> c
    androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer -> n
    android.view.View itemView -> a
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder -> h
    java.lang.ref.WeakReference mNestedRecyclerView -> b
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder -> i
    java.util.List mUnmodifiedPayloads -> l
    int mWasImportantForAccessibilityBeforeHidden -> p
    java.util.List mPayloads -> k
    int mPendingAccessibilityState -> q
    10942:10942:void <clinit>() -> <clinit>
    10969:10971:void <init>(android.view.View) -> <init>
    11122:11122:boolean wasReturnedFromScrap() -> A
    11192:11196:void createPayloadsIfNeeded() -> B
    10977:10980:void flagRemovedAndOffsetPosition(int,int,boolean) -> a
    10983:10996:void offsetPosition(int,boolean) -> a
    10999:11001:void clearOldPosition() -> a
    11138:11140:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> a
    11175:11176:void setFlags(int,int) -> a
    11179:11180:void addFlags(int) -> a
    11183:11189:void addChangePayload(java.lang.Object) -> a
    11239:11247:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> a
    11295:11312:void setIsRecyclable(boolean) -> a
    11159:11159:boolean hasAnyOfTheFlags(int) -> b
    11199:11203:void clearPayload() -> b
    11253:11256:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> b
    11126:11127:void clearReturnedFromScrapFlag() -> c
    11130:11131:void clearTmpDetachFlag() -> d
    11337:11337:boolean doesTransientStatePreventRecycling() -> e
    11075:11078:int getAdapterPosition() -> f
    11103:11103:long getItemId() -> g
    11110:11110:int getItemViewType() -> h
    11049:11049:int getLayoutPosition() -> i
    11093:11093:int getOldPosition() -> j
    11206:11215:java.util.List getUnmodifiedPayloads() -> k
    11171:11171:boolean isAdapterPositionUnknown() -> l
    11167:11167:boolean isAttachedToTransitionOverlay() -> m
    11151:11151:boolean isBound() -> n
    11143:11143:boolean isInvalid() -> o
    11320:11320:boolean isRecyclable() -> p
    11155:11155:boolean isRemoved() -> q
    11114:11114:boolean isScrap() -> r
    11163:11163:boolean isTmpDetached() -> s
    11341:11341:boolean isUpdated() -> t
    11260:11278:java.lang.String toString() -> toString
    11147:11147:boolean needsUpdate() -> u
    11220:11232:void resetInternal() -> v
    11004:11007:void saveOldPosition() -> w
    11329:11329:boolean shouldBeKeptAsChild() -> x
    11010:11010:boolean shouldIgnore() -> y
    11118:11119:void unScrap() -> z
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.p:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> d
    androidx.core.view.AccessibilityDelegateCompat mItemDelegate -> e
    37:40:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    48:55:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    60:64:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    68:75:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    84:84:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> b
    43:43:boolean shouldIgnore() -> c
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.p$a:
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> d
    103:105:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    109:115:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    119:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.q:
    32:34:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> a
    63:65:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> a
    82:84:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> b
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.r:
    boolean mSupportsChangeAnimations -> g
    35:41:void <init>() -> <init>
    boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> b
    133:138:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> c
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> d
    boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> i
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> j
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> k
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> l
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> m
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> n
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> o
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> p
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> q
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> r
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> s
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.s:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> b
    34:42:void <init>() -> <init>
    int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    65:74:boolean onFling(int,int) -> a
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    182:197:void snapToTargetExistingView() -> a
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    123:125:void destroyCallbacks() -> b
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> b
    android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
    112:113:void setupCallbacks() -> c
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.s$a:
    boolean mScrolled -> a
    androidx.recyclerview.widget.SnapHelper this$0 -> b
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> a
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    boolean mLaidOutInvalidFullSpan -> M
    boolean mSmoothScrollbarEnabled -> N
    androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> I
    int mFullSizeSpec -> J
    androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation -> u
    int mGapStrategy -> F
    androidx.recyclerview.widget.LayoutState mLayoutState -> y
    int mPendingScrollPositionOffset -> D
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> E
    int mPendingScrollPosition -> C
    androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation -> v
    android.graphics.Rect mTmpRect -> K
    boolean mReverseLayout -> z
    int mSizePerSpan -> x
    int mOrientation -> w
    int[] mPrefetchDistances -> O
    boolean mLastLayoutFromEnd -> G
    boolean mLastLayoutRTL -> H
    androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> L
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans -> t
    boolean mShouldReverseLayout -> A
    int mSpanCount -> s
    java.util.BitSet mRemainingSpans -> B
    java.lang.Runnable mCheckForGapsRunnable -> P
    230:237:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    936:936:boolean supportsPredictiveItemAnimations() -> D
    1868:1874:boolean areAllEndsEqual() -> E
    1878:1884:boolean areAllStartsEqual() -> F
    271:272:boolean checkForGaps() -> G
    1330:1332:int findFirstVisibleItemPositionInt() -> H
    2211:2212:int getFirstChildPosition() -> I
    2206:2207:int getLastChildPosition() -> J
    340:400:android.view.View hasGapsToFix() -> K
    550:552:void invalidateSpanAssignments() -> L
    569:569:boolean isLayoutRTL() -> M
    259:262:void createOrientationHelpers() -> N
    735:781:void repositionToWrapContentIfNecessary() -> O
    561:566:void resolveShouldLayoutReverse() -> P
    404:417:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    529:532:void assertNotInLayoutOrScroll(java.lang.String) -> a
    588:602:void setMeasuredDimension(android.graphics.Rect,int,int) -> a
    787:820:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    850:851:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    1089:1089:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> a
    1129:1190:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> a
    1194:1207:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    1223:1229:void onRestoreInstanceState(android.os.Parcelable) -> a
    1284:1301:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1305:1322:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    1347:1350:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    1390:1409:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> a
    1414:1423:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1510:1511:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    1521:1522:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> a
    1527:1528:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> a
    1578:1731:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> a
    1753:1766:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> a
    1769:1770:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> a
    1831:1843:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> a
    1939:1967:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> a
    1983:2019:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> a
    2030:2030:boolean canScrollHorizontally() -> a
    2036:2036:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    2055:2067:android.graphics.PointF computeScrollVectorForPosition(int) -> a
    2073:2076:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    2126:2129:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    2163:2175:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> a
    2262:2262:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    2267:2270:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    2276:2276:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    2287:2381:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    324:332:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    823:834:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> b
    1069:1069:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> b
    1338:1341:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    1360:1380:android.view.View findFirstVisibleItemClosestToStart(boolean) -> b
    1433:1442:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> b
    1451:1479:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> b
    1505:1506:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> b
    1534:1574:void handleUpdate(int,int,int) -> b
    1910:1936:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> b
    2025:2025:boolean canScrollVertically() -> b
    2042:2042:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    478:484:void setReverseLayout(boolean) -> c
    612:723:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> c
    841:845:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> c
    1109:1109:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    1210:1215:int updateSpecWithExtra(int,int,int) -> c
    2178:2179:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    2251:2255:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> c
    1104:1104:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> d
    1515:1517:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> d
    606:607:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> e
    1084:1084:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    1489:1493:void offsetChildrenHorizontal(int) -> e
    1822:1828:void updateAllRemainingSpans(int,int) -> e
    1124:1124:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> f
    1497:1501:void offsetChildrenVertical(int) -> f
    317:320:void onScrollStateChanged(int) -> g
    727:732:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> g
    1093:1096:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> h
    1073:1076:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> i
    2080:2086:void scrollToPosition(int) -> i
    450:462:void setOrientation(int) -> j
    1113:1116:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> j
    430:441:void setSpanCount(int) -> k
    928:932:void updateMeasureSpecs(int) -> l
    2046:2050:int calculateScrollDirectionForPosition(int) -> m
    2395:2402:int convertFocusDirectionToLayoutDirection(int) -> n
    1735:1740:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> o
    1744:1749:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> p
    1809:1812:void appendViewToAllSpans(android.view.View) -> p
    1816:1819:void prependViewToAllSpans(android.view.View) -> q
    2221:2229:int findFirstReferenceChildPosition(int) -> q
    2238:2245:int findLastReferenceChildPosition(int) -> r
    1888:1895:int getMaxEnd(int) -> s
    1846:1853:int getMaxStart(int) -> t
    1899:1906:int getMinEnd(int) -> u
    255:255:boolean isAutoMeasureEnabled() -> v
    1857:1864:int getMinStart(int) -> v
    1973:1976:boolean preferLastSpan(int) -> w
    1482:1485:void setLayoutStateDirection(int) -> x
    1233:1278:android.os.Parcelable onSaveInstanceState() -> y
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$a:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> d
    217:217:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    220:221:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$b:
    int[] mSpanReferenceLines -> f
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> g
    boolean mValid -> e
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    int mPosition -> a
    boolean mInvalidateOffsets -> d
    3270:3272:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3286:3294:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> a
    3297:3299:void assignCoordinateFromPadding() -> a
    3302:3307:void assignCoordinateFromPadding(int) -> a
    3275:3283:void reset() -> b
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$c:
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan -> e
    boolean mFullSpan -> f
    2453:2454:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2457:2458:void <init>(int,int) -> <init>
    2461:2462:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2465:2466:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2501:2504:int getSpanIndex() -> e
    2491:2491:boolean isFullSpan() -> f
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    java.util.List mFullSpanItems -> b
    int[] mData -> a
    2841:2841:void <init>() -> <init>
    2893:2895:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    2906:2915:void ensureSize(int) -> a
    2918:2922:void clear() -> a
    2955:2956:void offsetForAddition(int,int) -> a
    3010:3030:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> a
    3054:3069:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> a
    2852:2860:int forceInvalidateAfter(int) -> b
    2925:2926:void offsetForRemoval(int,int) -> b
    2967:2977:void offsetFullSpansForAddition(int,int) -> c
    3033:3042:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> c
    2885:2886:int getSpan(int) -> d
    2937:2952:void offsetFullSpansForRemoval(int,int) -> d
    2867:2880:int invalidateAfter(int) -> e
    2898:2902:int sizeForPosition(int) -> f
    2984:3006:int invalidateFullSpansAfter(int) -> g
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int[] mGapPerSpan -> f
    int mPosition -> d
    boolean mHasUnwantedGapAfter -> g
    int mGapDir -> e
    3132:3132:void <clinit>() -> <clinit>
    3086:3095:void <init>(android.os.Parcel) -> <init>
    3097:3098:void <init>() -> <init>
    3101:3101:int getGapForSpan(int) -> a
    3106:3106:int describeContents() -> describeContents
    3124:3124:java.lang.String toString() -> toString
    3111:3120:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$a:
    3133:3133:void <init>() -> <init>
    3133:3133:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3136:3136:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3133:3133:java.lang.Object[] newArray(int) -> newArray
    3141:3141:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    boolean mLastLayoutRTL -> m
    int[] mSpanOffsets -> g
    int[] mSpanLookup -> i
    int mSpanLookupSize -> h
    boolean mReverseLayout -> k
    boolean mAnchorLayoutFromEnd -> l
    int mSpanOffsetsSize -> f
    java.util.List mFullSpanItems -> j
    int mAnchorPosition -> d
    int mVisibleAnchorPosition -> e
    3242:3242:void <clinit>() -> <clinit>
    3165:3166:void <init>() -> <init>
    3168:3189:void <init>(android.os.Parcel) -> <init>
    3191:3202:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3213:3217:void invalidateAnchorPositionInfo() -> b
    3205:3210:void invalidateSpanInfo() -> c
    3221:3221:int describeContents() -> describeContents
    3226:3240:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$a:
    3243:3243:void <init>() -> <init>
    3243:3243:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3246:3246:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3243:3243:java.lang.Object[] newArray(int) -> newArray
    3251:3251:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> f
    int mDeletedSize -> d
    int mIndex -> e
    int mCachedStart -> b
    int mCachedEnd -> c
    java.util.ArrayList mViews -> a
    2518:2520:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2556:2564:int getEndLine(int) -> a
    2568:2578:void calculateCachedEnd() -> a
    2603:2613:void appendToSpan(android.view.View) -> a
    2618:2635:void cacheReferenceLineAndClear(boolean,int) -> a
    2759:2786:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> a
    2796:2796:int findOnePartiallyVisibleChild(int,int,boolean) -> a
    2804:2833:android.view.View getFocusableViewAfter(int,int) -> a
    2523:2530:int getStartLine(int) -> b
    2534:2544:void calculateCachedStart() -> b
    2684:2684:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> b
    2590:2600:void prependToSpan(android.view.View) -> c
    2638:2641:void clear() -> c
    2688:2694:void onOffset(int) -> c
    2649:2650:void setLine(int) -> d
    2703:2703:int findFirstPartiallyVisibleItemPosition() -> d
    2721:2721:int findLastPartiallyVisibleItemPosition() -> e
    2680:2680:int getDeletedSize() -> f
    2582:2586:int getEndLine() -> g
    2548:2552:int getStartLine() -> h
    2644:2646:void invalidateCache() -> i
    2653:2664:void popEnd() -> j
    2667:2677:void popStart() -> k
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.t:
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback -> a
    androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> b
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> a
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> a
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.t$a:
    int mChildStart -> d
    int mChildEnd -> e
    int mRvStart -> b
    int mRvEnd -> c
    int mBoundFlags -> a
    136:137:void <init>() -> <init>
    141:145:void setBounds(int,int,int,int) -> a
    148:149:void addFlags(int) -> a
    156:162:int compare(int,int) -> a
    166:189:boolean boundsMatch() -> a
    152:153:void resetFlags() -> b
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> androidx.recyclerview.widget.t$b:
    android.view.View getChildAt(int) -> a
    int getChildEnd(android.view.View) -> a
    int getParentEnd() -> a
    int getChildStart(android.view.View) -> b
    int getParentStart() -> b
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.u:
    androidx.collection.LongSparseArray mOldChangedHolders -> b
    androidx.collection.ArrayMap mLayoutHolderMap -> a
    35:45:void <init>() -> <init>
    52:54:void clear() -> a
    99:121:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    130:131:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    143:150:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    171:171:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> a
    196:202:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    217:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> a
    72:73:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    180:187:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    271:272:void onDetach() -> b
    62:69:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    159:160:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    275:276:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    95:95:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    84:84:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    209:214:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    258:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.u$a:
    androidx.core.util.Pools$Pool sPool -> d
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> b
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> c
    int flags -> a
    305:305:void <clinit>() -> <clinit>
    307:308:void <init>() -> <init>
    316:320:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> a
    324:325:void drainCache() -> a
    311:312:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> b
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback -> androidx.recyclerview.widget.u$b:
    void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
androidx.room.DatabaseConfiguration -> androidx.room.a:
    androidx.sqlite.db.SupportSQLiteOpenHelper$Factory sqliteOpenHelperFactory -> a
    android.content.Context context -> b
    androidx.room.RoomDatabase$MigrationContainer migrationContainer -> d
    boolean multiInstanceInvalidation -> j
    boolean requireMigration -> k
    boolean allowDestructiveMigrationOnDowngrade -> l
    java.util.concurrent.Executor queryExecutor -> h
    java.util.concurrent.Executor transactionExecutor -> i
    java.util.List callbacks -> e
    boolean allowMainThreadQueries -> f
    androidx.room.RoomDatabase$JournalMode journalMode -> g
    java.lang.String name -> c
    java.util.Set mMigrationNotRequiredFrom -> m
    176:190:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set) -> <init>
    215:223:boolean isMigrationRequired(int,int) -> a
androidx.room.EntityInsertionAdapter -> androidx.room.b:
    43:44:void <init>(androidx.room.RoomDatabase) -> <init>
    void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> a
    76:83:void insert(java.lang.Object[]) -> a
androidx.room.IMultiInstanceInvalidationCallback -> androidx.room.c:
    void onInvalidation(java.lang.String[]) -> a
androidx.room.IMultiInstanceInvalidationCallback$Stub -> androidx.room.c$a:
    19:21:void <init>() -> <init>
    28:35:androidx.room.IMultiInstanceInvalidationCallback asInterface(android.os.IBinder) -> a
    39:39:android.os.IBinder asBinder() -> asBinder
    43:57:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy -> androidx.room.c$a$a:
    android.os.IBinder mRemote -> a
    69:71:void <init>(android.os.IBinder) -> <init>
    87:94:void onInvalidation(java.lang.String[]) -> a
    74:74:android.os.IBinder asBinder() -> asBinder
androidx.room.IMultiInstanceInvalidationService -> androidx.room.d:
    void broadcastInvalidation(int,java.lang.String[]) -> a
    int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> a
    void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> a
androidx.room.IMultiInstanceInvalidationService$Stub -> androidx.room.d$a:
    19:21:void <init>() -> <init>
    28:35:androidx.room.IMultiInstanceInvalidationService asInterface(android.os.IBinder) -> a
    39:39:android.os.IBinder asBinder() -> asBinder
    43:61:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy -> androidx.room.d$a$a:
    android.os.IBinder mRemote -> a
    94:96:void <init>(android.os.IBinder) -> <init>
    107:120:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> a
    135:146:void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> a
    161:169:void broadcastInvalidation(int,java.lang.String[]) -> a
    99:99:android.os.IBinder asBinder() -> asBinder
androidx.room.InvalidationLiveDataContainer -> androidx.room.e:
    androidx.room.RoomDatabase mDatabase -> b
    java.util.Set mLiveDataSet -> a
    42:44:void <init>(androidx.room.RoomDatabase) -> <init>
    48:48:androidx.lifecycle.LiveData create(java.lang.String[],boolean,java.util.concurrent.Callable) -> a
    53:54:void onActive(androidx.lifecycle.LiveData) -> a
    57:58:void onInactive(androidx.lifecycle.LiveData) -> b
androidx.room.InvalidationTracker -> androidx.room.f:
    androidx.room.RoomDatabase mDatabase -> d
    androidx.arch.core.internal.SafeIterableMap mObserverMap -> j
    java.lang.String[] TRIGGERS -> l
    java.util.Map mViewTables -> c
    java.util.concurrent.atomic.AtomicBoolean mPendingRefresh -> e
    androidx.room.InvalidationTracker$ObservedTableTracker mObservedTableTracker -> h
    boolean mInitialized -> f
    androidx.sqlite.db.SupportSQLiteStatement mCleanupStatement -> g
    java.lang.Runnable mRefreshRunnable -> k
    androidx.collection.ArrayMap mTableIdLookup -> a
    androidx.room.InvalidationLiveDataContainer mInvalidationLiveDataContainer -> i
    java.lang.String[] mTableNames -> b
    66:66:void <clinit>() -> <clinit>
    135:162:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]) -> <init>
    170:184:void internalInit(androidx.sqlite.db.SupportSQLiteDatabase) -> a
    188:190:void startMultiInstanceInvalidation(android.content.Context,java.lang.String) -> a
    201:207:void appendTriggerName(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    221:241:void startTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> a
    260:275:void addObserver(androidx.room.InvalidationTracker$Observer) -> a
    345:356:boolean ensureInitialization() -> a
    472:478:void notifyObserversByTableNames(java.lang.String[]) -> a
    582:582:androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable) -> a
    210:218:void stopTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int) -> b
    298:307:java.lang.String[] resolveViews(java.lang.String[]) -> b
    322:323:void addWeakObserver(androidx.room.InvalidationTracker$Observer) -> b
    443:446:void refreshVersionsAsync() -> b
    482:526:void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> b
    282:288:java.lang.String[] validateAndResolveTableNames(java.lang.String[]) -> c
    335:337:void removeObserver(androidx.room.InvalidationTracker$Observer) -> c
    537:541:void syncTriggers() -> c
androidx.room.InvalidationTracker$1 -> androidx.room.f$a:
    androidx.room.InvalidationTracker this$0 -> d
    360:360:void <init>(androidx.room.InvalidationTracker) -> <init>
    415:424:java.util.Set checkUpdatedTable() -> a
    363:403:void run() -> run
androidx.room.InvalidationTracker$ObservedTableTracker -> androidx.room.f$b:
    int[] mTriggerStateChanges -> c
    long[] mTableObservers -> a
    boolean mPendingSync -> e
    boolean[] mTriggerStates -> b
    boolean mNeedsSync -> d
    746:752:void <init>(int) -> <init>
    758:768:boolean onAdded(int[]) -> a
    798:815:int[] getTablesToSync() -> a
    776:786:boolean onRemoved(int[]) -> b
    823:825:void onSyncCompleted() -> b
androidx.room.InvalidationTracker$Observer -> androidx.room.f$c:
    java.lang.String[] mTables -> a
    699:702:void <init>(java.lang.String[]) -> <init>
    void onInvalidated(java.util.Set) -> a
    714:714:boolean isRemote() -> a
androidx.room.InvalidationTracker$ObserverWrapper -> androidx.room.f$d:
    androidx.room.InvalidationTracker$Observer mObserver -> c
    java.util.Set mSingleTableSet -> d
    int[] mTableIds -> a
    java.lang.String[] mTableNames -> b
    599:610:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]) -> <init>
    619:638:void notifyByTableInvalidStatus(java.util.Set) -> a
    647:673:void notifyByTableNames(java.lang.String[]) -> a
androidx.room.InvalidationTracker$WeakObserver -> androidx.room.f$e:
    androidx.room.InvalidationTracker mTracker -> b
    java.lang.ref.WeakReference mDelegateRef -> c
    839:842:void <init>(androidx.room.InvalidationTracker,androidx.room.InvalidationTracker$Observer) -> <init>
    846:852:void onInvalidated(java.util.Set) -> a
androidx.room.MultiInstanceInvalidationClient -> androidx.room.g:
    android.content.Context mContext -> a
    androidx.room.InvalidationTracker$Observer mObserver -> e
    java.util.concurrent.atomic.AtomicBoolean mStopped -> i
    androidx.room.IMultiInstanceInvalidationService mService -> f
    android.content.ServiceConnection mServiceConnection -> j
    androidx.room.InvalidationTracker mInvalidationTracker -> d
    java.lang.Runnable mRemoveObserverRunnable -> l
    java.lang.Runnable mSetUpRunnable -> k
    java.util.concurrent.Executor mExecutor -> g
    java.lang.String mName -> b
    int mClientId -> c
    androidx.room.IMultiInstanceInvalidationCallback mCallback -> h
    170:196:void <init>(android.content.Context,java.lang.String,androidx.room.InvalidationTracker,java.util.concurrent.Executor) -> <init>
androidx.room.MultiInstanceInvalidationClient$1 -> androidx.room.g$a:
    androidx.room.MultiInstanceInvalidationClient this$0 -> a
    82:82:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    85:91:void onInvalidation(java.lang.String[]) -> a
androidx.room.MultiInstanceInvalidationClient$1$1 -> androidx.room.g$a$a:
    java.lang.String[] val$tables -> d
    androidx.room.MultiInstanceInvalidationClient$1 this$1 -> e
    85:85:void <init>(androidx.room.MultiInstanceInvalidationClient$1,java.lang.String[]) -> <init>
    88:89:void run() -> run
androidx.room.MultiInstanceInvalidationClient$2 -> androidx.room.g$b:
    androidx.room.MultiInstanceInvalidationClient this$0 -> a
    100:100:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    104:106:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    110:113:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
androidx.room.MultiInstanceInvalidationClient$3 -> androidx.room.g$c:
    androidx.room.MultiInstanceInvalidationClient this$0 -> d
    119:119:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    123:131:void run() -> run
androidx.room.MultiInstanceInvalidationClient$4 -> androidx.room.g$d:
    androidx.room.MultiInstanceInvalidationClient this$0 -> d
    136:136:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    139:140:void run() -> run
androidx.room.MultiInstanceInvalidationClient$5 -> androidx.room.g$e:
    androidx.room.MultiInstanceInvalidationClient this$0 -> d
    143:143:void <init>(androidx.room.MultiInstanceInvalidationClient) -> <init>
    146:159:void run() -> run
androidx.room.MultiInstanceInvalidationClient$6 -> androidx.room.g$f:
    androidx.room.MultiInstanceInvalidationClient this$0 -> b
    175:175:void <init>(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]) -> <init>
    178:187:void onInvalidated(java.util.Set) -> a
    191:191:boolean isRemote() -> a
androidx.room.MultiInstanceInvalidationService -> androidx.room.MultiInstanceInvalidationService:
    android.os.RemoteCallbackList mCallbackList -> f
    androidx.collection.SparseArrayCompat mClientNames -> e
    androidx.room.IMultiInstanceInvalidationService$Stub mBinder -> g
    int mMaxClientId -> d
    38:59:void <init>() -> <init>
    131:131:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.room.MultiInstanceInvalidationService$1 -> androidx.room.MultiInstanceInvalidationService$a:
    androidx.room.MultiInstanceInvalidationService this$0 -> a
    51:51:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    55:56:void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object) -> a
    51:51:void onCallbackDied(android.os.IInterface,java.lang.Object) -> onCallbackDied
androidx.room.MultiInstanceInvalidationService$2 -> androidx.room.MultiInstanceInvalidationService$b:
    androidx.room.MultiInstanceInvalidationService this$0 -> a
    60:60:void <init>(androidx.room.MultiInstanceInvalidationService) -> <init>
    66:79:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> a
    88:91:void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> a
    98:124:void broadcastInvalidation(int,java.lang.String[]) -> a
androidx.room.Room -> androidx.room.h:
    51:52:androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String) -> a
    79:94:java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String) -> a
androidx.room.RoomDatabase -> androidx.room.i:
    androidx.sqlite.db.SupportSQLiteDatabase mDatabase -> a
    java.util.concurrent.locks.ReentrantReadWriteLock mCloseLock -> i
    java.util.concurrent.Executor mQueryExecutor -> b
    java.util.concurrent.Executor mTransactionExecutor -> c
    boolean mAllowMainThreadQueries -> f
    boolean mWriteAheadLoggingEnabled -> g
    java.util.List mCallbacks -> h
    androidx.sqlite.db.SupportSQLiteOpenHelper mOpenHelper -> d
    androidx.room.InvalidationTracker mInvalidationTracker -> e
    java.lang.ThreadLocal mSuspendingTransactionId -> j
    148:150:void <init>() -> <init>
    androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> a
    257:261:void assertNotMainThread() -> a
    303:305:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> a
    315:317:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> a
    428:429:void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase) -> a
    159:174:void init(androidx.room.DatabaseConfiguration) -> b
    275:279:void assertNotSuspendingTransaction() -> b
    327:331:void beginTransaction() -> c
    androidx.room.InvalidationTracker createInvalidationTracker() -> d
    340:346:void endTransaction() -> e
    109:109:java.util.concurrent.locks.Lock getCloseLock() -> f
    441:441:androidx.room.InvalidationTracker getInvalidationTracker() -> g
    183:183:androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper() -> h
    353:353:java.util.concurrent.Executor getQueryExecutor() -> i
    361:361:java.util.concurrent.Executor getTransactionExecutor() -> j
    452:452:boolean inTransaction() -> k
    228:229:boolean isOpen() -> l
    371:372:void setTransactionSuccessful() -> m
    958:958:boolean isMainThread() -> n
androidx.room.RoomDatabase$Builder -> androidx.room.i$a:
    android.content.Context mContext -> c
    boolean mMultiInstanceInvalidation -> j
    boolean mRequireMigration -> k
    boolean mAllowDestructiveMigrationOnDowngrade -> l
    java.util.concurrent.Executor mQueryExecutor -> e
    java.util.ArrayList mCallbacks -> d
    java.util.concurrent.Executor mTransactionExecutor -> f
    androidx.room.RoomDatabase$MigrationContainer mMigrationContainer -> m
    java.util.Set mMigrationStartAndEndVersions -> o
    androidx.sqlite.db.SupportSQLiteOpenHelper$Factory mFactory -> g
    androidx.room.RoomDatabase$JournalMode mJournalMode -> i
    boolean mAllowMainThreadQueries -> h
    java.lang.Class mDatabaseClass -> a
    java.lang.String mName -> b
    java.util.Set mMigrationsNotRequiredFrom -> n
    535:542:void <init>(android.content.Context,java.lang.Class,java.lang.String) -> <init>
    604:605:androidx.room.RoomDatabase$Builder allowMainThreadQueries() -> a
    803:804:androidx.room.RoomDatabase build() -> b
    724:726:androidx.room.RoomDatabase$Builder fallbackToDestructiveMigration() -> c
androidx.room.RoomDatabase$Callback -> androidx.room.i$b:
    964:964:void <init>() -> <init>
    973:973:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> a
    981:981:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> b
androidx.room.RoomDatabase$JournalMode -> androidx.room.i$c:
    androidx.room.RoomDatabase$JournalMode[] $VALUES -> d
    469:460:void <clinit>() -> <clinit>
    460:460:void <init>(java.lang.String,int) -> <init>
    488:498:androidx.room.RoomDatabase$JournalMode resolve(android.content.Context) -> resolve
    460:460:androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String) -> valueOf
    460:460:androidx.room.RoomDatabase$JournalMode[] values() -> values
androidx.room.RoomDatabase$MigrationContainer -> androidx.room.i$d:
    androidx.collection.SparseArrayCompat mMigrations -> a
    861:862:void <init>() -> <init>
    904:909:java.util.List findMigrationPath(int,int) -> a
    914:952:java.util.List findUpMigrationPath(java.util.List,boolean,int,int) -> a
androidx.room.RoomMasterTable -> androidx.room.j:
    51:51:java.lang.String createInsertQuery(java.lang.String) -> a
androidx.room.RoomOpenHelper -> androidx.room.k:
    androidx.room.RoomOpenHelper$Delegate mDelegate -> c
    androidx.room.DatabaseConfiguration mConfiguration -> b
    java.lang.String mLegacyHash -> e
    java.lang.String mIdentityHash -> d
    54:59:void <init>(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String) -> <init>
    68:69:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase) -> a
    113:114:void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> a
    80:109:void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> b
    73:76:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> c
    118:123:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> d
    126:143:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> e
    151:152:void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase) -> f
    155:161:boolean hasRoomMasterTable(androidx.sqlite.db.SupportSQLiteDatabase) -> g
    146:148:void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase) -> h
androidx.room.RoomOpenHelper$Delegate -> androidx.room.k$a:
    int version -> a
    172:174:void <init>(int) -> <init>
    void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> a
    void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> b
    void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> c
    void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> d
    void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> e
    void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> f
    void validateMigration(androidx.sqlite.db.SupportSQLiteDatabase) -> g
androidx.room.RoomSQLiteQuery -> androidx.room.l:
    long[] mLongBindings -> e
    int[] mBindingTypes -> i
    int mCapacity -> j
    byte[][] mBlobBindings -> h
    int mArgCount -> k
    java.util.TreeMap sQueryPool -> l
    double[] mDoubleBindings -> f
    java.lang.String[] mStringBindings -> g
    java.lang.String mQuery -> d
    79:79:void <clinit>() -> <clinit>
    156:166:void <init>(int) -> <init>
    170:172:void init(java.lang.String,int) -> a
    201:201:java.lang.String getSql() -> a
    211:230:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> a
    234:235:void bindNull(int) -> a
    239:241:void bindLong(int,long) -> a
    245:247:void bindDouble(int,double) -> a
    251:253:void bindString(int,java.lang.String) -> a
    257:259:void bindBlob(int,byte[]) -> a
    141:150:androidx.room.RoomSQLiteQuery acquire(java.lang.String,int) -> b
    264:264:void close() -> close
    182:185:void release() -> d
    189:197:void prunePoolLocked() -> e
androidx.room.RoomTrackingLiveData -> androidx.room.m:
    java.lang.Runnable mInvalidationRunnable -> t
    java.lang.Runnable mRefreshRunnable -> s
    androidx.room.InvalidationTracker$Observer mObserver -> o
    boolean mInTransaction -> l
    java.util.concurrent.Callable mComputeFunction -> m
    java.util.concurrent.atomic.AtomicBoolean mRegisteredObserver -> r
    java.util.concurrent.atomic.AtomicBoolean mComputing -> q
    androidx.room.RoomDatabase mDatabase -> k
    androidx.room.InvalidationLiveDataContainer mContainer -> n
    java.util.concurrent.atomic.AtomicBoolean mInvalid -> p
    134:145:void <init>(androidx.room.RoomDatabase,androidx.room.InvalidationLiveDataContainer,boolean,java.util.concurrent.Callable,java.lang.String[]) -> <init>
    47:47:void access$000(androidx.room.RoomTrackingLiveData,java.lang.Object) -> a
    149:152:void onActive() -> c
    156:158:void onInactive() -> d
    161:164:java.util.concurrent.Executor getQueryExecutor() -> e
androidx.room.RoomTrackingLiveData$1 -> androidx.room.m$a:
    androidx.room.RoomTrackingLiveData this$0 -> d
    72:72:void <init>(androidx.room.RoomTrackingLiveData) -> <init>
    76:112:void run() -> run
androidx.room.RoomTrackingLiveData$2 -> androidx.room.m$b:
    androidx.room.RoomTrackingLiveData this$0 -> d
    116:116:void <init>(androidx.room.RoomTrackingLiveData) -> <init>
    120:126:void run() -> run
androidx.room.RoomTrackingLiveData$3 -> androidx.room.m$c:
    androidx.room.RoomTrackingLiveData this$0 -> b
    139:139:void <init>(androidx.room.RoomTrackingLiveData,java.lang.String[]) -> <init>
    142:143:void onInvalidated(java.util.Set) -> a
androidx.room.SharedSQLiteStatement -> androidx.room.n:
    androidx.room.RoomDatabase mDatabase -> b
    java.util.concurrent.atomic.AtomicBoolean mLock -> a
    androidx.sqlite.db.SupportSQLiteStatement mStmt -> c
    48:50:void <init>(androidx.room.RoomDatabase) -> <init>
    70:79:androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean) -> a
    86:87:androidx.sqlite.db.SupportSQLiteStatement acquire() -> a
    96:99:void release(androidx.sqlite.db.SupportSQLiteStatement) -> a
    60:61:void assertNotMainThread() -> b
    java.lang.String createQuery() -> c
    64:65:androidx.sqlite.db.SupportSQLiteStatement createNewStatement() -> d
androidx.room.TransactionExecutor -> androidx.room.o:
    java.lang.Runnable mActive -> c
    java.util.concurrent.Executor mExecutor -> a
    java.util.ArrayDeque mTasks -> b
    37:39:void <init>(java.util.concurrent.Executor) -> <init>
    58:57:void scheduleNext() -> a
    42:41:void execute(java.lang.Runnable) -> execute
androidx.room.TransactionExecutor$1 -> androidx.room.o$a:
    java.lang.Runnable val$command -> d
    androidx.room.TransactionExecutor this$0 -> e
    42:42:void <init>(androidx.room.TransactionExecutor,java.lang.Runnable) -> <init>
    45:47:void run() -> run
androidx.room.migration.Migration -> androidx.room.p.a:
    void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> a
androidx.room.util.CursorUtil -> androidx.room.q.a:
    46:73:android.database.Cursor copyAndClose(android.database.Cursor) -> a
    104:108:int getColumnIndexOrThrow(android.database.Cursor,java.lang.String) -> a
androidx.room.util.DBUtil -> androidx.room.q.b:
    54:69:android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean) -> a
    81:89:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase) -> a
androidx.room.util.TableInfo -> androidx.room.q.c:
    java.util.Map columns -> b
    java.util.Set foreignKeys -> c
    java.util.Set indices -> d
    java.lang.String name -> a
    74:79:void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set) -> <init>
    140:143:androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> a
    190:206:java.util.List readForeignKeyFieldMappings(android.database.Cursor) -> a
    277:302:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean) -> a
    211:231:java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> b
    148:184:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> c
    241:268:java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String) -> d
    91:92:boolean equals(java.lang.Object) -> equals
    114:118:int hashCode() -> hashCode
    123:123:java.lang.String toString() -> toString
androidx.room.util.TableInfo$Column -> androidx.room.q.c$a:
    java.lang.String name -> a
    int primaryKeyPosition -> e
    java.lang.String type -> b
    int affinity -> c
    boolean notNull -> d
    347:353:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    363:373:int findAffinity(java.lang.String) -> a
    412:412:boolean isPrimaryKey() -> a
    390:391:boolean equals(java.lang.Object) -> equals
    417:421:int hashCode() -> hashCode
    426:426:java.lang.String toString() -> toString
androidx.room.util.TableInfo$ForeignKey -> androidx.room.q.c$b:
    java.util.List referenceColumnNames -> e
    java.util.List columnNames -> d
    java.lang.String referenceTable -> a
    java.lang.String onUpdate -> c
    java.lang.String onDelete -> b
    456:462:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List) -> <init>
    466:467:boolean equals(java.lang.Object) -> equals
    481:486:int hashCode() -> hashCode
    491:491:java.lang.String toString() -> toString
androidx.room.util.TableInfo$ForeignKeyWithSequence -> androidx.room.q.c$c:
    java.lang.String mTo -> g
    java.lang.String mFrom -> f
    int mId -> d
    int mSequence -> e
    514:519:void <init>(int,int,java.lang.String,java.lang.String) -> <init>
    523:527:int compareTo(androidx.room.util.TableInfo$ForeignKeyWithSequence) -> a
    507:507:int compareTo(java.lang.Object) -> compareTo
androidx.room.util.TableInfo$Index -> androidx.room.q.c$d:
    java.util.List columns -> c
    java.lang.String name -> a
    boolean unique -> b
    545:549:void <init>(java.lang.String,boolean,java.util.List) -> <init>
    553:554:boolean equals(java.lang.Object) -> equals
    573:580:int hashCode() -> hashCode
    585:585:java.lang.String toString() -> toString
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    42:44:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    71:74:void reflectiveNew(java.lang.String) -> a
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    android.os.Bundle mRestoredState -> b
    androidx.arch.core.internal.SafeIterableMap mComponents -> a
    boolean mRestored -> c
    boolean mAllowingSavingState -> d
    52:53:void <init>() -> <init>
    76:77:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> a
    190:191:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> a
    220:230:void performSave(android.os.Bundle) -> a
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    androidx.savedstate.SavedStateRegistry this$0 -> a
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.SavedStateRegistry$a:
    void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> a
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.SavedStateRegistry$b:
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.a:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    androidx.savedstate.SavedStateRegistry mRegistry -> b
    36:39:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> a
    57:59:void performRestore(android.os.Bundle) -> a
    85:85:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> a
    75:76:void performSave(android.os.Bundle) -> b
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.b:
    androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> c
androidx.slidingpanelayout.widget.SlidingPaneLayout -> androidx.slidingpanelayout.widget.SlidingPaneLayout:
    float mParallaxOffset -> l
    float mSlideOffset -> k
    boolean mIsUnableToDrag -> n
    int mParallaxBy -> o
    android.graphics.drawable.Drawable mShadowDrawableLeft -> f
    int mSlideRange -> m
    android.graphics.drawable.Drawable mShadowDrawableRight -> g
    boolean mCanSlide -> i
    java.lang.reflect.Field mRecreateDisplayList -> y
    int mOverhangSize -> h
    boolean mFirstLayout -> u
    int mSliderFadeColor -> d
    int mCoveredFadeColor -> e
    boolean mPreservedOpenState -> t
    android.view.View mSlideableView -> j
    java.lang.reflect.Method mGetDisplayList -> x
    boolean mDisplayListReflectionLoaded -> z
    androidx.customview.widget.ViewDragHelper mDragHelper -> s
    java.util.ArrayList mPostedRunnables -> w
    float mInitialMotionY -> q
    androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> r
    android.graphics.Rect mTmpRect -> v
    float mInitialMotionX -> p
    241:242:void <init>(android.content.Context) -> <init>
    245:246:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    249:261:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    338:342:void dispatchOnPanelClosed(android.view.View) -> a
    853:855:boolean closePane(android.view.View,int) -> a
    901:901:boolean closePane() -> a
    934:959:void onPanelDragged(int) -> a
    962:984:void dimChildView(android.view.View,float,int) -> a
    1069:1092:boolean smoothSlideTo(float,int) -> a
    1209:1230:void parallaxOtherViews(float) -> a
    331:335:void dispatchOnPanelOpened(android.view.View) -> b
    861:863:boolean openPane(android.view.View,int) -> b
    1617:1617:boolean isLayoutRtlSupport() -> b
    325:328:void dispatchOnPanelSlide(android.view.View) -> c
    911:911:boolean isOpen() -> c
    1288:1288:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1097:1105:void computeScroll() -> computeScroll
    930:930:boolean isSlideable() -> d
    1015:1060:void invalidateChildRegion(android.view.View) -> d
    1175:1187:void draw(android.graphics.Canvas) -> draw
    988:1007:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    883:883:boolean openPane() -> e
    1267:1271:boolean isDimmed(android.view.View) -> e
    345:388:void updateObscuredViewsVisibility(android.view.View) -> f
    391:397:void setAllChildrenVisible() -> f
    400:415:boolean viewIsOpaque(android.view.View) -> g
    1276:1276:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1281:1281:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1293:1293:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    317:317:int getCoveredFadeColor() -> getCoveredFadeColor
    282:282:int getParallaxDistance() -> getParallaxDistance
    299:299:int getSliderFadeColor() -> getSliderFadeColor
    420:422:void onAttachedToWindow() -> onAttachedToWindow
    426:434:void onDetachedFromWindow() -> onDetachedFromWindow
    754:768:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    650:733:void onLayout(boolean,int,int,int,int) -> onLayout
    438:646:void onMeasure(int,int) -> onMeasure
    1308:1322:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1298:1303:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    737:742:void onSizeChanged(int,int,int,int) -> onSizeChanged
    814:849:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    746:750:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    309:310:void setCoveredFadeColor(int) -> setCoveredFadeColor
    321:322:void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    271:273:void setParallaxDistance(int) -> setParallaxDistance
    1116:1117:void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    1126:1127:void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    1136:1137:void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    1150:1151:void setShadowResource(int) -> setShadowResource
    1160:1161:void setShadowResourceLeft(int) -> setShadowResourceLeft
    1170:1171:void setShadowResourceRight(int) -> setShadowResourceRight
    291:292:void setSliderFadeColor(int) -> setSliderFadeColor
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate -> androidx.slidingpanelayout.widget.SlidingPaneLayout$a:
    androidx.slidingpanelayout.widget.SlidingPaneLayout this$0 -> e
    android.graphics.Rect mTmpRect -> d
    1513:1514:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1518:1543:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1555:1558:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    1572:1596:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1547:1550:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    1562:1562:boolean filter(android.view.View) -> c
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable -> androidx.slidingpanelayout.widget.SlidingPaneLayout$b:
    androidx.slidingpanelayout.widget.SlidingPaneLayout this$0 -> e
    android.view.View mChildView -> d
    1602:1604:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout,android.view.View) -> <init>
    1608:1613:void run() -> run
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback -> androidx.slidingpanelayout.widget.SlidingPaneLayout$c:
    androidx.slidingpanelayout.widget.SlidingPaneLayout this$0 -> a
    1326:1327:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1355:1356:void onViewCaptured(android.view.View,int) -> a
    1360:1362:void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    1366:1384:void onViewReleased(android.view.View,float,float) -> a
    1388:1388:int getViewHorizontalDragRange(android.view.View) -> a
    1393:1406:int clampViewPositionHorizontal(android.view.View,int,int) -> a
    1418:1419:void onEdgeDragStarted(int,int) -> a
    1331:1335:boolean tryCaptureView(android.view.View,int) -> b
    1413:1413:int clampViewPositionVertical(android.view.View,int,int) -> b
    1340:1350:void onViewDragStateChanged(int) -> c
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams -> androidx.slidingpanelayout.widget.SlidingPaneLayout$d:
    android.graphics.Paint dimPaint -> d
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    1423:1423:void <clinit>() -> <clinit>
    1447:1448:void <init>() -> <init>
    1455:1456:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1459:1460:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1468:1473:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener -> androidx.slidingpanelayout.widget.SlidingPaneLayout$e:
    void onPanelOpened(android.view.View) -> a
    void onPanelSlide(android.view.View,float) -> a
    void onPanelClosed(android.view.View) -> b
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> f
    1495:1495:void <clinit>() -> <clinit>
    1481:1482:void <init>(android.os.Parcelable) -> <init>
    1485:1487:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1491:1493:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$a:
    1495:1495:void <init>() -> <init>
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1498:1498:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1503:1503:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object[] newArray(int) -> newArray
    1508:1508:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.sqlite.db.SimpleSQLiteQuery -> a.g.a.a:
    java.lang.Object[] mBindArgs -> e
    java.lang.String mQuery -> d
    36:39:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    47:48:void <init>(java.lang.String) -> <init>
    52:52:java.lang.String getSql() -> a
    57:58:void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> a
    72:80:void bind(androidx.sqlite.db.SupportSQLiteProgram,java.lang.Object[]) -> a
    84:105:void bind(androidx.sqlite.db.SupportSQLiteProgram,int,java.lang.Object) -> a
androidx.sqlite.db.SupportSQLiteDatabase -> a.g.a.b:
    void execSQL(java.lang.String) -> a
    android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> a
    androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> b
    android.database.Cursor query(java.lang.String) -> c
    void endTransaction() -> d
    void beginTransaction() -> e
    java.util.List getAttachedDbs() -> f
    void setTransactionSuccessful() -> g
    java.lang.String getPath() -> h
    boolean inTransaction() -> i
androidx.sqlite.db.SupportSQLiteOpenHelper -> a.g.a.c:
    androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> a
    void setWriteAheadLoggingEnabled(boolean) -> a
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback -> a.g.a.c$a:
    int version -> a
    127:129:void <init>(int) -> <init>
    void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> a
    151:151:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase) -> a
    274:275:void deleteDatabaseFile(java.lang.String) -> a
    void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> b
    232:271:void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase) -> b
    void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> c
    220:220:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> d
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration -> a.g.a.c$b:
    android.content.Context context -> a
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback callback -> c
    java.lang.String name -> b
    319:323:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> <init>
    331:331:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context) -> a
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder -> a.g.a.c$b$a:
    android.content.Context mContext -> a
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback mCallback -> c
    java.lang.String mName -> b
    354:356:void <init>(android.content.Context) -> <init>
    343:344:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build() -> a
    363:364:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String) -> a
    372:373:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> a
androidx.sqlite.db.SupportSQLiteOpenHelper$Factory -> a.g.a.c$c:
    androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> a
androidx.sqlite.db.SupportSQLiteProgram -> a.g.a.d:
    void bindBlob(int,byte[]) -> a
    void bindDouble(int,double) -> a
    void bindLong(int,long) -> a
    void bindNull(int) -> a
    void bindString(int,java.lang.String) -> a
androidx.sqlite.db.SupportSQLiteQuery -> a.g.a.e:
    void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> a
    java.lang.String getSql() -> a
androidx.sqlite.db.SupportSQLiteStatement -> a.g.a.f:
    int executeUpdateDelete() -> b
    long executeInsert() -> c
androidx.sqlite.db.framework.FrameworkSQLiteDatabase -> a.g.a.g.a:
    android.database.sqlite.SQLiteDatabase mDelegate -> d
    java.lang.String[] EMPTY_STRING_ARRAY -> e
    47:49:void <clinit>() -> <clinit>
    58:60:void <init>(android.database.sqlite.SQLiteDatabase) -> <init>
    161:161:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> a
    242:243:void execSQL(java.lang.String) -> a
    322:322:boolean isDelegate(android.database.sqlite.SQLiteDatabase) -> a
    64:64:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> b
    150:150:android.database.Cursor query(java.lang.String) -> c
    315:316:void close() -> close
    90:91:void endTransaction() -> d
    69:70:void beginTransaction() -> e
    305:305:java.util.List getAttachedDbs() -> f
    95:96:void setTransactionSuccessful() -> g
    267:267:java.lang.String getPath() -> h
    100:100:boolean inTransaction() -> i
    257:257:boolean isOpen() -> isOpen
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$1 -> a.g.a.g.a$a:
    androidx.sqlite.db.SupportSQLiteQuery val$supportQuery -> a
    161:161:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteDatabase,androidx.sqlite.db.SupportSQLiteQuery) -> <init>
    165:166:android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery) -> newCursor
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper -> a.g.a.g.b:
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper mDelegate -> a
    31:33:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> <init>
    36:37:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper createDelegate(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> a
    48:49:void setWriteAheadLoggingEnabled(boolean) -> a
    53:53:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> a
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper -> a.g.a.g.b$a:
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback mCallback -> b
    androidx.sqlite.db.framework.FrameworkSQLiteDatabase[] mDbRef -> a
    boolean mMigrated -> c
    79:88:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],androidx.sqlite.db.SupportSQLiteOpenHelper$Callback) -> <init>
    91:90:androidx.sqlite.db.SupportSQLiteDatabase getWritableSupportDatabase() -> a
    113:113:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase) -> a
    154:158:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],android.database.sqlite.SQLiteDatabase) -> a
    148:147:void close() -> close
    129:130:void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    118:119:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    134:136:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    140:144:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    123:125:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$1 -> a.g.a.g.b$a$a:
    androidx.sqlite.db.framework.FrameworkSQLiteDatabase[] val$dbRef -> b
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback val$callback -> a
    80:80:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteDatabase[]) -> <init>
    83:84:void onCorruption(android.database.sqlite.SQLiteDatabase) -> onCorruption
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory -> a.g.a.g.c:
    26:26:void <init>() -> <init>
    29:29:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> a
androidx.sqlite.db.framework.FrameworkSQLiteProgram -> a.g.a.g.d:
    android.database.sqlite.SQLiteProgram mDelegate -> d
    29:31:void <init>(android.database.sqlite.SQLiteProgram) -> <init>
    35:36:void bindNull(int) -> a
    40:41:void bindLong(int,long) -> a
    45:46:void bindDouble(int,double) -> a
    50:51:void bindString(int,java.lang.String) -> a
    55:56:void bindBlob(int,byte[]) -> a
    65:66:void close() -> close
androidx.sqlite.db.framework.FrameworkSQLiteStatement -> a.g.a.g.e:
    android.database.sqlite.SQLiteStatement mDelegate -> e
    35:37:void <init>(android.database.sqlite.SQLiteStatement) -> <init>
    46:46:int executeUpdateDelete() -> b
    51:51:long executeInsert() -> c
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.a:
    android.view.animation.Animation$AnimationListener mListener -> d
    int mShadowRadius -> e
    53:76:void <init>(android.content.Context,int) -> <init>
    79:79:boolean elevationSupported() -> a
    92:93:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> a
    105:109:void onAnimationEnd() -> onAnimationEnd
    97:101:void onAnimationStart() -> onAnimationStart
    84:89:void onMeasure(int,int) -> onMeasure
    122:125:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.a$a:
    android.graphics.RadialGradient mRadialGradient -> d
    android.graphics.Paint mShadowPaint -> e
    androidx.swiperefreshlayout.widget.CircleImageView this$0 -> f
    131:136:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    153:157:void updateRadialGradient(int) -> a
    146:150:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    140:142:void onResize(float,float) -> onResize
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.b:
    android.content.res.Resources mResources -> f
    android.animation.Animator mAnimator -> g
    float mRotationCount -> h
    boolean mFinishing -> i
    androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring mRing -> d
    float mRotation -> e
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> k
    int[] COLORS -> l
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> j
    67:97:void <clinit>() -> <clinit>
    138:146:void <init>(android.content.Context) -> <init>
    151:159:void setSizeParameters(float,float,float,float) -> a
    168:175:void setStyle(int) -> a
    280:282:void setArrowEnabled(boolean) -> a
    299:301:void setArrowScale(float) -> a
    330:333:void setStartEndTrim(float,float) -> a
    392:395:void setColorSchemeColors(int[]) -> a
    476:486:int evaluateColorChange(float,int,int) -> a
    499:506:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> a
    534:563:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> a
    566:616:void setupAnimators() -> a
    350:352:void setProgressRotation(float) -> b
    516:527:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> b
    192:194:void setStrokeWidth(float) -> c
    424:425:void setRotation(float) -> d
    399:404:void draw(android.graphics.Canvas) -> draw
    414:414:int getAlpha() -> getAlpha
    433:433:int getOpacity() -> getOpacity
    438:438:boolean isRunning() -> isRunning
    408:410:void setAlpha(int) -> setAlpha
    419:421:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    446:459:void start() -> start
    466:472:void stop() -> stop
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.b$a:
    androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring val$ring -> a
    androidx.swiperefreshlayout.widget.CircularProgressDrawable this$0 -> b
    568:568:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    571:575:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.b$b:
    androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring val$ring -> a
    androidx.swiperefreshlayout.widget.CircularProgressDrawable this$0 -> b
    580:580:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    595:595:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:590:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    599:613:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    584:585:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.b$c:
    float mStartingEndTrim -> l
    float mStartingStartTrim -> k
    boolean mShowArrow -> n
    android.graphics.RectF mTempBounds -> a
    float mStrokeWidth -> h
    int mColorIndex -> j
    float mRotation -> g
    float mEndTrim -> f
    float mStartTrim -> e
    android.graphics.Path mArrow -> o
    int[] mColors -> i
    android.graphics.Paint mCirclePaint -> d
    android.graphics.Paint mArrowPaint -> c
    android.graphics.Paint mPaint -> b
    int mAlpha -> t
    float mRingCenterRadius -> q
    int mCurrentColor -> u
    float mArrowScale -> p
    int mArrowWidth -> r
    int mArrowHeight -> s
    float mStartingRotation -> m
    650:659:void <init>() -> <init>
    668:670:void setArrowDimensions(float,float) -> a
    692:721:void draw(android.graphics.Canvas,android.graphics.Rect) -> a
    724:753:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> a
    761:764:void setColors(int[]) -> a
    821:822:void setColorFilter(android.graphics.ColorFilter) -> a
    828:829:void setAlpha(int) -> a
    835:835:int getAlpha() -> a
    901:904:void setShowArrow(boolean) -> a
    914:917:void setArrowScale(float) -> a
    778:779:void setColor(int) -> b
    875:875:float getEndTrim() -> b
    890:891:void setCenterRadius(float) -> b
    797:799:void setColorIndex(int) -> c
    805:805:int getNextColor() -> c
    871:872:void setEndTrim(float) -> c
    809:809:int getNextColorIndex() -> d
    879:880:void setRotation(float) -> d
    851:852:void setStartTrim(float) -> e
    855:855:float getStartTrim() -> e
    842:844:void setStrokeWidth(float) -> f
    867:867:int getStartingColor() -> f
    863:863:float getStartingEndTrim() -> g
    927:927:float getStartingRotation() -> h
    859:859:float getStartingStartTrim() -> i
    817:818:void goToNextColor() -> j
    944:950:void resetOriginals() -> k
    935:938:void storeOriginals() -> l
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    android.view.animation.Animation mScaleAnimation -> F
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback -> N
    float mTotalUnconsumed -> i
    android.view.animation.Animation mAlphaStartAnimation -> H
    boolean mScale -> u
    android.view.animation.Animation mAnimateToCorrectPosition -> P
    int mSpinnerOffsetEnd -> C
    android.view.animation.Animation mScaleDownToStartAnimation -> J
    androidx.core.view.NestedScrollingChildHelper mNestedScrollingChildHelper -> k
    boolean mIsBeingDragged -> s
    android.view.animation.Animation mAnimateToStartPosition -> Q
    androidx.swiperefreshlayout.widget.CircularProgressDrawable mProgress -> E
    int mCircleViewIndex -> y
    boolean mRefreshing -> f
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    float mInitialMotionY -> q
    int[] mParentScrollConsumed -> l
    boolean mUsingCustomStart -> M
    boolean mNestedScrollInProgress -> n
    int mMediumAnimationDuration -> o
    android.view.animation.Animation mScaleDownAnimation -> G
    int mCircleDiameter -> L
    float mTotalDragDistance -> h
    int[] LAYOUT_ATTRS -> S
    boolean mNotify -> K
    int mTouchSlop -> g
    boolean mReturningToStart -> v
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> w
    int mCustomSlingshotDistance -> D
    float mStartingScale -> A
    int mOriginalOffsetTop -> B
    android.view.animation.Animation mAlphaMaxAnimation -> I
    java.lang.String LOG_TAG -> R
    androidx.swiperefreshlayout.widget.CircleImageView mCircleView -> x
    int mFrom -> z
    androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> j
    float mInitialDownY -> r
    int mActivePointerId -> t
    android.view.animation.Animation$AnimationListener mRefreshListener -> O
    android.view.View mTarget -> d
    int mCurrentTargetOffsetTop -> p
    int[] mParentOffsetInWindow -> m
    84:140:void <clinit>() -> <clinit>
    340:341:void <init>(android.content.Context) -> <init>
    350:379:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    465:475:void setRefreshing(boolean,boolean) -> a
    478:488:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> a
    499:511:android.view.animation.Animation startAlphaAnimation(int,int) -> a
    672:678:boolean canChildScrollUp() -> a
    912:912:boolean isAnimationRunning(android.view.animation.Animation) -> a
    1089:1098:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> a
    1135:1139:void moveToStart(float) -> a
    1175:1183:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    206:217:void reset() -> b
    439:453:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> b
    968:998:void finishSpinner(float) -> b
    1101:1115:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> b
    398:404:void createProgressView() -> c
    916:965:void moveSpinner(float) -> c
    1150:1166:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> c
    587:596:void ensureTarget() -> d
    1080:1086:void startDragging(float) -> d
    903:903:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    908:908:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    885:885:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    879:879:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    495:496:void startProgressAlphaMaxAnimation() -> e
    491:492:void startProgressAlphaStartAnimation() -> f
    383:393:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    813:813:int getNestedScrollAxes() -> getNestedScrollAxes
    664:664:int getProgressCircleDiameter() -> getProgressCircleDiameter
    279:279:int getProgressViewEndOffset() -> getProgressViewEndOffset
    271:271:int getProgressViewStartOffset() -> getProgressViewStartOffset
    873:873:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    858:858:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    229:231:void onDetachedFromWindow() -> onDetachedFromWindow
    692:704:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    609:630:void onLayout(boolean,int,int,int,int) -> onLayout
    634:655:void onMeasure(int,int) -> onMeasure
    898:898:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    892:892:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    783:809:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    834:847:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    772:777:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    765:765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    818:828:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1002:1012:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    753:759:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    460:462:void setAnimationProgress(float) -> setAnimationProgress
    545:546:void setColorScheme(int[]) -> setColorScheme
    572:574:void setColorSchemeColors(int[]) -> setColorSchemeColors
    556:562:void setColorSchemeResources(int[]) -> setColorSchemeResources
    234:236:void setColorViewAlpha(int) -> setColorViewAlpha
    604:605:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    221:225:void setEnabled(boolean) -> setEnabled
    853:854:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    687:688:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    411:412:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    519:520:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    537:538:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    528:529:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    421:436:void setRefreshing(boolean) -> setRefreshing
    317:332:void setSize(int) -> setSize
    310:311:void setSlingshotDistance(int) -> setSlingshotDistance
    1169:1172:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    863:863:boolean startNestedScroll(int) -> startNestedScroll
    868:869:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$a:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    178:178:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    189:202:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    185:185:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    181:181:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$b:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> d
    441:441:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    444:445:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$c:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> d
    478:478:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    481:482:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$d:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> f
    int val$startingAlpha -> d
    int val$endingAlpha -> e
    499:499:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    502:504:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$e:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    976:976:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    984:987:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    991:991:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    980:980:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$f:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> d
    1117:1117:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1120:1131:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$g:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> d
    1141:1141:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1144:1145:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$h:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> d
    1152:1152:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1155:1158:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$i:
    boolean canChildScrollUp(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.view.View) -> a
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$j:
    void onRefresh() -> a
androidx.transition.AnimatorUtils -> androidx.transition.a:
    31:34:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> a
    37:50:void pause(android.animation.Animator) -> a
    53:66:void resume(android.animation.Animator) -> b
androidx.transition.AnimatorUtils$AnimatorPauseListenerCompat -> androidx.transition.a$a:
androidx.transition.AutoTransition -> androidx.transition.b:
    37:39:void <init>() -> <init>
    47:51:void init() -> q
androidx.transition.ChangeBounds -> androidx.transition.c:
    android.util.Property TOP_LEFT_ONLY_PROPERTY -> U
    android.util.Property POSITION_PROPERTY -> V
    boolean mResizeClip -> N
    android.util.Property BOTTOM_RIGHT_PROPERTY -> S
    boolean mReparent -> O
    android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY -> T
    androidx.transition.RectEvaluator sRectEvaluator -> W
    android.util.Property DRAWABLE_ORIGIN_PROPERTY -> Q
    java.lang.String[] sTransitionProperties -> P
    android.util.Property TOP_LEFT_PROPERTY -> R
    int[] mTempLocation -> M
    60:167:void <clinit>() -> <clinit>
    169:170:void <init>() -> <init>
    241:242:void captureEndValues(androidx.transition.TransitionValues) -> a
    245:254:boolean parentMatches(android.view.View,android.view.View) -> a
    261:262:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    236:237:void captureStartValues(androidx.transition.TransitionValues) -> c
    217:232:void captureValues(androidx.transition.TransitionValues) -> d
    185:185:java.lang.String[] getTransitionProperties() -> m
androidx.transition.ChangeBounds$1 -> androidx.transition.c$b:
    android.graphics.Rect mBounds -> a
    69:70:void <init>(java.lang.Class,java.lang.String) -> <init>
    74:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> a
    81:82:android.graphics.PointF get(android.graphics.drawable.Drawable) -> a
    69:69:java.lang.Object get(java.lang.Object) -> get
    69:69:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.c$a:
    android.view.ViewGroup val$sceneRoot -> a
    android.graphics.drawable.BitmapDrawable val$drawable -> b
    float val$transitionAlpha -> d
    android.view.View val$view -> c
    445:445:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    448:450:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.c$c:
    87:87:void <init>(java.lang.Class,java.lang.String) -> <init>
    90:91:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> a
    95:95:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> a
    87:87:java.lang.Object get(java.lang.Object) -> get
    87:87:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.c$d:
    100:100:void <init>(java.lang.Class,java.lang.String) -> <init>
    103:104:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> a
    108:108:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> a
    100:100:java.lang.Object get(java.lang.Object) -> get
    100:100:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.c$e:
    113:113:void <init>(java.lang.Class,java.lang.String) -> <init>
    116:121:void set(android.view.View,android.graphics.PointF) -> a
    125:125:android.graphics.PointF get(android.view.View) -> a
    113:113:java.lang.Object get(java.lang.Object) -> get
    113:113:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.c$f:
    130:130:void <init>(java.lang.Class,java.lang.String) -> <init>
    133:138:void set(android.view.View,android.graphics.PointF) -> a
    142:142:android.graphics.PointF get(android.view.View) -> a
    130:130:java.lang.Object get(java.lang.Object) -> get
    130:130:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.c$g:
    147:147:void <init>(java.lang.Class,java.lang.String) -> <init>
    150:155:void set(android.view.View,android.graphics.PointF) -> a
    159:159:android.graphics.PointF get(android.view.View) -> a
    147:147:java.lang.Object get(java.lang.Object) -> get
    147:147:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.c$h:
    androidx.transition.ChangeBounds$ViewBounds val$viewBounds -> a
    323:326:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.c$i:
    int val$endRight -> f
    int val$endBottom -> g
    int val$endLeft -> d
    android.view.View val$view -> b
    int val$endTop -> e
    boolean mIsCanceled -> a
    android.graphics.Rect val$finalClip -> c
    367:367:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    372:373:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    377:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.c$j:
    android.view.ViewGroup val$parent -> b
    boolean mCanceled -> a
    391:392:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    410:411:void onTransitionPause(androidx.transition.Transition) -> a
    415:416:void onTransitionResume(androidx.transition.Transition) -> b
    402:406:void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.c$k:
    int mTopLeftCalls -> f
    int mBottomRightCalls -> g
    int mBottom -> d
    int mTop -> b
    android.view.View mView -> e
    int mRight -> c
    int mLeft -> a
    468:470:void <init>(android.view.View) -> <init>
    482:488:void setBottomRight(android.graphics.PointF) -> a
    491:494:void setLeftTopRightBottom() -> a
    473:479:void setTopLeft(android.graphics.PointF) -> b
androidx.transition.Fade -> androidx.transition.d:
    90:92:void <init>(int) -> <init>
    121:140:android.animation.Animator createAnimation(android.view.View,float,float) -> a
    152:156:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    168:175:float getStartAlpha(androidx.transition.TransitionValues,float) -> a
    162:164:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> b
    112:115:void captureStartValues(androidx.transition.TransitionValues) -> c
androidx.transition.Fade$1 -> androidx.transition.d$a:
    android.view.View val$view -> a
    132:132:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    135:138:void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.d$b:
    android.view.View mView -> a
    boolean mLayerTypeChanged -> b
    183:185:void <init>(android.view.View) -> <init>
    198:202:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    189:194:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.e:
    39:39:void <init>() -> <init>
    43:43:boolean canHandle(java.lang.Object) -> a
    99:120:void addTargets(java.lang.Object,java.util.ArrayList) -> a
    123:125:boolean hasSimpleTarget(androidx.transition.Transition) -> a
    147:175:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    182:204:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    210:211:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    218:249:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    265:287:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    291:295:void addTarget(java.lang.Object,android.view.View) -> a
    307:319:void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    48:52:java.lang.Object cloneTransition(java.lang.Object) -> b
    68:79:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> b
    131:141:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    254:260:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
    299:303:void removeTarget(java.lang.Object,android.view.View) -> b
    57:62:java.lang.Object wrapTransitionInSet(java.lang.Object) -> c
    83:95:void setEpicenter(java.lang.Object,android.view.View) -> c
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.e$a:
    88:88:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.e$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
    148:148:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    169:169:void onTransitionPause(androidx.transition.Transition) -> a
    173:173:void onTransitionResume(androidx.transition.Transition) -> b
    151:151:void onTransitionStart(androidx.transition.Transition) -> c
    155:161:void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.e$c:
    androidx.transition.FragmentTransitionSupport this$0 -> g
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    219:219:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    243:243:void onTransitionPause(androidx.transition.Transition) -> a
    247:247:void onTransitionResume(androidx.transition.Transition) -> b
    222:231:void onTransitionStart(androidx.transition.Transition) -> c
    235:235:void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.e$d:
    309:309:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.f:
    28:31:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> a
androidx.transition.PathMotion -> androidx.transition.g:
    43:44:void <init>() -> <init>
    android.graphics.Path getPath(float,float,float,float) -> a
androidx.transition.PathProperty -> androidx.transition.h:
    float mCurrentFraction -> f
    float mPathLength -> c
    float[] mPosition -> d
    android.util.Property mProperty -> a
    android.graphics.PathMeasure mPathMeasure -> b
    android.graphics.PointF mPointF -> e
    45:49:void <init>(android.util.Property,android.graphics.Path) -> <init>
    58:63:void set(java.lang.Object,java.lang.Float) -> a
    35:35:java.lang.Object get(java.lang.Object) -> get
    53:53:java.lang.Float get(java.lang.Object) -> get
    35:35:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.i:
    38:41:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> a
androidx.transition.RectEvaluator -> androidx.transition.j:
    android.graphics.Rect mRect -> a
    39:40:void <init>() -> <init>
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> a
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.transition.Scene -> androidx.transition.k:
    android.view.ViewGroup mSceneRoot -> a
    java.lang.Runnable mExitAction -> b
    149:154:void exit() -> a
    196:197:void setCurrentScene(android.view.View,androidx.transition.Scene) -> a
    207:207:androidx.transition.Scene getCurrentScene(android.view.View) -> a
androidx.transition.Transition -> androidx.transition.l:
    long mStartDelay -> e
    java.util.ArrayList mCurrentAnimators -> z
    java.util.ArrayList mEndValuesList -> x
    android.animation.TimeInterpolator mInterpolator -> g
    java.util.ArrayList mListeners -> D
    int mNumInstances -> A
    java.util.ArrayList mTargetNameExcludes -> o
    androidx.transition.TransitionPropagation mPropagation -> F
    java.util.ArrayList mTargetExcludes -> m
    java.util.ArrayList mTargetTypes -> k
    boolean mCanRemoveViews -> y
    java.util.ArrayList mTargets -> i
    androidx.collection.ArrayMap mNameOverrides -> H
    androidx.transition.TransitionValuesMaps mEndValues -> t
    java.util.ArrayList mStartValuesList -> w
    androidx.transition.PathMotion mPathMotion -> I
    java.util.ArrayList mTargetChildExcludes -> q
    boolean mEnded -> C
    androidx.transition.PathMotion STRAIGHT_PATH_MOTION -> K
    int[] mMatchOrder -> v
    long mDuration -> f
    java.util.ArrayList mAnimators -> E
    androidx.transition.TransitionSet mParent -> u
    java.lang.ThreadLocal sRunningAnimators -> L
    java.util.ArrayList mTargetTypeExcludes -> n
    java.util.ArrayList mTargetIdExcludes -> l
    java.util.ArrayList mTargetNames -> j
    java.util.ArrayList mTargetIds -> h
    androidx.transition.TransitionValuesMaps mStartValues -> s
    int[] DEFAULT_MATCH_ORDER -> J
    java.util.ArrayList mTargetTypeChildExcludes -> r
    boolean mPaused -> B
    java.lang.String mName -> d
    java.util.ArrayList mTargetIdChildExcludes -> p
    androidx.transition.Transition$EpicenterCallback mEpicenterCallback -> G
    163:204:void <clinit>() -> <clinit>
    262:263:void <init>() -> <init>
    void captureEndValues(androidx.transition.TransitionValues) -> a
    341:342:androidx.transition.Transition setDuration(long) -> a
    395:396:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> a
    486:486:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    564:581:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> a
    591:608:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> a
    618:635:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> a
    644:660:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> a
    664:687:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> a
    707:801:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> a
    894:910:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> a
    998:999:androidx.transition.Transition addTarget(android.view.View) -> a
    1468:1527:void captureValues(android.view.ViewGroup,boolean) -> a
    1531:1568:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> a
    1576:1585:void clearValues(boolean) -> a
    1682:1707:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> a
    1782:1823:void playTransition(android.view.ViewGroup) -> a
    1840:1861:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    1866:1884:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> a
    1899:1920:void animate(android.animation.Animator) -> a
    1958:1982:void end() -> a
    2037:2041:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> a
    2080:2085:void setPathMotion(androidx.transition.PathMotion) -> a
    2113:2114:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> a
    2159:2160:void setPropagation(androidx.transition.TransitionPropagation) -> a
    2249:2280:java.lang.String toString(java.lang.String) -> a
    354:354:long getDuration() -> b
    368:369:androidx.transition.Transition setStartDelay(long) -> b
    543:554:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> b
    814:841:boolean isValidTarget(android.view.View) -> b
    1663:1667:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> b
    2053:2060:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> b
    2184:2200:void capturePropagationValues(androidx.transition.TransitionValues) -> b
    void captureStartValues(androidx.transition.TransitionValues) -> c
    1598:1653:void captureHierarchy(android.view.View,boolean) -> c
    1719:1740:void pause(android.view.View) -> c
    2128:2128:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> c
    119:119:java.lang.Object clone() -> clone
    2219:2227:androidx.transition.Transition clone() -> clone
    409:409:android.animation.TimeInterpolator getInterpolator() -> d
    1096:1097:androidx.transition.Transition removeTarget(android.view.View) -> d
    1751:1774:void resume(android.view.View) -> e
    2245:2245:java.lang.String getName() -> e
    2098:2098:androidx.transition.PathMotion getPathMotion() -> f
    2176:2176:androidx.transition.TransitionPropagation getPropagation() -> g
    381:381:long getStartDelay() -> h
    1412:1412:java.util.List getTargetIds() -> i
    1441:1441:java.util.List getTargetNames() -> j
    1456:1456:java.util.List getTargetTypes() -> k
    1426:1426:java.util.List getTargets() -> l
    435:435:java.lang.String[] getTransitionProperties() -> m
    876:890:void runAnimators() -> n
    1931:1943:void start() -> o
    857:862:androidx.collection.ArrayMap getRunningAnimators() -> p
    2213:2213:java.lang.String toString() -> toString
androidx.transition.Transition$1 -> androidx.transition.l$a:
    170:170:void <init>() -> <init>
    173:176:android.graphics.Path getPath(float,float,float,float) -> a
androidx.transition.Transition$2 -> androidx.transition.l$b:
    androidx.transition.Transition this$0 -> b
    androidx.collection.ArrayMap val$runningAnimators -> a
    896:896:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    904:906:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    899:900:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.l$c:
    androidx.transition.Transition this$0 -> a
    1911:1911:void <init>(androidx.transition.Transition) -> <init>
    1914:1916:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.l$d:
    androidx.transition.WindowIdImpl mWindowId -> d
    android.view.View mView -> a
    androidx.transition.Transition mTransition -> e
    androidx.transition.TransitionValues mValues -> c
    java.lang.String mName -> b
    2363:2369:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.l$e:
    2426:2426:void <init>() -> <init>
androidx.transition.Transition$TransitionListener -> androidx.transition.l$f:
    void onTransitionPause(androidx.transition.Transition) -> a
    void onTransitionResume(androidx.transition.Transition) -> b
    void onTransitionStart(androidx.transition.Transition) -> c
    void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.TransitionListenerAdapter -> androidx.transition.m:
    27:27:void <init>() -> <init>
    43:43:void onTransitionPause(androidx.transition.Transition) -> a
    47:47:void onTransitionResume(androidx.transition.Transition) -> b
    31:31:void onTransitionStart(androidx.transition.Transition) -> c
androidx.transition.TransitionManager -> androidx.transition.n:
    java.lang.ThreadLocal sRunningTransitions -> b
    androidx.transition.Transition sDefaultTransition -> a
    java.util.ArrayList sPendingTransitions -> c
    83:90:void <clinit>() -> <clinit>
    200:211:androidx.collection.ArrayMap getRunningTransitions() -> a
    407:421:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> a
    216:221:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> b
    308:325:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> c
androidx.transition.TransitionManager$MultiListener -> androidx.transition.n$a:
    android.view.ViewGroup mSceneRoot -> e
    androidx.transition.Transition mTransition -> d
    238:241:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    244:246:void removeListeners() -> a
    268:302:boolean onPreDraw() -> onPreDraw
    250:250:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    254:264:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.n$a$a:
    androidx.collection.ArrayMap val$runningTransitions -> a
    androidx.transition.TransitionManager$MultiListener this$0 -> b
    287:287:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    290:292:void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.TransitionPropagation -> androidx.transition.o:
    void captureValues(androidx.transition.TransitionValues) -> a
    java.lang.String[] getPropagationProperties() -> a
    long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
androidx.transition.TransitionSet -> androidx.transition.p:
    boolean mPlayTogether -> N
    int mCurrentListeners -> O
    java.util.ArrayList mTransitions -> M
    boolean mStarted -> P
    int mChangeFlags -> Q
    109:110:void <init>() -> <init>
    61:61:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> a
    61:61:androidx.transition.Transition addTarget(android.view.View) -> a
    61:61:androidx.transition.Transition setDuration(long) -> a
    61:61:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> a
    176:193:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> a
    215:216:androidx.transition.Transition getTransitionAt(int) -> a
    231:238:androidx.transition.TransitionSet setDuration(long) -> a
    250:257:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> a
    263:266:androidx.transition.TransitionSet addTarget(android.view.View) -> a
    299:299:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> a
    382:387:void setPathMotion(androidx.transition.PathMotion) -> a
    456:473:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> a
    526:534:void captureEndValues(androidx.transition.TransitionValues) -> a
    610:616:void setPropagation(androidx.transition.TransitionPropagation) -> a
    620:626:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> a
    630:634:java.lang.String toString(java.lang.String) -> a
    61:61:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> b
    61:61:androidx.transition.Transition setStartDelay(long) -> b
    132:143:androidx.transition.TransitionSet setOrdering(int) -> b
    244:244:androidx.transition.TransitionSet setStartDelay(long) -> b
    377:377:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> b
    538:543:void capturePropagationValues(androidx.transition.TransitionValues) -> b
    514:522:void captureStartValues(androidx.transition.TransitionValues) -> c
    549:554:void pause(android.view.View) -> c
    61:61:java.lang.Object clone() -> clone
    639:645:androidx.transition.Transition clone() -> clone
    61:61:androidx.transition.Transition removeTarget(android.view.View) -> d
    314:317:androidx.transition.TransitionSet removeTarget(android.view.View) -> d
    560:565:void resume(android.view.View) -> e
    481:510:void runAnimators() -> n
    204:204:int getTransitionCount() -> p
    408:413:void setupStartEndListeners() -> q
androidx.transition.TransitionSet$1 -> androidx.transition.p$a:
    androidx.transition.Transition val$nextTransition -> a
    493:493:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    496:498:void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.p$b:
    androidx.transition.TransitionSet mTransitionSet -> a
    423:425:void <init>(androidx.transition.TransitionSet) -> <init>
    429:433:void onTransitionStart(androidx.transition.Transition) -> c
    437:444:void onTransitionEnd(androidx.transition.Transition) -> d
androidx.transition.TransitionUtils -> androidx.transition.q:
    boolean HAS_IS_ATTACHED_TO_WINDOW -> a
    boolean HAS_OVERLAY -> b
    boolean HAS_PICTURE_BITMAP -> c
    35:39:void <clinit>() -> <clinit>
    51:72:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> a
    93:140:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> a
    144:151:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> a
androidx.transition.TransitionValues -> androidx.transition.r:
    java.util.Map values -> a
    android.view.View view -> b
    java.util.ArrayList mTargetedTransitions -> c
    43:58:void <init>() -> <init>
    62:69:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    79:85:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.s:
    android.util.SparseArray mIdValues -> b
    androidx.collection.ArrayMap mNameValues -> d
    androidx.collection.ArrayMap mViewValues -> a
    androidx.collection.LongSparseArray mItemIdValues -> c
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi14 -> androidx.transition.t:
    28:29:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    32:32:androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> a
    37:38:void add(android.view.View) -> a
    42:43:void remove(android.view.View) -> b
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.u:
    android.view.ViewGroupOverlay mViewGroupOverlay -> a
    32:34:void <init>(android.view.ViewGroup) -> <init>
    38:39:void add(android.graphics.drawable.Drawable) -> a
    53:54:void add(android.view.View) -> a
    48:49:void remove(android.graphics.drawable.Drawable) -> b
    58:59:void remove(android.view.View) -> b
androidx.transition.ViewGroupOverlayImpl -> androidx.transition.v:
    void add(android.view.View) -> a
    void remove(android.view.View) -> b
androidx.transition.ViewGroupUtils -> androidx.transition.w:
    33:36:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> a
    43:48:void suppressLayout(android.view.ViewGroup,boolean) -> a
androidx.transition.ViewGroupUtilsApi14 -> androidx.transition.x:
    boolean sCancelMethodFetched -> e
    java.lang.reflect.Method sCancelMethod -> d
    java.lang.reflect.Field sLayoutSuppressedField -> b
    android.animation.LayoutTransition sEmptyLayoutTransition -> a
    boolean sLayoutSuppressedFieldFetched -> c
    45:106:void suppressLayout(android.view.ViewGroup,boolean) -> a
    109:127:void cancelLayoutTransition(android.animation.LayoutTransition) -> a
androidx.transition.ViewGroupUtilsApi14$1 -> androidx.transition.x$a:
    46:46:void <init>() -> <init>
    49:49:boolean isChangingLayout() -> isChangingLayout
androidx.transition.ViewGroupUtilsApi18 -> androidx.transition.y:
    boolean sSuppressLayoutMethodFetched -> b
    java.lang.reflect.Method sSuppressLayoutMethod -> a
    37:47:void suppressLayout(android.view.ViewGroup,boolean) -> a
    50:60:void fetchSuppressLayoutMethod() -> a
androidx.transition.ViewOverlayApi14 -> androidx.transition.z:
    androidx.transition.ViewOverlayApi14$OverlayViewGroup mOverlayViewGroup -> a
    47:49:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    89:90:void add(android.graphics.drawable.Drawable) -> a
    99:100:void remove(android.graphics.drawable.Drawable) -> b
    65:76:androidx.transition.ViewOverlayApi14 createFrom(android.view.View) -> c
    52:61:android.view.ViewGroup getContentView(android.view.View) -> d
androidx.transition.ViewOverlayApi14$OverlayViewGroup -> androidx.transition.z$a:
    android.view.ViewGroup mHostView -> d
    java.util.ArrayList mDrawables -> f
    android.view.View mRequestingView -> e
    androidx.transition.ViewOverlayApi14 mViewOverlay -> g
    134:139:void <clinit>() -> <clinit>
    158:165:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,androidx.transition.ViewOverlayApi14) -> <init>
    174:184:void add(android.graphics.drawable.Drawable) -> a
    200:224:void add(android.view.View) -> a
    241:242:boolean isEmpty() -> a
    282:288:void getOffset(int[]) -> a
    187:192:void remove(android.graphics.drawable.Drawable) -> b
    227:231:void remove(android.view.View) -> b
    252:265:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    170:170:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    330:344:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    247:248:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    270:270:void onLayout(boolean,int,int,int,int) -> onLayout
    196:196:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.transition.ViewOverlayApi18 -> androidx.transition.a0:
    android.view.ViewOverlay mViewOverlay -> a
    31:33:void <init>(android.view.View) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> a
    47:48:void remove(android.graphics.drawable.Drawable) -> b
androidx.transition.ViewOverlayImpl -> androidx.transition.b0:
    void add(android.graphics.drawable.Drawable) -> a
    void remove(android.graphics.drawable.Drawable) -> b
androidx.transition.ViewUtils -> androidx.transition.c0:
    android.util.Property TRANSITION_ALPHA -> d
    androidx.transition.ViewUtilsBase IMPL -> a
    java.lang.reflect.Field sViewFlagsField -> b
    boolean sViewFlagsFieldFetched -> c
    45:74:void <clinit>() -> <clinit>
    110:111:void setTransitionAlpha(android.view.View,float) -> a
    131:132:void clearNonTransitionAlpha(android.view.View) -> a
    148:157:void setTransitionVisibility(android.view.View,int) -> a
    172:173:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> a
    210:211:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> a
    214:223:void fetchViewFlagsField() -> a
    93:96:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> b
    188:189:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> b
    114:114:float getTransitionAlpha(android.view.View) -> c
    103:106:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> d
    122:123:void saveNonTransitionAlpha(android.view.View) -> e
androidx.transition.ViewUtils$1 -> androidx.transition.c0$a:
    60:60:void <init>(java.lang.Class,java.lang.String) -> <init>
    64:64:java.lang.Float get(android.view.View) -> a
    69:70:void set(android.view.View,java.lang.Float) -> a
    60:60:java.lang.Object get(java.lang.Object) -> get
    60:60:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.c0$b:
    75:75:void <init>(java.lang.Class,java.lang.String) -> <init>
    79:79:android.graphics.Rect get(android.view.View) -> a
    84:85:void set(android.view.View,android.graphics.Rect) -> a
    75:75:java.lang.Object get(java.lang.Object) -> get
    75:75:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.d0:
    java.lang.reflect.Method sGetTransitionAlphaMethod -> c
    boolean sSetTransitionAlphaMethodFetched -> b
    java.lang.reflect.Method sSetTransitionAlphaMethod -> a
    boolean sGetTransitionAlphaMethodFetched -> d
    29:29:void <init>() -> <init>
    40:52:void setTransitionAlpha(android.view.View,float) -> a
    77:77:void clearNonTransitionAlpha(android.view.View) -> a
    93:102:void fetchGetTransitionAlphaMethod() -> a
    56:66:float getTransitionAlpha(android.view.View) -> b
    80:90:void fetchSetTransitionAlphaMethod() -> b
    72:72:void saveNonTransitionAlpha(android.view.View) -> c
androidx.transition.ViewUtilsApi21 -> androidx.transition.e0:
    java.lang.reflect.Method sTransformMatrixToLocalMethod -> g
    boolean sTransformMatrixToGlobalMethodFetched -> f
    java.lang.reflect.Method sTransformMatrixToGlobalMethod -> e
    boolean sTransformMatrixToLocalMethodFetched -> h
    30:30:void <init>() -> <init>
    43:53:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> a
    84:94:void fetchTransformMatrixToGlobalMethod() -> a
    57:67:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> b
    97:107:void fetchTransformMatrixToLocalMethod() -> b
androidx.transition.ViewUtilsApi22 -> androidx.transition.f0:
    boolean sSetLeftTopRightBottomMethodFetched -> j
    java.lang.reflect.Method sSetLeftTopRightBottomMethod -> i
    29:29:void <init>() -> <init>
    38:48:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> a
    52:62:void fetchSetLeftTopRightBottomMethod() -> a
androidx.transition.ViewUtilsBase -> androidx.transition.g0:
    25:25:void <init>() -> <init>
    30:36:void setTransitionAlpha(android.view.View,float) -> a
    56:59:void clearNonTransitionAlpha(android.view.View) -> a
    62:73:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> a
    126:130:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> a
    39:43:float getTransitionAlpha(android.view.View) -> b
    76:90:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> b
    48:51:void saveNonTransitionAlpha(android.view.View) -> c
androidx.transition.Visibility -> androidx.transition.h0:
    java.lang.String[] sTransitionProperties -> N
    int mMode -> M
    81:81:void <clinit>() -> <clinit>
    100:101:void <init>() -> <init>
    android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    124:125:void setMode(int) -> a
    163:164:void captureEndValues(androidx.transition.TransitionValues) -> a
    248:260:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    281:282:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> a
    464:475:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> b
    193:241:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> b
    338:438:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> b
    158:159:void captureStartValues(androidx.transition.TransitionValues) -> c
    148:154:void captureValues(androidx.transition.TransitionValues) -> d
    144:144:java.lang.String[] getTransitionProperties() -> m
androidx.transition.Visibility$1 -> androidx.transition.h0$a:
    androidx.transition.ViewGroupOverlayImpl val$overlay -> a
    android.view.View val$finalOverlayView -> b
    413:413:void <init>(androidx.transition.Visibility,androidx.transition.ViewGroupOverlayImpl,android.view.View) -> <init>
    416:417:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Visibility$DisappearListener -> androidx.transition.h0$b:
    android.view.ViewGroup mParent -> c
    android.view.View mView -> a
    boolean mLayoutSuppressed -> e
    boolean mCanceled -> f
    int mFinalVisibility -> b
    boolean mSuppressLayout -> d
    490:497:void <init>(android.view.View,int,boolean) -> <init>
    552:553:void onTransitionPause(androidx.transition.Transition) -> a
    561:570:void hideViewWhenNotCanceled() -> a
    573:577:void suppressLayout(boolean) -> a
    557:558:void onTransitionResume(androidx.transition.Transition) -> b
    538:538:void onTransitionStart(androidx.transition.Transition) -> c
    542:544:void onTransitionEnd(androidx.transition.Transition) -> d
    519:520:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    532:533:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    503:506:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    524:524:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    512:515:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    528:528:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.h0$c:
    android.view.ViewGroup mEndParent -> f
    android.view.ViewGroup mStartParent -> e
    int mEndVisibility -> d
    boolean mVisibilityChange -> a
    boolean mFadeIn -> b
    int mStartVisibility -> c
    87:88:void <init>() -> <init>
androidx.transition.WindowIdApi14 -> androidx.transition.i0:
    android.os.IBinder mToken -> a
    25:27:void <init>(android.os.IBinder) -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
androidx.transition.WindowIdApi18 -> androidx.transition.j0:
    android.view.WindowId mWindowId -> a
    29:31:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.transition.WindowIdImpl -> androidx.transition.k0:
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.a.a.a:
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> f
    int[] STYLEABLE_ANIMATOR -> g
    int[] STYLEABLE_ANIMATOR_SET -> h
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> i
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> b
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> c
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> d
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> e
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> a
    int[] STYLEABLE_KEYFRAME -> j
    int[] STYLEABLE_PROPERTY_ANIMATOR -> k
    int[] STYLEABLE_PATH_INTERPOLATOR -> l
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.Animatable2Compat -> androidx.vectordrawable.a.a.b:
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.a.a.c:
    android.animation.ArgbEvaluator mArgbEvaluator -> g
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> e
    android.content.Context mContext -> f
    android.graphics.drawable.Drawable$Callback mCallback -> h
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    177:185:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    253:255:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    659:677:void setupColorAnimator(android.animation.Animator) -> a
    680:694:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> a
    520:525:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    530:534:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    418:421:int getIntrinsicHeight() -> getIntrinsicHeight
    410:413:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    402:405:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    444:510:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    515:516:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    426:429:boolean isAutoMirrored() -> isAutoMirrored
    698:702:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    329:334:void setAlpha(int) -> setAlpha
    434:439:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    707:719:void start() -> start
    723:729:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.a.a.c$a:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> d
    731:731:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    734:735:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    739:740:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    744:745:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.a.a.c$b:
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable -> b
    android.animation.AnimatorSet mAnimatorSet -> c
    androidx.collection.ArrayMap mTargetNameMap -> e
    java.util.ArrayList mAnimators -> d
    int mChangingConfigurations -> a
    597:628:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    646:650:void setupAnimatorSet() -> a
    642:642:int getChangingConfigurations() -> getChangingConfigurations
    632:632:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    637:637:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.a.a.c$c:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    546:548:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    579:579:boolean canApplyTheme() -> canApplyTheme
    584:584:int getChangingConfigurations() -> getChangingConfigurations
    552:556:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    561:565:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    570:574:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.a.a.d:
    67:95:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> a
    105:146:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.a.a.e:
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> a
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> a
    129:147:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> a
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> a
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> a
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> a
    436:447:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> a
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> a
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> a
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> a
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> a
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> a
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> a
    779:779:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> a
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> a
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> a
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> a
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> a
    917:917:boolean isColorType(int) -> a
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.a.a.e$a:
    androidx.core.graphics.PathParser$PathDataNode[] mNodeArray -> a
    166:167:void <init>() -> <init>
    185:186:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> a
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.a.a.f:
    androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance -> a
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> a
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.a.a.g:
    float[] mX -> a
    float[] mY -> b
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    123:127:void initQuad(float,float) -> a
    130:134:void initCubic(float,float,float,float) -> a
    137:143:void initPath(android.graphics.Path) -> a
    195:223:float getInterpolation(float) -> getInterpolation
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.a.a.h:
    android.graphics.drawable.Drawable mDelegateDrawable -> d
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.a.a.i:
    android.graphics.Matrix mTmpMatrix -> k
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> e
    android.graphics.PorterDuffColorFilter mTintFilter -> f
    boolean mAllowCaching -> i
    float[] mTmpFloats -> j
    android.graphics.Rect mTmpBounds -> l
    android.graphics.ColorFilter mColorFilter -> g
    boolean mMutated -> h
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> m
    280:280:void <clinit>() -> <clinit>
    321:323:void <init>() -> <init>
    325:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    345:345:java.lang.Object getTargetByName(java.lang.String) -> a
    477:478:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
    645:670:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    687:690:int applyAlpha(int,float) -> a
    734:736:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> a
    754:783:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    902:903:void setAllowCaching(boolean) -> a
    907:911:boolean needMirroring() -> a
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    681:683:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:369:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:532:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1 -> androidx.vectordrawable.a.a.i$a:
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.a.a.i$b:
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    1810:1810:boolean isClipPath() -> b
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.a.a.i$c:
    float mTrimPathEnd -> l
    float mTrimPathStart -> k
    float mFillAlpha -> j
    float mStrokeAlpha -> i
    android.graphics.Paint$Cap mStrokeLineCap -> n
    android.graphics.Paint$Join mStrokeLineJoin -> o
    float mStrokeWidth -> g
    int[] mThemeAttrs -> e
    androidx.core.content.res.ComplexColorCompat mFillColor -> h
    float mStrokeMiterlimit -> p
    androidx.core.content.res.ComplexColorCompat mStrokeColor -> f
    float mTrimPathOffset -> m
    1835:1837:void <init>() -> <init>
    1840:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    1859:1861:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> a
    1872:1874:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> a
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    1960:1960:boolean isStateful() -> a
    1965:1967:boolean onStateChanged(int[]) -> a
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.a.a.i$d:
    android.graphics.Matrix mLocalMatrix -> j
    float mTranslateY -> i
    float mTranslateX -> h
    float mScaleY -> g
    int mChangingConfigurations -> k
    float mScaleX -> f
    java.lang.String mGroupName -> m
    float mPivotY -> e
    float mPivotX -> d
    float mRotate -> c
    java.util.ArrayList mChildren -> b
    android.graphics.Matrix mStackedMatrix -> a
    int[] mThemeAttrs -> l
    1466:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1506:1507:void <init>() -> <init>
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    1664:1669:boolean isStateful() -> a
    1674:1678:boolean onStateChanged(int[]) -> a
    1563:1568:void updateLocalMatrix() -> b
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.a.a.i$e:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> a
    1438:1438:boolean onStateChanged(int[]) -> a
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.a.a.i$f:
    int mChangingConfigurations -> d
    androidx.core.graphics.PathParser$PathDataNode[] mNodes -> a
    java.lang.String mPathName -> b
    int mFillRule -> c
    1693:1695:void <init>() -> <init>
    1719:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1726:1730:void toPath(android.graphics.Path) -> a
    1744:1744:boolean isClipPath() -> b
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.a.a.i$g:
    android.graphics.Path mPath -> a
    float mViewportHeight -> l
    float mViewportWidth -> k
    float mBaseHeight -> j
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> h
    float mBaseWidth -> i
    int mRootAlpha -> m
    java.lang.Boolean mIsStateful -> o
    int mChangingConfigurations -> g
    java.lang.String mRootName -> n
    android.graphics.Matrix IDENTITY_MATRIX -> q
    android.graphics.Path mRenderPath -> b
    androidx.collection.ArrayMap mVGTargetsMap -> p
    android.graphics.PathMeasure mPathMeasure -> f
    android.graphics.Paint mFillPaint -> e
    android.graphics.Paint mStrokePaint -> d
    android.graphics.Matrix mFinalPathMatrix -> c
    1170:1170:void <clinit>() -> <clinit>
    1191:1195:void <init>() -> <init>
    1216:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1379:1379:float cross(float,float,float,float) -> a
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> a
    1412:1415:boolean isStateful() -> a
    1419:1419:boolean onStateChanged(int[]) -> a
    1213:1213:float getAlpha() -> getAlpha
    1202:1202:int getRootAlpha() -> getRootAlpha
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.a.a.i$h:
    android.content.res.ColorStateList mTint -> c
    boolean mCachedAutoMirrored -> j
    android.graphics.PorterDuff$Mode mCachedTintMode -> h
    boolean mCacheDirty -> k
    int mCachedRootAlpha -> i
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> b
    boolean mAutoMirrored -> e
    android.graphics.Bitmap mCachedBitmap -> f
    android.content.res.ColorStateList mCachedTint -> g
    android.graphics.PorterDuff$Mode mTintMode -> d
    android.graphics.Paint mTempPaint -> l
    int mChangingConfigurations -> a
    1033:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1121:1123:void <init>() -> <init>
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> a
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> a
    1093:1097:boolean canReuseBitmap(int,int) -> a
    1101:1108:boolean canReuseCache() -> a
    1147:1149:boolean onStateChanged(int[]) -> a
    1057:1057:boolean hasTranslucentRoot() -> b
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> b
    1078:1081:void updateCachedBitmap(int,int) -> c
    1143:1143:boolean isStateful() -> c
    1114:1119:void updateCacheStates() -> d
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.a.a.i$i:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> d
    60:60:void <clinit>() -> <clinit>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.a:
    androidx.collection.ArrayMap mParcelizerCache -> c
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    void closeField() -> a
    boolean readField(int) -> a
    void writeBoolean(boolean) -> a
    void writeByteArray(byte[]) -> a
    void writeCharSequence(java.lang.CharSequence) -> a
    void writeParcelable(android.os.Parcelable) -> a
    void writeString(java.lang.String) -> a
    269:269:void setSerializationFlags(boolean,boolean) -> a
    399:402:boolean readBoolean(boolean,int) -> a
    409:412:int readInt(int,int) -> a
    451:454:java.lang.String readString(java.lang.String,int) -> a
    472:475:byte[] readByteArray(byte[],int) -> a
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> a
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> a
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> a
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> a
    1565:1568:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> a
    1586:1589:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> a
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    void setOutputField(int) -> b
    294:296:void writeBoolean(boolean,int) -> b
    304:306:void writeByteArray(byte[],int) -> b
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> b
    334:336:void writeInt(int,int) -> b
    370:372:void writeString(java.lang.String,int) -> b
    391:393:void writeParcelable(android.os.Parcelable,int) -> b
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> b
    1040:1044:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> b
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> b
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> b
    void writeInt(int) -> c
    96:96:boolean isStream() -> c
    boolean readBoolean() -> d
    byte[] readByteArray() -> e
    java.lang.CharSequence readCharSequence() -> f
    int readInt() -> g
    android.os.Parcelable readParcelable() -> h
    java.lang.String readString() -> i
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> j
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.b:
    android.util.SparseIntArray mPositionLookup -> d
    java.lang.String mPrefix -> h
    int mNextRead -> j
    android.os.Parcel mParcel -> e
    int mFieldId -> k
    int mCurrentField -> i
    int mOffset -> f
    int mEnd -> g
    51:54:void <init>(android.os.Parcel) -> <init>
    60:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    70:84:boolean readField(int) -> a
    99:111:void closeField() -> a
    126:132:void writeByteArray(byte[]) -> a
    166:167:void writeString(java.lang.String) -> a
    176:177:void writeParcelable(android.os.Parcelable) -> a
    181:182:void writeBoolean(boolean) -> a
    196:197:void writeCharSequence(java.lang.CharSequence) -> a
    89:95:void setOutputField(int) -> b
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    146:147:void writeInt(int) -> c
    258:258:boolean readBoolean() -> d
    236:242:byte[] readByteArray() -> e
    201:201:java.lang.CharSequence readCharSequence() -> f
    206:206:int readInt() -> g
    248:248:android.os.Parcelable readParcelable() -> h
    226:226:java.lang.String readString() -> i
androidx.versionedparcelable.VersionedParcelable -> androidx.versionedparcelable.c:
androidx.viewbinding.ViewBinding -> a.h.a:
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.a:
    android.database.DataSetObservable mObservable -> a
    android.database.DataSetObserver mViewPagerObserver -> b
    81:82:void <init>() -> <init>
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    129:129:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    154:155:void finishUpdate(android.view.ViewGroup) -> a
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> a
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> a
    231:231:void finishUpdate(android.view.View) -> a
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    281:281:int getItemPosition(java.lang.Object) -> a
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> a
    332:332:java.lang.CharSequence getPageTitle(int) -> a
    99:100:void startUpdate(android.view.ViewGroup) -> b
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    166:166:void startUpdate(android.view.View) -> b
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    289:293:void notifyDataSetChanged() -> b
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> b
    343:343:float getPageWidth(int) -> b
    252:252:android.os.Parcelable saveState() -> c
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> c
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
    android.graphics.Paint mTabPaint -> z
    float mInitialMotionY -> H
    float mInitialMotionX -> G
    int mTouchSlop -> I
    int mFullUnderlineHeight -> E
    int mTabAlpha -> B
    android.graphics.Rect mTempRect -> A
    int mMinStripHeight -> x
    int mTabPadding -> y
    int mMinPaddingBottom -> v
    int mMinTextSpacing -> w
    boolean mIgnoreTap -> F
    int mIndicatorColor -> t
    int mIndicatorHeight -> u
    boolean mDrawFullUnderline -> C
    boolean mDrawFullUnderlineSet -> D
    83:84:void <init>(android.content.Context) -> <init>
    87:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    285:301:void updateTextPositions(int,float,boolean) -> a
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:281:void onDraw(android.graphics.Canvas) -> onDraw
    228:260:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:188:void setBackgroundColor(int) -> setBackgroundColor
    176:180:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:196:void setBackgroundResource(int) -> setBackgroundResource
    205:208:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:164:void setPadding(int,int,int,int) -> setPadding
    136:139:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:148:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:172:void setTextSpacing(int) -> setTextSpacing
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$a:
    androidx.viewpager.widget.PagerTabStrip this$0 -> d
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:114:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$b:
    androidx.viewpager.widget.PagerTabStrip this$0 -> d
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:122:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
    boolean mUpdatingPositions -> m
    float mLastKnownPositionOffset -> i
    int[] ATTRS -> r
    int mScaledTextSpacing -> j
    int[] TEXT_ATTRS -> s
    androidx.viewpager.widget.ViewPager mPager -> d
    int mGravity -> k
    androidx.viewpager.widget.PagerTitleStrip$PageListener mPageListener -> n
    int mLastKnownCurrentPage -> h
    boolean mUpdatingText -> l
    java.lang.ref.WeakReference mWatchingAdapter -> o
    android.widget.TextView mPrevText -> e
    android.widget.TextView mNextText -> g
    android.widget.TextView mCurrText -> f
    int mNonPrimaryAlpha -> p
    int mTextColor -> q
    73:80:void <clinit>() -> <clinit>
    109:110:void <init>(android.content.Context) -> <init>
    113:165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    221:224:void setTextSize(int,float) -> a
    268:304:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> a
    314:328:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> a
    331:416:void updateTextPositions(int,float,boolean) -> a
    463:468:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:243:void onAttachedToWindow() -> onAttachedToWindow
    258:265:void onDetachedFromWindow() -> onDetachedFromWindow
    456:460:void onLayout(boolean,int,int,int,int) -> onLayout
    420:422:void onMeasure(int,int) -> onMeasure
    308:311:void requestLayout() -> requestLayout
    233:235:void setGravity(int) -> setGravity
    190:194:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:106:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:208:void setTextColor(int) -> setTextColor
    173:175:void setTextSpacing(int) -> setTextSpacing
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$a:
    androidx.viewpager.widget.PagerTitleStrip this$0 -> b
    int mScrollState -> a
    475:476:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    480:485:void onPageScrolled(int,float,int) -> a
    500:501:void onPageScrollStateChanged(int) -> a
    506:507:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> a
    489:496:void onPageSelected(int) -> b
    511:515:void onChanged() -> onChanged
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$b:
    java.util.Locale mLocale -> d
    93:95:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    int mCloseEnough -> O
    androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    boolean mFakeDragging -> P
    android.widget.EdgeEffect mRightEdge -> R
    float mLastMotionX -> F
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.graphics.Rect mTempRect -> g
    int mExpectedAdapterCount -> d
    java.util.ArrayList mItems -> e
    int mDefaultGutterSize -> C
    boolean mCalledSuper -> T
    androidx.viewpager.widget.ViewPager$PagerObserver mObserver -> o
    boolean mPopulatePending -> y
    java.util.ArrayList mDrawingOrderedChildren -> f0
    java.lang.Runnable mEndScrollRunnable -> g0
    int mPageTransformerLayerType -> d0
    boolean mIsScrollStarted -> n
    int mMinimumVelocity -> L
    java.util.List mOnPageChangeListeners -> V
    int mScrollState -> h0
    float mLastMotionY -> G
    androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener -> a0
    int mCurItem -> i
    android.view.animation.Interpolator sInterpolator -> k0
    int mGutterSize -> D
    android.widget.EdgeEffect mLeftEdge -> Q
    int mOffscreenPageLimit -> z
    float mFirstOffset -> t
    int mChildHeightMeasureSpec -> v
    int mDecorChildCount -> U
    java.util.Comparator COMPARATOR -> j0
    int mTopPageBounds -> r
    android.graphics.drawable.Drawable mMarginDrawable -> q
    int mMaximumVelocity -> M
    int mRestoredCurItem -> j
    float mInitialMotionX -> H
    androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator -> l0
    boolean mInLayout -> w
    int mTouchSlop -> E
    float mLastOffset -> u
    boolean mIsBeingDragged -> A
    int mBottomPageBounds -> s
    androidx.viewpager.widget.PagerAdapter mAdapter -> h
    android.widget.Scroller mScroller -> m
    int mFlingDistance -> N
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mDrawingOrder -> e0
    androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer -> c0
    boolean mScrollingCacheEnabled -> x
    android.os.Parcelable mRestoredAdapterState -> k
    boolean mFirstLayout -> S
    int[] LAYOUT_ATTRS -> i0
    boolean mIsUnableToDrag -> B
    java.util.List mAdapterChangeListeners -> b0
    androidx.viewpager.widget.ViewPager$ItemInfo mTempItem -> f
    int mPageMargin -> p
    122:251:void <clinit>() -> <clinit>
    391:393:void <init>(android.content.Context) -> <init>
    396:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    622:624:void setCurrentItem(int,boolean) -> a
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> a
    635:637:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    676:696:void scrollToItem(int,boolean,int,boolean) -> a
    815:817:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> a
    927:929:float distanceInfluenceForSnapDuration(float) -> a
    950:1005:void smoothScrollTo(int,int,int) -> a
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> a
    1023:1089:void dataSetChanged() -> a
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> a
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> a
    1865:1920:void onPageScrolled(int,float,int) -> a
    1974:2008:void completeScroll(boolean) -> a
    2011:2011:boolean isGutterDrag(float,float) -> a
    2406:2421:int determineTargetPage(int,float,int,int) -> a
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> a
    2793:2855:boolean arrowScroll(int) -> a
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    581:585:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    401:475:void initViewPager() -> b
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> b
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> b
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> b
    2015:2021:void enableLayers(boolean) -> b
    2310:2355:boolean performDrag(float) -> b
    1096:1143:void populate(int) -> c
    1498:1499:boolean isDecorView(android.view.View) -> c
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> c
    2885:2889:boolean pageLeft() -> c
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1793:1815:void computeScroll() -> computeScroll
    1940:1954:void dispatchOnPageSelected(int) -> d
    2893:2897:boolean pageRight() -> d
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    1092:1093:void populate() -> e
    1957:1971:void dispatchOnScrollStateChanged(int) -> e
    1818:1844:boolean pageScrolled(int) -> f
    2659:2666:void endDrag() -> f
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    555:563:void removeNonDecorViews() -> h
    2294:2299:boolean resetTouch() -> i
    1282:1295:void sortChildDrawingOrder() -> j
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2038:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2181:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    594:597:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:739:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1509:void removeView(android.view.View) -> removeView
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$a:
    140:140:void <init>() -> <init>
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> a
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$b:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$c:
    androidx.viewpager.widget.ViewPager this$0 -> d
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$d:
    androidx.viewpager.widget.ViewPager this$0 -> b
    android.graphics.Rect mTempRect -> a
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
androidx.viewpager.widget.ViewPager$DecorView -> androidx.viewpager.widget.ViewPager$e:
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$f:
    float offset -> e
    float widthFactor -> d
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$g:
    int childIndex -> f
    float widthFactor -> c
    int position -> e
    boolean isDecor -> a
    int gravity -> b
    boolean needsMeasure -> d
    3145:3146:void <init>() -> <init>
    3149:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$h:
    androidx.viewpager.widget.ViewPager this$0 -> d
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    3066:3075:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    3087:3087:boolean canScroll() -> b
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener -> androidx.viewpager.widget.ViewPager$i:
    void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> a
androidx.viewpager.widget.ViewPager$OnPageChangeListener -> androidx.viewpager.widget.ViewPager$j:
    void onPageScrollStateChanged(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> b
androidx.viewpager.widget.ViewPager$PageTransformer -> androidx.viewpager.widget.ViewPager$k:
    void transformPage(android.view.View,float) -> a
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$l:
    androidx.viewpager.widget.ViewPager this$0 -> a
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    java.lang.ClassLoader loader -> h
    int position -> f
    android.os.Parcelable adapterState -> g
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$a:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener -> androidx.viewpager.widget.ViewPager$m:
    321:321:void <init>() -> <init>
    325:325:void onPageScrolled(int,float,int) -> a
    335:335:void onPageScrollStateChanged(int) -> a
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$n:
    3157:3157:void <init>() -> <init>
    3160:3165:int compare(android.view.View,android.view.View) -> a
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.viewpager2.adapter.FragmentStateAdapter -> androidx.viewpager2.adapter.a:
    boolean shouldDelayFragmentTransactions() -> f
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
    androidx.viewpager2.adapter.FragmentViewHolder val$holder -> a
    androidx.viewpager2.adapter.FragmentStateAdapter this$0 -> b
    293:297:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
    java.lang.Runnable val$runnable -> b
    android.os.Handler val$handler -> a
    516:520:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.viewpager2.adapter.FragmentViewHolder -> androidx.viewpager2.adapter.b:
    android.widget.FrameLayout getContainer() -> B
androidx.viewpager2.adapter.StatefulAdapter -> androidx.viewpager2.adapter.c:
    void restoreState(android.os.Parcelable) -> a
    android.os.Parcelable saveState() -> a
androidx.viewpager2.widget.AnimateLayoutChangeDetector -> androidx.viewpager2.widget.a:
    android.view.ViewGroup$MarginLayoutParams ZERO_MARGIN_LAYOUT_PARAMS -> b
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> a
    46:48:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    60:60:boolean mayHaveInterferingAnimations() -> a
    127:140:boolean hasRunningChangingLayoutTransition(android.view.View) -> a
    66:111:boolean arePagesLaidOutContiguously() -> b
    117:123:boolean hasRunningChangingLayoutTransition() -> c
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 -> androidx.viewpager2.widget.a$a:
    94:94:void <init>(androidx.viewpager2.widget.AnimateLayoutChangeDetector) -> <init>
    97:97:int compare(int[],int[]) -> a
    94:94:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.viewpager2.widget.CompositeOnPageChangeCallback -> androidx.viewpager2.widget.b:
    java.util.List mCallbacks -> a
    34:36:void <init>(int) -> <init>
    42:43:void addOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> a
    58:62:void onPageScrolled(int,float,int) -> a
    86:90:void onPageScrollStateChanged(int) -> a
    95:95:void throwCallbackListModifiedWhileInUse(java.util.ConcurrentModificationException) -> a
    72:76:void onPageSelected(int) -> b
androidx.viewpager2.widget.FakeDrag -> androidx.viewpager2.widget.c:
    androidx.viewpager2.widget.ScrollEventAdapter mScrollEventAdapter -> a
    44:48:void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ScrollEventAdapter,androidx.recyclerview.widget.RecyclerView) -> <init>
    51:51:boolean isFakeDragging() -> a
androidx.viewpager2.widget.PageTransformerAdapter -> androidx.viewpager2.widget.d:
    androidx.viewpager2.widget.ViewPager2$PageTransformer mPageTransformer -> b
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> a
    36:38:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    41:41:androidx.viewpager2.widget.ViewPager2$PageTransformer getPageTransformer() -> a
    53:54:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> a
    58:74:void onPageScrolled(int,float,int) -> a
    82:82:void onPageScrollStateChanged(int) -> a
    78:78:void onPageSelected(int) -> b
androidx.viewpager2.widget.ScrollEventAdapter -> androidx.viewpager2.widget.e:
    android.view.ViewGroup$MarginLayoutParams ZERO_MARGIN_LAYOUT_PARAMS -> k
    androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mCallback -> a
    androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues mScrollValues -> e
    boolean mScrollHappened -> i
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> b
    boolean mFakeDragging -> j
    int mDragStartPosition -> f
    int mTarget -> g
    int mScrollState -> d
    boolean mDispatchSelected -> h
    int mAdapterState -> c
    51:53:void <clinit>() -> <clinit>
    83:87:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    107:157:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> a
    165:201:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    261:274:void startDrag(boolean) -> a
    280:289:void notifyProgrammaticScroll(int,boolean) -> a
    327:328:void setOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> a
    378:379:float getRelativeScrollPosition() -> a
    402:405:void dispatchSelected(int) -> a
    408:411:void dispatchScrolled(int,float,int) -> a
    331:331:int getScrollState() -> b
    387:399:void dispatchStateChanged(int) -> b
    354:354:boolean isFakeDragging() -> c
    338:338:boolean isIdle() -> d
    414:414:int getPosition() -> e
    363:363:boolean isInAnyDraggingState() -> f
    323:323:boolean isLayoutRTL() -> g
    90:98:void resetState() -> h
    208:258:void updateScrollEventValues() -> i
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues -> androidx.viewpager2.widget.e$a:
    float mOffset -> b
    int mOffsetPx -> c
    int mPosition -> a
    423:424:void <init>() -> <init>
    427:430:void reset() -> a
androidx.viewpager2.widget.ViewPager2 -> androidx.viewpager2.widget.ViewPager2:
    androidx.viewpager2.widget.CompositeOnPageChangeCallback mExternalPageChangeCallbacks -> f
    boolean mUserInputEnabled -> p
    int mPendingCurrentItem -> h
    android.os.Parcelable mPendingAdapterState -> i
    androidx.viewpager2.widget.PageTransformerAdapter mPageTransformerAdapter -> o
    int mCurrentItem -> g
    android.graphics.Rect mTmpChildRect -> e
    androidx.viewpager2.widget.FakeDrag mFakeDragger -> n
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> k
    android.graphics.Rect mTmpContainerRect -> d
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> j
    androidx.recyclerview.widget.PagerSnapHelper mPagerSnapHelper -> l
    androidx.viewpager2.widget.ScrollEventAdapter mScrollEventAdapter -> m
    int mOffscreenPageLimit -> q
    123:125:void <init>(android.content.Context) -> <init>
    128:130:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    133:135:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    145:191:void initialize(android.content.Context,android.util.AttributeSet) -> a
    479:480:void setCurrentItem(int,boolean) -> a
    629:629:boolean isFakeDragging() -> a
    219:224:void setOrientation(android.content.Context,android.util.AttributeSet) -> b
    670:670:boolean isUserInputEnabled() -> b
    763:771:void requestTransform() -> c
    199:199:androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener enforceChildFillListener() -> d
    286:298:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    263:281:void restorePendingState() -> e
    385:385:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    543:543:int getCurrentItem() -> getCurrentItem
    714:714:int getOffscreenPageLimit() -> getOffscreenPageLimit
    450:450:int getOrientation() -> getOrientation
    435:435:int getPageSize() -> getPageSize
    555:555:int getScrollState() -> getScrollState
    419:432:void onLayout(boolean,int,int,int,int) -> onLayout
    401:415:void onMeasure(int,int) -> onMeasure
    251:260:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    231:246:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    391:392:void onViewAdded(android.view.View) -> onViewAdded
    380:382:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    464:465:void setCurrentItem(int) -> setCurrentItem
    697:704:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    446:447:void setOrientation(int) -> setOrientation
    749:754:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> setPageTransformer
    660:661:void setUserInputEnabled(boolean) -> setUserInputEnabled
androidx.viewpager2.widget.ViewPager2$1 -> androidx.viewpager2.widget.ViewPager2$a:
    androidx.viewpager2.widget.ViewPager2 this$0 -> a
    173:173:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    176:177:void onPageSelected(int) -> b
androidx.viewpager2.widget.ViewPager2$2 -> androidx.viewpager2.widget.ViewPager2$b:
    199:199:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    202:206:void onChildViewAttachedToWindow(android.view.View) -> a
    214:214:void onChildViewDetachedFromWindow(android.view.View) -> b
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl -> androidx.viewpager2.widget.ViewPager2$c:
    androidx.viewpager2.widget.ViewPager2 this$0 -> I
    811:813:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    818:826:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> a
    832:838:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    843:852:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> a
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback -> androidx.viewpager2.widget.ViewPager2$d:
    888:888:void <init>() -> <init>
    900:900:void onPageScrolled(int,float,int) -> a
    918:918:void onPageScrollStateChanged(int) -> a
    909:909:void onPageSelected(int) -> b
androidx.viewpager2.widget.ViewPager2$PageTransformer -> androidx.viewpager2.widget.ViewPager2$e:
    void transformPage(android.view.View,float) -> a
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl -> androidx.viewpager2.widget.ViewPager2$f:
    androidx.viewpager2.widget.ViewPager2 this$0 -> e
    856:857:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    866:866:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl -> androidx.viewpager2.widget.ViewPager2$g:
    androidx.viewpager2.widget.ViewPager2 this$0 -> L0
    778:780:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    784:784:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    789:792:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    802:802:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    797:797:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.viewpager2.widget.ViewPager2$SavedState -> androidx.viewpager2.widget.ViewPager2$SavedState:
    android.os.Parcelable mAdapterState -> f
    int mRecyclerViewId -> d
    int mCurrentItem -> e
    334:334:void <clinit>() -> <clinit>
    307:309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    312:314:void <init>(android.os.Parcel) -> <init>
    317:318:void <init>(android.os.Parcelable) -> <init>
    321:324:void readValues(android.os.Parcel,java.lang.ClassLoader) -> a
    328:332:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager2.widget.ViewPager2$SavedState$1 -> androidx.viewpager2.widget.ViewPager2$SavedState$a:
    334:334:void <init>() -> <init>
    334:334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    334:334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    337:337:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    344:344:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    334:334:java.lang.Object[] newArray(int) -> newArray
    349:349:androidx.viewpager2.widget.ViewPager2$SavedState[] newArray(int) -> newArray
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition -> androidx.viewpager2.widget.ViewPager2$h:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> e
    int mPosition -> d
    874:877:void <init>(int,androidx.recyclerview.widget.RecyclerView) -> <init>
    881:882:void run() -> run
com.bumptech.glide.load.ImageHeaderParser$ImageType -> com.bumptech.glide.load.ImageHeaderParser$ImageType:
    25:24:void <clinit>() -> <clinit>
    41:43:void <init>(java.lang.String,int,boolean) -> <init>
    46:46:boolean hasAlpha() -> hasAlpha
    24:24:com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String) -> valueOf
    24:24:com.bumptech.glide.load.ImageHeaderParser$ImageType[] values() -> values
com.cuitianci.scanner.DataBinderMapperImpl -> com.cuitianci.scanner.a:
    android.util.SparseIntArray INTERNAL_LAYOUT_ID_LOOKUP -> a
    41:51:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    55:106:androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int) -> a
    111:112:androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int) -> a
    128:132:int getLayoutId(java.lang.String) -> a
    143:145:java.util.List collectDependencies() -> a
com.cuitianci.scanner.DataBinderMapperImpl$InnerLayoutIdLookup -> com.cuitianci.scanner.a$a:
    java.util.HashMap sKeys -> a
    158:168:void <clinit>() -> <clinit>
com.cuitianci.scanner.ScannerApplication -> com.cuitianci.scanner.ScannerApplication:
    6:6:void <init>() -> <init>
    9:11:void onCreate() -> onCreate
com.cuitianci.scanner.bean.NameCardBean -> com.cuitianci.scanner.b.a:
    java.lang.String name -> a
    java.lang.String company -> c
    java.lang.String position -> b
    java.lang.String addedTime -> d
    3:3:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    35:35:java.lang.String getAddedTime() -> a
    27:27:java.lang.String getCompany() -> b
    11:11:java.lang.String getName() -> c
    19:19:java.lang.String getPosition() -> d
com.cuitianci.scanner.databinding.ActivityMainBinding -> com.cuitianci.scanner.c.a:
    com.google.android.material.floatingactionbutton.FloatingActionButton fab -> v
    com.google.android.material.bottomnavigation.BottomNavigationView bottomNavigation -> u
    31:35:void <init>(java.lang.Object,android.view.View,int,com.google.android.material.bottomnavigation.BottomNavigationView,com.google.android.material.floatingactionbutton.FloatingActionButton,android.widget.FrameLayout) -> <init>
com.cuitianci.scanner.databinding.ActivityMainBindingImpl -> com.cuitianci.scanner.c.b:
    long mDirtyFlags -> x
    androidx.coordinatorlayout.widget.CoordinatorLayout mboundView0 -> w
    android.util.SparseIntArray sViewsWithIds -> z
    androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes -> y
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(androidx.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> b
    55:59:boolean hasPendingBindings() -> e
    47:49:void invalidateAll() -> i
com.cuitianci.scanner.databinding.FragmentAllNameCardBinding -> com.cuitianci.scanner.c.c:
    androidx.recyclerview.widget.RecyclerView rv -> u
    22:24:void <init>(java.lang.Object,android.view.View,int,androidx.recyclerview.widget.RecyclerView) -> <init>
com.cuitianci.scanner.databinding.FragmentAllNameCardBindingImpl -> com.cuitianci.scanner.c.d:
    androidx.constraintlayout.widget.ConstraintLayout mboundView0 -> v
    long mDirtyFlags -> w
    android.util.SparseIntArray sViewsWithIds -> y
    androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes -> x
    15:18:void <clinit>() -> <clinit>
    28:29:void <init>(androidx.databinding.DataBindingComponent,android.view.View) -> <init>
    31:39:void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    74:78:void executeBindings() -> b
    51:55:boolean hasPendingBindings() -> e
    43:45:void invalidateAll() -> i
com.cuitianci.scanner.databinding.FragmentCameraBinding -> com.cuitianci.scanner.c.e:
    30:34:void <init>(java.lang.Object,android.view.View,int,de.hdodenhof.circleimageview.CircleImageView,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.TextureView) -> <init>
com.cuitianci.scanner.databinding.FragmentCameraBindingImpl -> com.cuitianci.scanner.c.f:
    androidx.constraintlayout.widget.ConstraintLayout mboundView0 -> u
    androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes -> w
    long mDirtyFlags -> v
    android.util.SparseIntArray sViewsWithIds -> x
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(androidx.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> b
    55:59:boolean hasPendingBindings() -> e
    47:49:void invalidateAll() -> i
com.cuitianci.scanner.databinding.FragmentChooseGroupBinding -> com.cuitianci.scanner.c.g:
    17:18:void <init>(java.lang.Object,android.view.View,int) -> <init>
com.cuitianci.scanner.databinding.FragmentChooseGroupBindingImpl -> com.cuitianci.scanner.c.h:
    androidx.constraintlayout.widget.ConstraintLayout mboundView0 -> u
    androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes -> w
    long mDirtyFlags -> v
    android.util.SparseIntArray sViewsWithIds -> x
    15:17:void <clinit>() -> <clinit>
    27:28:void <init>(androidx.databinding.DataBindingComponent,android.view.View) -> <init>
    30:37:void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    72:76:void executeBindings() -> b
    49:53:boolean hasPendingBindings() -> e
    41:43:void invalidateAll() -> i
com.cuitianci.scanner.databinding.FragmentNameCardHolderBinding -> com.cuitianci.scanner.c.i:
    android.widget.EditText edtSearch -> u
    androidx.viewpager.widget.ViewPager viewPager -> w
    com.google.android.material.tabs.TabLayout tabLayout -> v
    30:34:void <init>(java.lang.Object,android.view.View,int,android.widget.EditText,com.google.android.material.tabs.TabLayout,androidx.viewpager.widget.ViewPager) -> <init>
com.cuitianci.scanner.databinding.FragmentNameCardHolderBindingImpl -> com.cuitianci.scanner.c.j:
    long mDirtyFlags -> y
    android.util.SparseIntArray sViewsWithIds -> A
    androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes -> z
    androidx.constraintlayout.widget.ConstraintLayout mboundView0 -> x
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(androidx.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> b
    55:59:boolean hasPendingBindings() -> e
    47:49:void invalidateAll() -> i
com.cuitianci.scanner.databinding.FragmentPersonalCenterBinding -> com.cuitianci.scanner.c.k:
    android.widget.ImageView ivBg -> w
    com.cuitianci.scanner.view.DynamicAddableChipGroup chipGroup -> v
    android.widget.TextView tvEdit -> y
    android.view.View cColorBg -> u
    androidx.core.widget.NestedScrollView nsv -> x
    65:79:void <init>(java.lang.Object,android.view.View,int,android.view.View,com.cuitianci.scanner.view.DynamicAddableChipGroup,com.google.android.material.card.MaterialCardView,com.google.android.material.card.MaterialCardView,com.google.android.material.card.MaterialCardView,android.widget.ImageView,android.widget.ImageView,androidx.core.widget.NestedScrollView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.view.View) -> <init>
com.cuitianci.scanner.databinding.FragmentPersonalCenterBindingImpl -> com.cuitianci.scanner.c.l:
    androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes -> B
    android.util.SparseIntArray sViewsWithIds -> C
    long mDirtyFlags -> A
    androidx.constraintlayout.widget.ConstraintLayout mboundView0 -> z
    15:30:void <clinit>() -> <clinit>
    40:41:void <init>(androidx.databinding.DataBindingComponent,android.view.View) -> <init>
    43:63:void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    98:102:void executeBindings() -> b
    75:79:boolean hasPendingBindings() -> e
    67:69:void invalidateAll() -> i
com.cuitianci.scanner.databinding.ItemNameCardBinding -> com.cuitianci.scanner.c.m:
    com.cuitianci.scanner.bean.NameCardBean mNameCard -> y
    android.widget.TextView tvCompany -> u
    android.widget.TextView tvPosition -> w
    android.widget.TextView tvName -> v
    android.widget.TextView tvTime -> x
    40:46:void <init>(java.lang.Object,android.view.View,int,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView) -> <init>
    void setNameCard(com.cuitianci.scanner.bean.NameCardBean) -> a
com.cuitianci.scanner.databinding.ItemNameCardBindingImpl -> com.cuitianci.scanner.c.n:
    androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes -> B
    android.util.SparseIntArray sViewsWithIds -> C
    long mDirtyFlags -> A
    androidx.constraintlayout.widget.ConstraintLayout mboundView0 -> z
    15:18:void <clinit>() -> <clinit>
    28:29:void <init>(androidx.databinding.DataBindingComponent,android.view.View) -> <init>
    31:47:void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    80:83:void setNameCard(com.cuitianci.scanner.bean.NameCardBean) -> a
    97:101:void executeBindings() -> b
    59:63:boolean hasPendingBindings() -> e
    51:53:void invalidateAll() -> i
com.cuitianci.scanner.db.AppDatabase -> com.cuitianci.scanner.db.AppDatabase:
    com.cuitianci.scanner.db.AppDatabase INSTANCE -> k
    com.cuitianci.scanner.db.AppDatabase$Companion Companion -> l
    11:11:void <init>() -> <init>
    11:11:void access$setINSTANCE$cp(com.cuitianci.scanner.db.AppDatabase) -> a
    com.cuitianci.scanner.db.dao.SearchHistoryDao searchHistoryDao() -> n
    11:11:com.cuitianci.scanner.db.AppDatabase access$getINSTANCE$cp() -> o
com.cuitianci.scanner.db.AppDatabase$Companion -> com.cuitianci.scanner.db.AppDatabase$a:
    15:15:void <init>() -> <init>
    15:15:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    20:20:com.cuitianci.scanner.db.AppDatabase getDatabase(android.content.Context) -> a
com.cuitianci.scanner.db.AppDatabase_Impl -> com.cuitianci.scanner.db.AppDatabase_Impl:
    com.cuitianci.scanner.db.dao.SearchHistoryDao _searchHistoryDao -> m
    27:27:void <init>() -> <init>
    27:27:java.util.List access$000(com.cuitianci.scanner.db.AppDatabase_Impl) -> a
    27:27:androidx.sqlite.db.SupportSQLiteDatabase access$302(com.cuitianci.scanner.db.AppDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> a
    32:95:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> a
    27:27:java.util.List access$100(com.cuitianci.scanner.db.AppDatabase_Impl) -> b
    27:27:void access$400(com.cuitianci.scanner.db.AppDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase) -> b
    27:27:java.util.List access$200(com.cuitianci.scanner.db.AppDatabase_Impl) -> c
    27:27:java.util.List access$500(com.cuitianci.scanner.db.AppDatabase_Impl) -> d
    100:102:androidx.room.InvalidationTracker createInvalidationTracker() -> d
    27:27:java.util.List access$600(com.cuitianci.scanner.db.AppDatabase_Impl) -> e
    27:27:java.util.List access$700(com.cuitianci.scanner.db.AppDatabase_Impl) -> f
    124:132:com.cuitianci.scanner.db.dao.SearchHistoryDao searchHistoryDao() -> n
com.cuitianci.scanner.db.AppDatabase_Impl$1 -> com.cuitianci.scanner.db.AppDatabase_Impl$a:
    com.cuitianci.scanner.db.AppDatabase_Impl this$0 -> b
    32:32:void <init>(com.cuitianci.scanner.db.AppDatabase_Impl,int) -> <init>
    35:38:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> a
    42:43:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> b
    47:52:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> c
    56:63:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> d
    72:72:void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> e
    67:68:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> f
    76:84:void validateMigration(androidx.sqlite.db.SupportSQLiteDatabase) -> g
com.cuitianci.scanner.db.dao.SearchHistoryDao -> com.cuitianci.scanner.db.a.a:
    int deleteHistory(java.lang.String) -> a
    androidx.lifecycle.LiveData getAllHistories() -> a
    void insertAll(com.cuitianci.scanner.db.entity.SearchHistory[]) -> a
com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl -> com.cuitianci.scanner.db.a.b:
    androidx.room.RoomDatabase __db -> a
    androidx.room.SharedSQLiteStatement __preparedStmtOfDeleteHistory -> c
    androidx.room.EntityInsertionAdapter __insertionAdapterOfSearchHistory -> b
    29:54:void <init>(androidx.room.RoomDatabase) -> <init>
    22:22:androidx.room.RoomDatabase access$000(com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl) -> a
    58:65:void insertAll(com.cuitianci.scanner.db.entity.SearchHistory[]) -> a
    70:86:int deleteHistory(java.lang.String) -> a
    91:93:androidx.lifecycle.LiveData getAllHistories() -> a
com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl$1 -> com.cuitianci.scanner.db.a.b$a:
    31:31:void <init>(com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl,androidx.room.RoomDatabase) -> <init>
    31:31:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> a
    39:45:void bind(androidx.sqlite.db.SupportSQLiteStatement,com.cuitianci.scanner.db.entity.SearchHistory) -> a
    34:34:java.lang.String createQuery() -> c
com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl$2 -> com.cuitianci.scanner.db.a.b$b:
    47:47:void <init>(com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl,androidx.room.RoomDatabase) -> <init>
    50:51:java.lang.String createQuery() -> c
com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl$3 -> com.cuitianci.scanner.db.a.b$c:
    androidx.room.RoomSQLiteQuery val$_statement -> a
    com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl this$0 -> b
    93:93:void <init>(com.cuitianci.scanner.db.dao.SearchHistoryDao_Impl,androidx.room.RoomSQLiteQuery) -> <init>
    93:93:java.lang.Object call() -> call
    96:114:java.util.List call() -> call
    119:120:void finalize() -> finalize
com.cuitianci.scanner.db.entity.SearchHistory -> com.cuitianci.scanner.db.b.a:
    java.lang.String history -> b
    int hId -> a
    7:7:void <init>(java.lang.String) -> <init>
    10:10:int getHId() -> a
    10:10:void setHId(int) -> a
    7:7:java.lang.String getHistory() -> b
com.cuitianci.scanner.ui.activity.BaseActivity -> com.cuitianci.scanner.ui.activity.BaseActivity:
    16:16:void <init>() -> <init>
    29:39:void setupToolbar(java.lang.String,java.lang.Integer) -> a
    45:46:void setActivityTitle(java.lang.String) -> a
    54:62:void initWindow(boolean) -> a
    19:21:void onCreate(android.os.Bundle) -> onCreate
com.cuitianci.scanner.ui.activity.MainActivity -> com.cuitianci.scanner.ui.activity.MainActivity:
    com.cuitianci.scanner.databinding.ActivityMainBinding binding -> t
    com.cuitianci.scanner.ui.fragment.NameCardHolderFragment nameCardHolderFragment -> u
    com.cuitianci.scanner.ui.fragment.PersonalCenterFragment personalCenterFragment -> v
    14:14:void <init>() -> <init>
    14:14:com.cuitianci.scanner.ui.fragment.NameCardHolderFragment access$getNameCardHolderFragment$p(com.cuitianci.scanner.ui.activity.MainActivity) -> a
    14:14:void access$setNameCardHolderFragment$p(com.cuitianci.scanner.ui.activity.MainActivity,com.cuitianci.scanner.ui.fragment.NameCardHolderFragment) -> a
    14:14:void access$setPersonalCenterFragment$p(com.cuitianci.scanner.ui.activity.MainActivity,com.cuitianci.scanner.ui.fragment.PersonalCenterFragment) -> a
    14:14:com.cuitianci.scanner.ui.fragment.PersonalCenterFragment access$getPersonalCenterFragment$p(com.cuitianci.scanner.ui.activity.MainActivity) -> b
    28:70:void setupViews() -> n
    74:84:void onBackPressed() -> onBackPressed
    21:24:void onCreate(android.os.Bundle) -> onCreate
com.cuitianci.scanner.ui.activity.MainActivity$onBackPressed$1 -> com.cuitianci.scanner.ui.activity.MainActivity$a:
    com.cuitianci.scanner.ui.activity.MainActivity this$0 -> d
    81:81:void onClick(android.content.DialogInterface,int) -> onClick
com.cuitianci.scanner.ui.activity.MainActivity$setupViews$1 -> com.cuitianci.scanner.ui.activity.MainActivity$b:
    com.cuitianci.scanner.ui.activity.MainActivity this$0 -> a
    29:42:boolean onNavigationItemSelected(android.view.MenuItem) -> a
com.cuitianci.scanner.ui.activity.MainActivity$setupViews$2 -> com.cuitianci.scanner.ui.activity.MainActivity$c:
    com.cuitianci.scanner.ui.activity.MainActivity this$0 -> d
    60:66:void onClick(android.view.View) -> onClick
com.cuitianci.scanner.ui.activity.SettingsActivity -> com.cuitianci.scanner.ui.activity.SettingsActivity:
    15:15:void <init>() -> <init>
    34:50:boolean onPreferenceStartFragment(androidx.preference.PreferenceFragmentCompat,androidx.preference.Preference) -> a
    19:26:void onCreate(android.os.Bundle) -> onCreate
    72:75:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.cuitianci.scanner.ui.activity.SettingsActivity$Companion -> com.cuitianci.scanner.ui.activity.SettingsActivity$a:
    78:78:void <init>() -> <init>
    78:78:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.cuitianci.scanner.ui.activity.SettingsActivity$SettingsFragment -> com.cuitianci.scanner.ui.activity.SettingsActivity$b:
    java.util.HashMap _$_findViewCache -> j0
    56:56:void <init>() -> <init>
    void onDestroyView() -> S
    58:59:void onCreatePreferences(android.os.Bundle,java.lang.String) -> a
    void _$_clearFindViewByIdCache() -> u0
com.cuitianci.scanner.ui.adapter.MyFragmentPagerAdapter -> com.cuitianci.scanner.d.a.a:
    java.util.List fragments -> h
    java.util.List titles -> g
    7:11:void <init>(androidx.fragment.app.FragmentManager,java.util.List,java.util.List) -> <init>
    18:18:int getCount() -> a
    22:22:java.lang.CharSequence getPageTitle(int) -> a
    14:14:androidx.fragment.app.Fragment getItem(int) -> c
com.cuitianci.scanner.ui.adapter.NameCardAdapter -> com.cuitianci.scanner.d.a.b:
    java.util.List nameCards -> c
    19:20:void <init>(android.content.Context,java.util.List) -> <init>
    27:32:void onBindViewHolder(com.cuitianci.scanner.ui.adapter.NameCardAdapter$ViewHolder,int) -> a
    19:19:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    19:19:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> b
    23:23:com.cuitianci.scanner.ui.adapter.NameCardAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> b
    35:35:int getItemCount() -> b
com.cuitianci.scanner.ui.adapter.NameCardAdapter$Companion -> com.cuitianci.scanner.d.a.b$a:
    47:47:void <init>() -> <init>
    47:47:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.cuitianci.scanner.ui.adapter.NameCardAdapter$ViewHolder -> com.cuitianci.scanner.d.a.b$b:
    com.cuitianci.scanner.databinding.ItemNameCardBinding binding -> t
    38:40:void <init>(com.cuitianci.scanner.ui.adapter.NameCardAdapter,android.view.View) -> <init>
    43:44:void bind(com.cuitianci.scanner.bean.NameCardBean) -> a
com.cuitianci.scanner.ui.adapter.NameCardAdapter$onBindViewHolder$1 -> com.cuitianci.scanner.d.a.b$c:
    int $position -> d
    28:30:void onClick(android.view.View) -> onClick
com.cuitianci.scanner.ui.fragment.AllNameCardFragment -> com.cuitianci.scanner.d.b.a:
    com.cuitianci.scanner.databinding.FragmentAllNameCardBinding binding -> b0
    java.util.ArrayList nameCardList -> c0
    java.util.HashMap _$_findViewCache -> e0
    com.cuitianci.scanner.ui.adapter.NameCardAdapter adapter -> d0
    com.cuitianci.scanner.ui.fragment.AllNameCardFragment$Companion Companion -> f0
    21:24:void <init>() -> <init>
    void onDestroyView() -> S
    21:21:com.cuitianci.scanner.ui.adapter.NameCardAdapter access$getAdapter$p(com.cuitianci.scanner.ui.fragment.AllNameCardFragment) -> a
    31:33:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    21:21:com.cuitianci.scanner.databinding.FragmentAllNameCardBinding access$getBinding$p(com.cuitianci.scanner.ui.fragment.AllNameCardFragment) -> b
    44:58:void onActivityCreated(android.os.Bundle) -> b
    21:21:java.util.ArrayList access$getNameCardList$p(com.cuitianci.scanner.ui.fragment.AllNameCardFragment) -> c
    void _$_clearFindViewByIdCache() -> n0
com.cuitianci.scanner.ui.fragment.AllNameCardFragment$Companion -> com.cuitianci.scanner.d.b.a$a:
    60:60:void <init>() -> <init>
    60:60:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:63:com.cuitianci.scanner.ui.fragment.AllNameCardFragment newInstance$app_debug() -> a
com.cuitianci.scanner.ui.fragment.AllNameCardFragment$onActivityCreated$1 -> com.cuitianci.scanner.d.b.a$b:
    com.cuitianci.scanner.ui.fragment.AllNameCardFragment this$0 -> a
    21:21:void onChanged(java.lang.Object) -> a
    49:57:void onChanged(java.util.List) -> a
com.cuitianci.scanner.ui.fragment.BaseFragment -> com.cuitianci.scanner.d.b.b:
    java.util.HashMap _$_findViewCache -> a0
    8:8:void <init>() -> <init>
    void onDestroyView() -> S
    11:21:void showViewNone(android.view.View,boolean) -> a
    void _$_clearFindViewByIdCache() -> n0
com.cuitianci.scanner.ui.fragment.ChooseGroupFragment -> com.cuitianci.scanner.d.b.c:
    com.cuitianci.scanner.databinding.FragmentChooseGroupBinding binding -> b0
    java.util.HashMap _$_findViewCache -> c0
    com.cuitianci.scanner.ui.fragment.ChooseGroupFragment$Companion Companion -> d0
    13:13:void <init>() -> <init>
    void onDestroyView() -> S
    22:24:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    28:33:void onActivityCreated(android.os.Bundle) -> b
    void _$_clearFindViewByIdCache() -> n0
com.cuitianci.scanner.ui.fragment.ChooseGroupFragment$Companion -> com.cuitianci.scanner.d.b.c$a:
    35:35:void <init>() -> <init>
    35:35:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    38:38:com.cuitianci.scanner.ui.fragment.ChooseGroupFragment newInstance$app_debug() -> a
com.cuitianci.scanner.ui.fragment.NameCardHolderFragment -> com.cuitianci.scanner.d.b.d:
    com.cuitianci.scanner.ui.fragment.NameCardHolderFragment$Companion Companion -> b0
    java.util.HashMap _$_findViewCache -> a0
    24:24:void <init>() -> <init>
    void onDestroyView() -> S
    31:43:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void _$_clearFindViewByIdCache() -> n0
com.cuitianci.scanner.ui.fragment.NameCardHolderFragment$Companion -> com.cuitianci.scanner.d.b.d$a:
    66:66:void <init>() -> <init>
    66:66:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    69:69:com.cuitianci.scanner.ui.fragment.NameCardHolderFragment newInstance() -> a
com.cuitianci.scanner.ui.fragment.NameCardHolderFragment$onCreateView$1 -> com.cuitianci.scanner.d.b.d$b:
    com.cuitianci.scanner.ui.fragment.NameCardHolderFragment this$0 -> a
    com.cuitianci.scanner.databinding.FragmentNameCardHolderBinding $binding -> b
    47:61:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.cuitianci.scanner.ui.fragment.PersonalCenterFragment -> com.cuitianci.scanner.d.b.e:
    int currentColor -> c0
    com.cuitianci.scanner.databinding.FragmentPersonalCenterBinding binding -> a0
    int mHeight -> b0
    java.util.HashMap _$_findViewCache -> d0
    21:21:void <init>() -> <init>
    void onDestroyView() -> S
    21:21:com.cuitianci.scanner.databinding.FragmentPersonalCenterBinding access$getBinding$p(com.cuitianci.scanner.ui.fragment.PersonalCenterFragment) -> a
    21:21:void access$setCurrentColor$p(com.cuitianci.scanner.ui.fragment.PersonalCenterFragment,int) -> a
    31:33:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    21:21:int access$getCurrentColor$p(com.cuitianci.scanner.ui.fragment.PersonalCenterFragment) -> b
    21:21:void access$setMHeight$p(com.cuitianci.scanner.ui.fragment.PersonalCenterFragment,int) -> b
    37:39:void onActivityCreated(android.os.Bundle) -> b
    21:21:int access$getMHeight$p(com.cuitianci.scanner.ui.fragment.PersonalCenterFragment) -> c
    void _$_clearFindViewByIdCache() -> n0
com.cuitianci.scanner.ui.fragment.PersonalCenterFragment$onActivityCreated$1 -> com.cuitianci.scanner.d.b.e$a:
    com.cuitianci.scanner.ui.fragment.PersonalCenterFragment this$0 -> a
    21:21:void onChanged(java.lang.Object) -> a
    42:51:void onChanged(java.util.List) -> a
com.cuitianci.scanner.ui.fragment.PersonalCenterFragment$onActivityCreated$1$1 -> com.cuitianci.scanner.d.b.e$a$a:
    com.cuitianci.scanner.ui.fragment.PersonalCenterFragment$onActivityCreated$1 this$0 -> d
    48:48:void onClick(android.view.View) -> onClick
com.cuitianci.scanner.ui.fragment.PersonalCenterFragment$onActivityCreated$2 -> com.cuitianci.scanner.d.b.e$b:
    com.cuitianci.scanner.ui.fragment.PersonalCenterFragment this$0 -> d
    55:55:void <init>(com.cuitianci.scanner.ui.fragment.PersonalCenterFragment) -> <init>
    58:59:void onGlobalLayout() -> onGlobalLayout
com.cuitianci.scanner.ui.fragment.PersonalCenterFragment$onActivityCreated$2$onGlobalLayout$1 -> com.cuitianci.scanner.d.b.e$b$a:
    com.cuitianci.scanner.ui.fragment.PersonalCenterFragment$onActivityCreated$2 this$0 -> a
    61:80:void onScrollChange(android.view.View,int,int,int,int) -> onScrollChange
com.cuitianci.scanner.ui.fragment.PersonalCenterFragment$onActivityCreated$3 -> com.cuitianci.scanner.d.b.e$c:
    com.cuitianci.scanner.ui.fragment.PersonalCenterFragment this$0 -> d
    95:97:void onClick(android.view.View) -> onClick
com.cuitianci.scanner.utils.ColorUtil -> com.cuitianci.scanner.e.a:
    com.cuitianci.scanner.utils.ColorUtil INSTANCE -> a
    11:11:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    22:30:int getXXColorOfBitmap(android.content.Context,android.graphics.Bitmap,float) -> a
com.cuitianci.scanner.utils.LogUtils -> com.cuitianci.scanner.e.b:
    com.cuitianci.scanner.utils.LogUtils INSTANCE -> a
    5:5:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    26:27:void e(java.lang.String) -> a
com.cuitianci.scanner.utils.StatusBarUtil -> com.cuitianci.scanner.e.c:
    com.cuitianci.scanner.utils.StatusBarUtil INSTANCE -> a
    11:11:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    19:28:void enableTranslucentStatusBar(android.app.Activity,boolean) -> a
com.cuitianci.scanner.view.DynamicAddableChipGroup -> com.cuitianci.scanner.view.DynamicAddableChipGroup:
    12:12:void <init>(android.content.Context) -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    25:39:void addHistoryChips(java.util.List,boolean,boolean,boolean,android.view.View$OnClickListener) -> a
com.cuitianci.scanner.viewmodel.AllNameCardViewModel -> com.cuitianci.scanner.f.a:
    androidx.lifecycle.MutableLiveData nameCardsLive -> b
    13:13:void <init>() -> <init>
    19:23:androidx.lifecycle.LiveData getNameCards() -> c
    30:35:void loadNameCards() -> d
com.cuitianci.scanner.viewmodel.ChooseGroupViewModel -> com.cuitianci.scanner.f.b:
    5:5:void <init>() -> <init>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.a.a:
    android.animation.TimeInterpolator LINEAR_INTERPOLATOR -> a
    android.animation.TimeInterpolator FAST_OUT_SLOW_IN_INTERPOLATOR -> b
    android.animation.TimeInterpolator FAST_OUT_LINEAR_IN_INTERPOLATOR -> c
    android.animation.TimeInterpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR -> d
    android.animation.TimeInterpolator DECELERATE_INTERPOLATOR -> e
    36:43:void <clinit>() -> <clinit>
    47:47:float lerp(float,float,float) -> a
    52:52:int lerp(int,int,float) -> a
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.a.b:
    37:47:void playTogether(android.animation.AnimatorSet,java.util.List) -> a
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.a.c:
    com.google.android.material.animation.ArgbEvaluatorCompat instance -> a
    28:28:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    38:38:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> a
    55:88:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    27:27:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.a.d:
    android.util.Property CHILDREN_ALPHA -> a
    37:37:void <clinit>() -> <clinit>
    41:42:void <init>(java.lang.String) -> <init>
    46:50:java.lang.Float get(android.view.ViewGroup) -> a
    56:64:void set(android.view.ViewGroup,java.lang.Float) -> a
    32:32:java.lang.Object get(java.lang.Object) -> get
    32:32:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.a.e:
    android.util.Property DRAWABLE_ALPHA_COMPAT -> b
    java.util.WeakHashMap alphaCache -> a
    34:34:void <clinit>() -> <clinit>
    40:41:void <init>() -> <init>
    45:51:java.lang.Integer get(android.graphics.drawable.Drawable) -> a
    56:61:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> a
    28:28:java.lang.Object get(java.lang.Object) -> get
    28:28:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.a.f:
    android.graphics.Matrix matrix -> a
    30:31:void <init>() -> <init>
    35:36:void set(android.widget.ImageView,android.graphics.Matrix) -> a
    40:41:android.graphics.Matrix get(android.widget.ImageView) -> a
    26:26:java.lang.Object get(java.lang.Object) -> get
    26:26:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.a.g:
    android.graphics.Matrix tempMatrix -> c
    float[] tempStartValues -> a
    float[] tempEndValues -> b
    25:28:void <init>() -> <init>
    32:39:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> a
com.google.android.material.animation.MotionSpec -> com.google.android.material.a.h:
    androidx.collection.SimpleArrayMap timings -> a
    androidx.collection.SimpleArrayMap propertyValues -> b
    66:71:void <init>() -> <init>
    92:93:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> a
    109:110:android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String) -> a
    122:123:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> a
    126:130:android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[]) -> a
    144:147:android.animation.ObjectAnimator getAnimator(java.lang.String,android.view.View,android.util.Property) -> a
    155:160:long getTotalDuration() -> a
    170:176:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> a
    183:196:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> a
    201:205:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> a
    209:214:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> a
    84:85:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> b
    99:99:boolean hasPropertyValues(java.lang.String) -> c
    76:76:boolean hasTiming(java.lang.String) -> d
    220:229:boolean equals(java.lang.Object) -> equals
    234:234:int hashCode() -> hashCode
    239:247:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.a.i:
    android.animation.TimeInterpolator interpolator -> c
    long duration -> b
    long delay -> a
    int repeatCount -> d
    int repeatMode -> e
    39:42:void <init>(long,long) -> <init>
    44:48:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:58:void apply(android.animation.Animator) -> a
    61:61:long getDelay() -> a
    81:86:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> a
    65:65:long getDuration() -> b
    100:102:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> b
    69:69:android.animation.TimeInterpolator getInterpolator() -> c
    73:73:int getRepeatCount() -> d
    77:77:int getRepeatMode() -> e
    114:118:boolean equals(java.lang.Object) -> equals
    140:145:int hashCode() -> hashCode
    150:166:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.a.j:
    float yAdjustment -> c
    float xAdjustment -> b
    int gravity -> a
    34:38:void <init>(int,float,float) -> <init>
com.google.android.material.animation.TransformationListener -> com.google.android.material.a.k:
    void onScaleChanged(android.view.View) -> a
    void onTranslationChanged(android.view.View) -> b
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    boolean liftable -> m
    boolean lifted -> n
    boolean liftOnScroll -> o
    androidx.core.view.WindowInsetsCompat lastInsets -> j
    int[] tmpStatesArray -> s
    int pendingAction -> i
    boolean liftableOverride -> l
    int downPreScrollRange -> f
    int downScrollRange -> g
    int currentOffset -> d
    int totalScrollRange -> e
    java.lang.ref.WeakReference liftOnScrollTargetView -> q
    android.animation.ValueAnimator elevationOverlayAnimator -> r
    android.graphics.drawable.Drawable statusBarForeground -> t
    boolean haveChildWithInterpolator -> h
    int liftOnScrollTargetViewId -> p
    java.util.List listeners -> k
    191:192:void <init>(android.content.Context) -> <init>
    195:196:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    199:271:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    545:546:void setExpanded(boolean,boolean) -> a
    549:554:void setExpanded(boolean,boolean,boolean) -> a
    589:589:boolean hasChildWithInterpolator() -> a
    723:739:void onOffsetChanged(int) -> a
    814:822:boolean setLiftedState(boolean) -> a
    827:847:void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> a
    886:890:boolean shouldLift(android.view.View) -> a
    967:980:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> a
    281:287:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> addOnOffsetChangedListener
    291:292:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> addOnOffsetChangedListener
    635:635:boolean hasScrollableChildren() -> b
    795:800:boolean setLiftableState(boolean) -> b
    863:863:boolean isLiftOnScroll() -> c
    558:558:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    946:947:void resetPendingAction() -> d
    380:389:void draw(android.graphics.Canvas) -> draw
    393:401:void drawableStateChanged() -> drawableStateChanged
    912:916:void clearLiftOnScrollTargetView() -> e
    896:908:android.view.View findLiftOnScrollTargetView() -> f
    485:490:boolean hasCollapsibleChild() -> g
    126:126:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    126:126:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    563:563:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    126:126:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    126:126:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    126:126:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    126:126:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    568:568:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    573:578:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    645:683:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    688:719:int getDownNestedScrollRange() -> getDownNestedScrollRange
    882:882:int getLiftOnScrollTargetViewId() -> getLiftOnScrollTargetViewId
    742:759:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    942:942:int getPendingAction() -> getPendingAction
    375:375:android.graphics.drawable.Drawable getStatusBarForeground() -> getStatusBarForeground
    938:938:float getTargetElevation() -> getTargetElevation
    951:951:int getTopInset() -> getTopInset
    598:631:int getTotalScrollRange() -> getTotalScrollRange
    640:640:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    495:498:void invalidateScrollRanges() -> h
    959:963:boolean shouldOffsetFirstChild() -> i
    764:780:int[] onCreateDrawableState(int) -> onCreateDrawableState
    583:586:void onDetachedFromWindow() -> onDetachedFromWindow
    450:482:void onLayout(boolean,int,int,int,int) -> onLayout
    420:446:void onMeasure(int,int) -> onMeasure
    303:306:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> removeOnOffsetChangedListener
    310:311:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> removeOnOffsetChangedListener
    512:516:void setElevation(float) -> setElevation
    530:531:void setExpanded(boolean) -> setExpanded
    858:859:void setLiftOnScroll(boolean) -> setLiftOnScroll
    871:874:void setLiftOnScrollTargetViewId(int) -> setLiftOnScrollTargetViewId
    502:503:void setOrientation(int) -> setOrientation
    324:339:void setStatusBarForeground(android.graphics.drawable.Drawable) -> setStatusBarForeground
    351:352:void setStatusBarForegroundColor(int) -> setStatusBarForegroundColor
    364:365:void setStatusBarForegroundResource(int) -> setStatusBarForegroundResource
    927:930:void setTargetElevation(float) -> setTargetElevation
    410:416:void setVisibility(int) -> setVisibility
    405:405:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$1 -> com.google.android.material.appbar.AppBarLayout$a:
    com.google.android.material.appbar.AppBarLayout this$0 -> a
    265:265:void <init>(com.google.android.material.appbar.AppBarLayout) -> <init>
    268:268:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
com.google.android.material.appbar.AppBarLayout$2 -> com.google.android.material.appbar.AppBarLayout$b:
    com.google.android.material.shape.MaterialShapeDrawable val$background -> a
    840:840:void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    843:844:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    int offsetToChildIndexOnLayout -> n
    int lastStartedType -> l
    android.animation.ValueAnimator offsetAnimator -> m
    boolean offsetToChildIndexOnLayoutIsMinHeight -> o
    com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback -> r
    int offsetDelta -> k
    java.lang.ref.WeakReference lastNestedScrollingChildRef -> q
    float offsetToChildIndexOnLayoutPerc -> p
    1217:1217:void <init>() -> <init>
    1220:1221:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1186:1186:int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> a
    1186:1186:boolean canDragView(android.view.View) -> a
    1186:1186:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    1186:1186:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> a
    1186:1186:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> a
    1186:1186:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> a
    1186:1186:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> a
    1186:1186:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> a
    1233:1248:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> a
    1253:1253:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> a
    1266:1285:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> a
    1298:1304:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> a
    1313:1323:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> a
    1339:1351:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> a
    1358:1384:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> a
    1453:1453:boolean checkFlag(int,int) -> a
    1464:1481:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> a
    1487:1539:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> a
    1544:1558:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> a
    1565:1569:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> a
    1588:1632:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> a
    1694:1733:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> a
    1753:1760:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> a
    1765:1773:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> a
    1807:1817:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> a
    1186:1186:int getMaxDragOffset(android.view.View) -> b
    1186:1186:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> b
    1186:1186:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> b
    1387:1403:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> b
    1573:1573:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> b
    1783:1802:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> b
    1186:1186:int getScrollRangeForDragFling(android.view.View) -> c
    1578:1578:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> c
    1641:1685:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> c
    1738:1749:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> c
    1778:1778:int getTopBottomOffsetForScrollingSibling() -> c
    1186:1186:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> d
    1407:1450:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> d
    1186:1186:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> e
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$a:
    com.google.android.material.appbar.AppBarLayout val$child -> b
    com.google.android.material.appbar.AppBarLayout$BaseBehavior this$0 -> c
    androidx.coordinatorlayout.widget.CoordinatorLayout val$coordinatorLayout -> a
    1370:1370:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1373:1375:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$b:
    boolean canDrag(com.google.android.material.appbar.AppBarLayout) -> a
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    float firstVisibleChildPercentageShown -> g
    int firstVisibleChildIndex -> f
    boolean firstVisibleChildAtMinimumHeight -> h
    1844:1844:void <clinit>() -> <clinit>
    1826:1830:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1833:1834:void <init>(android.os.Parcelable) -> <init>
    1838:1842:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$a:
    1845:1845:void <init>() -> <init>
    1845:1845:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1845:1845:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1848:1848:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1853:1853:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1845:1845:java.lang.Object[] newArray(int) -> newArray
    1858:1858:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener -> com.google.android.material.appbar.AppBarLayout$c:
    void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> a
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    1173:1174:void <init>() -> <init>
    1177:1178:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1167:1167:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> a
    1167:1167:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> a
    1167:1167:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> a
    1167:1167:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> a
    1167:1167:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> a
    1167:1167:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> a
    1167:1167:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> a
    1167:1167:boolean setTopAndBottomOffset(int) -> a
    1167:1167:int getTopAndBottomOffset() -> b
    1167:1167:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> b
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$d:
    android.view.animation.Interpolator scrollInterpolator -> b
    int scrollFlags -> a
    1067:1075:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1078:1079:void <init>(int,int) -> <init>
    1086:1087:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1090:1091:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1096:1097:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1130:1130:int getScrollFlags() -> a
    1152:1152:android.view.animation.Interpolator getScrollInterpolator() -> b
    1157:1157:boolean isCollapsible() -> c
com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener -> com.google.android.material.appbar.AppBarLayout$e:
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    1870:1870:void <init>() -> <init>
    1873:1880:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1868:1868:android.view.View findFirstDependency(java.util.List) -> a
    1868:1868:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    1868:1868:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> a
    1885:1885:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    1898:1913:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> a
    1917:1930:void offsetChildAsNeeded(android.view.View,android.view.View) -> a
    1955:1960:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> a
    1965:1971:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> a
    1890:1892:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    1934:1951:float getOverlapRatioForOffset(android.view.View) -> b
    1984:1990:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> b
    1976:1979:int getScrollRange(android.view.View) -> c
com.google.android.material.appbar.CollapsingToolbarLayout -> com.google.android.material.appbar.CollapsingToolbarLayout:
    com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper -> n
    int expandedMarginBottom -> l
    boolean collapsingTitleEnabled -> o
    androidx.appcompat.widget.Toolbar toolbar -> f
    boolean drawCollapsingTitle -> p
    int expandedMarginTop -> j
    int expandedMarginEnd -> k
    int expandedMarginStart -> i
    android.animation.ValueAnimator scrimAnimator -> u
    int toolbarId -> e
    boolean scrimsAreShown -> t
    android.view.View dummyView -> h
    android.graphics.Rect tmpRect -> m
    long scrimAnimationDuration -> v
    com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener onOffsetChangedListener -> x
    androidx.core.view.WindowInsetsCompat lastInsets -> z
    int currentOffset -> y
    int scrimVisibleHeightTrigger -> w
    int scrimAlpha -> s
    android.view.View toolbarDirectChild -> g
    android.graphics.drawable.Drawable contentScrim -> q
    boolean refreshToolbar -> d
    android.graphics.drawable.Drawable statusBarScrim -> r
    147:148:void <init>(android.content.Context) -> <init>
    151:152:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:245:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    279:294:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> a
    602:610:void setScrimsShown(boolean,boolean) -> a
    613:634:void animateScrim(int) -> a
    1232:1235:void updateScrimVisibility() -> a
    1238:1240:int getMaxOffsetForPinChild(android.view.View) -> a
    348:380:void ensureToolbar() -> b
    390:396:android.view.View findDirectChild(android.view.View) -> b
    511:516:int getHeightWithMargins(android.view.View) -> c
    1245:1246:void updateContentDescriptionFromTitle() -> c
    1104:1104:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    400:415:void updateDummyView() -> d
    520:525:com.google.android.material.appbar.ViewOffsetHelper getViewOffsetHelper(android.view.View) -> d
    299:323:void draw(android.graphics.Canvas) -> draw
    330:336:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    738:758:void drawableStateChanged() -> drawableStateChanged
    383:383:boolean isToolbarChild(android.view.View) -> e
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1109:1109:com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1114:1114:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1119:1119:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    858:858:int getCollapsedTitleGravity() -> getCollapsedTitleGravity
    920:920:android.graphics.Typeface getCollapsedTitleTypeface() -> getCollapsedTitleTypeface
    704:704:android.graphics.drawable.Drawable getContentScrim() -> getContentScrim
    905:905:int getExpandedTitleGravity() -> getExpandedTitleGravity
    1028:1028:int getExpandedTitleMarginBottom() -> getExpandedTitleMarginBottom
    1007:1007:int getExpandedTitleMarginEnd() -> getExpandedTitleMarginEnd
    965:965:int getExpandedTitleMarginStart() -> getExpandedTitleMarginStart
    986:986:int getExpandedTitleMarginTop() -> getExpandedTitleMarginTop
    935:935:android.graphics.Typeface getExpandedTitleTypeface() -> getExpandedTitleTypeface
    648:648:int getScrimAlpha() -> getScrimAlpha
    1099:1099:long getScrimAnimationDuration() -> getScrimAnimationDuration
    1068:1084:int getScrimVisibleHeightTrigger() -> getScrimVisibleHeightTrigger
    810:810:android.graphics.drawable.Drawable getStatusBarScrim() -> getStatusBarScrim
    548:548:java.lang.CharSequence getTitle() -> getTitle
    249:265:void onAttachedToWindow() -> onAttachedToWindow
    270:276:void onDetachedFromWindow() -> onDetachedFromWindow
    435:508:void onLayout(boolean,int,int,int,int) -> onLayout
    419:431:void onMeasure(int,int) -> onMeasure
    341:345:void onSizeChanged(int,int,int,int) -> onSizeChanged
    849:850:void setCollapsedTitleGravity(int) -> setCollapsedTitleGravity
    821:822:void setCollapsedTitleTextAppearance(int) -> setCollapsedTitleTextAppearance
    830:831:void setCollapsedTitleTextColor(int) -> setCollapsedTitleTextColor
    839:840:void setCollapsedTitleTextColor(android.content.res.ColorStateList) -> setCollapsedTitleTextColor
    914:915:void setCollapsedTitleTypeface(android.graphics.Typeface) -> setCollapsedTitleTypeface
    660:672:void setContentScrim(android.graphics.drawable.Drawable) -> setContentScrim
    682:683:void setContentScrimColor(int) -> setContentScrimColor
    693:694:void setContentScrimResource(int) -> setContentScrimResource
    877:878:void setExpandedTitleColor(int) -> setExpandedTitleColor
    896:897:void setExpandedTitleGravity(int) -> setExpandedTitleGravity
    1039:1041:void setExpandedTitleMarginBottom(int) -> setExpandedTitleMarginBottom
    1018:1020:void setExpandedTitleMarginEnd(int) -> setExpandedTitleMarginEnd
    976:978:void setExpandedTitleMarginStart(int) -> setExpandedTitleMarginStart
    997:999:void setExpandedTitleMarginTop(int) -> setExpandedTitleMarginTop
    868:869:void setExpandedTitleTextAppearance(int) -> setExpandedTitleTextAppearance
    886:887:void setExpandedTitleTextColor(android.content.res.ColorStateList) -> setExpandedTitleTextColor
    929:930:void setExpandedTitleTypeface(android.graphics.Typeface) -> setExpandedTitleTypeface
    637:645:void setScrimAlpha(int) -> setScrimAlpha
    1094:1095:void setScrimAnimationDuration(long) -> setScrimAnimationDuration
    1054:1059:void setScrimVisibleHeightTrigger(int) -> setScrimVisibleHeightTrigger
    589:590:void setScrimsShown(boolean) -> setScrimsShown
    718:734:void setStatusBarScrim(android.graphics.drawable.Drawable) -> setStatusBarScrim
    788:789:void setStatusBarScrimColor(int) -> setStatusBarScrimColor
    799:800:void setStatusBarScrimResource(int) -> setStatusBarScrimResource
    536:538:void setTitle(java.lang.CharSequence) -> setTitle
    561:567:void setTitleEnabled(boolean) -> setTitleEnabled
    767:776:void setVisibility(int) -> setVisibility
    762:762:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.CollapsingToolbarLayout$1 -> com.google.android.material.appbar.CollapsingToolbarLayout$a:
    com.google.android.material.appbar.CollapsingToolbarLayout this$0 -> a
    239:239:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    242:242:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
com.google.android.material.appbar.CollapsingToolbarLayout$2 -> com.google.android.material.appbar.CollapsingToolbarLayout$b:
    com.google.android.material.appbar.CollapsingToolbarLayout this$0 -> a
    622:622:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    625:626:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams -> com.google.android.material.appbar.CollapsingToolbarLayout$c:
    float parallaxMult -> b
    int collapseMode -> a
    1151:1162:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1165:1166:void <init>(int,int) -> <init>
    1173:1174:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1216:1217:void setParallaxMultiplier(float) -> a
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener -> com.google.android.material.appbar.CollapsingToolbarLayout$d:
    com.google.android.material.appbar.CollapsingToolbarLayout this$0 -> a
    1249:1249:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    1253:1286:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> a
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.a:
    java.lang.Runnable flingRunnable -> d
    int lastMotionY -> h
    int touchSlop -> i
    android.view.VelocityTracker velocityTracker -> j
    boolean isBeingDragged -> f
    int activePointerId -> g
    android.widget.OverScroller scroller -> e
    48:48:void <init>() -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean canDragView(android.view.View) -> a
    56:119:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
    229:229:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> a
    243:268:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> a
    int getMaxDragOffset(android.view.View) -> b
    int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> b
    124:139:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    int getScrollRangeForDragFling(android.view.View) -> c
    int getTopBottomOffsetForScrollingSibling() -> c
    199:199:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> c
    295:298:void ensureVelocityTracker() -> d
    void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> e
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.a$a:
    com.google.android.material.appbar.HeaderBehavior this$0 -> f
    android.view.View layout -> e
    androidx.coordinatorlayout.widget.CoordinatorLayout parent -> d
    304:307:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    311:320:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.b:
    int verticalLayoutGap -> f
    int overlayTop -> g
    android.graphics.Rect tempRect2 -> e
    android.graphics.Rect tempRect1 -> d
    45:45:void <init>() -> <init>
    48:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.view.View findFirstDependency(java.util.List) -> a
    59:103:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> a
    162:162:int getOverlapPixelsForOffset(android.view.View) -> a
    float getOverlapRatioForOffset(android.view.View) -> b
    109:151:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> b
    191:192:void setOverlayTop(int) -> b
    168:168:int resolveGravity(int) -> c
    174:174:int getScrollRange(android.view.View) -> c
    199:199:int getOverlayTop() -> c
    181:181:int getVerticalLayoutGap() -> d
    154:154:boolean shouldHeaderOverlapScrollingChild() -> e
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
    int DEF_STYLE_RES -> S
    58:58:void <clinit>() -> <clinit>
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:74:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:97:void initBackground(android.content.Context) -> a
    79:83:void setElevation(float) -> setElevation
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.c:
    int tempTopBottomOffset -> b
    com.google.android.material.appbar.ViewOffsetHelper viewOffsetHelper -> a
    int tempLeftRightOffset -> c
    32:32:void <init>() -> <init>
    35:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:58:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    67:72:boolean setTopAndBottomOffset(int) -> a
    63:64:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> b
    85:85:int getTopAndBottomOffset() -> b
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.d:
    android.view.View view -> a
    boolean verticalOffsetEnabled -> f
    int offsetTop -> d
    boolean horizontalOffsetEnabled -> g
    int offsetLeft -> e
    int layoutTop -> b
    int layoutLeft -> c
    40:42:void <init>(android.view.View) -> <init>
    51:53:void applyOffsets() -> a
    77:82:boolean setLeftAndRightOffset(int) -> a
    62:67:boolean setTopAndBottomOffset(int) -> b
    94:94:int getLayoutTop() -> b
    86:86:int getTopAndBottomOffset() -> c
    46:48:void onViewLayout() -> d
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.e:
    int[] STATE_LIST_ANIM_ATTRS -> a
    35:35:void <clinit>() -> <clinit>
    38:39:void setBoundsViewOutlineProvider(android.view.View) -> a
    43:55:void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int) -> a
    60:78:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> a
com.google.android.material.badge.BadgeDrawable -> com.google.android.material.badge.BadgeDrawable:
    int maxBadgeNumber -> o
    com.google.android.material.shape.MaterialShapeDrawable shapeDrawable -> e
    float badgeWidePadding -> j
    float badgeWithTextRadius -> i
    float badgeRadius -> h
    android.graphics.Rect tmpRect -> k
    com.google.android.material.internal.TextDrawableHelper textDrawableHelper -> f
    android.graphics.Rect badgeBounds -> g
    android.content.Context context -> d
    com.google.android.material.badge.BadgeDrawable$SavedState savedState -> l
    float badgeCenterY -> n
    float badgeCenterX -> m
    277:293:void <init>(android.content.Context) -> <init>
    198:200:com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeDrawable$SavedState) -> a
    229:243:void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState) -> a
    307:310:void updateBadgeCoordinates(android.view.View,android.view.ViewGroup) -> a
    330:336:void setBackgroundColor(int) -> a
    488:489:void onTextSizeChange() -> a
    506:519:java.lang.CharSequence getContentDescription(android.content.Context) -> a
    528:533:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> a
    555:563:void drawText(android.graphics.Canvas) -> a
    356:361:void setBadgeTextColor(int) -> b
    415:415:int getMaxCharacterCount() -> b
    583:600:void calculateBadgeCenterCoordinates(android.view.View,android.view.ViewGroup) -> b
    378:381:int getNumber() -> c
    425:432:void setMaxCharacterCount(int) -> c
    192:192:com.google.android.material.badge.BadgeDrawable$SavedState getSavedState() -> d
    393:400:void setNumber(int) -> d
    475:477:void draw(android.graphics.Canvas) -> draw
    365:365:boolean hasNumber() -> e
    524:525:void setTextAppearanceResource(int) -> e
    567:570:java.lang.String getBadgeText() -> f
    537:552:void updateBounds() -> g
    446:446:int getAlpha() -> getAlpha
    464:464:int getIntrinsicHeight() -> getIntrinsicHeight
    470:470:int getIntrinsicWidth() -> getIntrinsicWidth
    458:458:int getOpacity() -> getOpacity
    578:579:void updateMaxBadgeNumber() -> h
    436:436:boolean isStateful() -> isStateful
    493:493:boolean onStateChange(int[]) -> onStateChange
    451:454:void setAlpha(int) -> setAlpha
    442:442:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.google.android.material.badge.BadgeDrawable$SavedState -> com.google.android.material.badge.BadgeDrawable$SavedState:
    int contentDescriptionQuantityStrings -> j
    int maxCharacterCount -> h
    int alpha -> f
    int number -> g
    int backgroundColor -> d
    int badgeTextColor -> e
    java.lang.CharSequence contentDescriptionNumberless -> i
    161:161:void <clinit>() -> <clinit>
    140:149:void <init>(android.content.Context) -> <init>
    151:159:void <init>(android.os.Parcel) -> <init>
    130:130:int access$000(com.google.android.material.badge.BadgeDrawable$SavedState) -> a
    130:130:int access$002(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> a
    130:130:int access$100(com.google.android.material.badge.BadgeDrawable$SavedState) -> b
    130:130:int access$102(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> b
    130:130:int access$200(com.google.android.material.badge.BadgeDrawable$SavedState) -> c
    130:130:int access$202(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> c
    130:130:int access$300(com.google.android.material.badge.BadgeDrawable$SavedState) -> d
    130:130:int access$302(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> d
    176:176:int describeContents() -> describeContents
    130:130:int access$400(com.google.android.material.badge.BadgeDrawable$SavedState) -> e
    130:130:int access$402(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> e
    130:130:java.lang.CharSequence access$500(com.google.android.material.badge.BadgeDrawable$SavedState) -> f
    130:130:int access$600(com.google.android.material.badge.BadgeDrawable$SavedState) -> g
    181:188:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.badge.BadgeDrawable$SavedState$1 -> com.google.android.material.badge.BadgeDrawable$SavedState$a:
    162:162:void <init>() -> <init>
    162:162:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    165:165:com.google.android.material.badge.BadgeDrawable$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:java.lang.Object[] newArray(int) -> newArray
    170:170:com.google.android.material.badge.BadgeDrawable$SavedState[] newArray(int) -> newArray
com.google.android.material.badge.BadgeUtils -> com.google.android.material.badge.a:
    boolean USE_COMPAT_PARENT -> a
    41:41:void <clinit>() -> <clinit>
    58:63:void updateBadgeBounds(android.graphics.Rect,float,float,float,float) -> a
    74:80:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> a
    124:133:com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray) -> a
    148:158:android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context,com.google.android.material.internal.ParcelableSparseArray) -> a
    90:98:void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> b
    106:111:void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> c
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    android.view.ViewPropertyAnimator currentAnimator -> d
    int currentState -> b
    int additionalHiddenOffsetY -> c
    int height -> a
    49:49:void <init>() -> <init>
    52:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:36:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> a
    57:60:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    65:70:void setAdditionalHiddenOffsetY(android.view.View,int) -> a
    91:96:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> a
    121:135:void slideDown(android.view.View) -> a
    138:151:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> a
    79:79:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> b
    103:114:void slideUp(android.view.View) -> b
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$a:
    com.google.android.material.behavior.HideBottomViewOnScrollBehavior this$0 -> a
    145:145:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    148:149:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    androidx.customview.widget.ViewDragHelper viewDragHelper -> a
    com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener listener -> b
    float alphaEndSwipeDistance -> i
    float alphaStartSwipeDistance -> h
    float dragDismissThreshold -> g
    androidx.customview.widget.ViewDragHelper$Callback dragCallback -> j
    float sensitivity -> d
    boolean sensitivitySet -> e
    int swipeDirection -> f
    boolean interceptingEvents -> c
    38:207:void <init>() -> <init>
    122:123:void setSwipeDirection(int) -> a
    149:150:void setEndAlphaSwipeDistance(float) -> a
    166:185:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
    204:204:boolean canSwipeDismissView(android.view.View) -> a
    354:360:void ensureViewDragHelper(android.view.ViewGroup) -> a
    384:384:float clamp(float,float,float) -> a
    388:388:int clamp(int,int,int) -> a
    140:141:void setStartAlphaSwipeDistance(float) -> b
    190:194:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    403:403:float fraction(float,float,float) -> b
    112:113:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$a:
    com.google.android.material.behavior.SwipeDismissBehavior this$0 -> c
    int activePointerId -> b
    int originalCapturedViewLeft -> a
    208:212:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    222:231:void onViewCaptured(android.view.View,int) -> a
    243:265:void onViewReleased(android.view.View,float,float) -> a
    268:287:boolean shouldDismiss(android.view.View,float) -> a
    295:295:int getViewHorizontalDragRange(android.view.View) -> a
    300:326:int clampViewPositionHorizontal(android.view.View,int,int) -> a
    336:350:void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    217:217:boolean tryCaptureView(android.view.View,int) -> b
    331:331:int clampViewPositionVertical(android.view.View,int,int) -> b
    235:238:void onViewDragStateChanged(int) -> c
com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener -> com.google.android.material.behavior.SwipeDismissBehavior$b:
    void onDismiss(android.view.View) -> a
    void onDragStateChanged(int) -> a
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$c:
    com.google.android.material.behavior.SwipeDismissBehavior this$0 -> f
    boolean dismiss -> e
    android.view.View view -> d
    366:369:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    373:380:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    android.animation.Animator modeAnimator -> U
    android.animation.Animator menuAnimator -> V
    int animatingModeChangeCounter -> c0
    boolean fabAttached -> e0
    int fabAnimationMode -> a0
    boolean hideOnScroll -> b0
    com.google.android.material.bottomappbar.BottomAppBar$Behavior behavior -> f0
    android.animation.AnimatorListenerAdapter fabAnimationListener -> g0
    int DEF_STYLE_RES -> i0
    com.google.android.material.animation.TransformationListener fabTransformationListener -> h0
    java.util.ArrayList animationListeners -> d0
    com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable -> T
    int fabAlignmentMode -> W
    int fabOffsetEndMode -> S
    106:106:void <clinit>() -> <clinit>
    202:203:void <init>(android.content.Context) -> <init>
    206:207:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    210:248:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    104:104:int access$000(com.google.android.material.bottomappbar.BottomAppBar) -> a
    104:104:void access$1500(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    104:104:void access$200(com.google.android.material.bottomappbar.BottomAppBar,int,boolean) -> a
    104:104:float access$700(com.google.android.material.bottomappbar.BottomAppBar,int) -> a
    104:104:android.animation.Animator access$802(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> a
    104:104:void access$900(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> a
    520:523:void createFabDefaultXAnimation(int,java.util.List) -> a
    552:587:void maybeAnimateMenuView(int,boolean) -> a
    594:638:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> a
    691:711:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> a
    776:791:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    104:104:boolean access$100(com.google.android.material.bottomappbar.BottomAppBar) -> b
    439:445:boolean setFabDiameter(int) -> b
    545:549:void createFabTranslationXAnimation(int,java.util.List) -> b
    679:681:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> b
    104:104:com.google.android.material.floatingactionbutton.FloatingActionButton access$1000(com.google.android.material.bottomappbar.BottomAppBar) -> c
    645:646:float getFabTranslationX(int) -> c
    104:104:float access$1100(com.google.android.material.bottomappbar.BottomAppBar) -> d
    449:450:void maybeAnimateModeChange(int) -> d
    104:104:android.view.View access$1400(com.google.android.material.bottomappbar.BottomAppBar) -> e
    104:104:void access$1600(com.google.android.material.bottomappbar.BottomAppBar) -> f
    104:104:com.google.android.material.shape.MaterialShapeDrawable access$300(com.google.android.material.bottomappbar.BottomAppBar) -> g
    657:664:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    298:298:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    104:104:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    806:809:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    338:338:float getCradleVerticalOffset() -> getCradleVerticalOffset
    256:256:int getFabAlignmentMode() -> getFabAlignmentMode
    278:278:int getFabAnimationMode() -> getFabAnimationMode
    305:305:float getFabCradleMargin() -> getFabCradleMargin
    321:321:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    652:652:float getFabTranslationX() -> getFabTranslationX
    641:641:float getFabTranslationY() -> getFabTranslationY
    360:360:boolean getHideOnScroll() -> getHideOnScroll
    742:742:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    104:104:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$400(com.google.android.material.bottomappbar.BottomAppBar) -> h
    104:104:void access$500(com.google.android.material.bottomappbar.BottomAppBar) -> i
    104:104:void access$600(com.google.android.material.bottomappbar.BottomAppBar) -> j
    715:721:void cancelAnimations() -> l
    426:432:void dispatchAnimationEnd() -> m
    417:423:void dispatchAnimationStart() -> n
    485:486:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> o
    814:821:void onAttachedToWindow() -> onAttachedToWindow
    725:739:void onLayout(boolean,int,int,int,int) -> onLayout
    939:947:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    930:934:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    491:503:android.view.View findDependentView() -> p
    507:508:boolean isFabVisibleOrWillBeShown() -> q
    758:767:void setActionMenuViewPosition() -> r
    748:755:void setCutoutState() -> s
    293:294:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    347:352:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    384:389:void setElevation(float) -> setElevation
    267:270:void setFabAlignmentMode(int) -> setFabAlignmentMode
    289:290:void setFabAnimationMode(int) -> setFabAnimationMode
    312:316:void setFabCradleMargin(float) -> setFabCradleMargin
    326:330:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    369:370:void setHideOnScroll(boolean) -> setHideOnScroll
    801:801:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    796:796:void setTitle(java.lang.CharSequence) -> setTitle
com.google.android.material.bottomappbar.BottomAppBar$1 -> com.google.android.material.bottomappbar.BottomAppBar$a:
    com.google.android.material.bottomappbar.BottomAppBar this$0 -> a
    168:168:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    171:172:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$2 -> com.google.android.material.bottomappbar.BottomAppBar$b:
    com.google.android.material.bottomappbar.BottomAppBar this$0 -> a
    177:177:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    177:177:void onScaleChanged(android.view.View) -> a
    180:182:void onScaleChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    177:177:void onTranslationChanged(android.view.View) -> b
    186:198:void onTranslationChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> b
com.google.android.material.bottomappbar.BottomAppBar$3 -> com.google.android.material.bottomappbar.BottomAppBar$c:
    com.google.android.material.bottomappbar.BottomAppBar this$0 -> a
    469:469:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    477:478:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    472:473:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$d:
    com.google.android.material.bottomappbar.BottomAppBar this$0 -> b
    int val$targetMode -> a
    529:529:void <init>(com.google.android.material.bottomappbar.BottomAppBar,int) -> <init>
    532:539:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
com.google.android.material.bottomappbar.BottomAppBar$4$1 -> com.google.android.material.bottomappbar.BottomAppBar$d$a:
    com.google.android.material.bottomappbar.BottomAppBar$4 this$1 -> a
    533:533:void <init>(com.google.android.material.bottomappbar.BottomAppBar$4) -> <init>
    536:537:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> b
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$e:
    com.google.android.material.bottomappbar.BottomAppBar this$0 -> a
    574:574:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    582:584:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    577:578:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$f:
    com.google.android.material.bottomappbar.BottomAppBar this$0 -> e
    androidx.appcompat.widget.ActionMenuView val$actionMenuView -> b
    boolean cancelled -> a
    int val$targetMode -> c
    boolean val$targetAttached -> d
    613:613:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    618:619:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    623:626:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$g:
    com.google.android.material.bottomappbar.BottomAppBar this$0 -> a
    778:778:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    781:788:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$AnimationListener -> com.google.android.material.bottomappbar.BottomAppBar$h:
    void onAnimationEnd(com.google.android.material.bottomappbar.BottomAppBar) -> a
    void onAnimationStart(com.google.android.material.bottomappbar.BottomAppBar) -> b
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    java.lang.ref.WeakReference viewRef -> f
    android.view.View$OnLayoutChangeListener fabLayoutListener -> g
    android.graphics.Rect fabContentRect -> e
    872:874:void <init>() -> <init>
    877:879:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    827:827:java.lang.ref.WeakReference access$1200(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> a
    827:827:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    884:910:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> a
    922:922:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> a
    827:827:android.graphics.Rect access$1300(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> b
    827:827:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> b
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$a:
    com.google.android.material.bottomappbar.BottomAppBar$Behavior this$0 -> a
    833:833:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    837:842:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    int fabAlignmentMode -> f
    boolean fabAttached -> g
    970:970:void <clinit>() -> <clinit>
    954:955:void <init>(android.os.Parcelable) -> <init>
    958:961:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    965:968:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$a:
    971:971:void <init>() -> <init>
    971:971:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    971:971:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    974:974:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    979:979:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    971:971:java.lang.Object[] newArray(int) -> newArray
    984:984:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.a:
    float horizontalOffset -> h
    float cradleVerticalOffset -> g
    float fabDiameter -> f
    float fabMargin -> e
    float roundedCornerRadius -> d
    59:65:void <init>(float,float,float) -> <init>
    72:148:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> a
    191:191:float getCradleVerticalOffset() -> a
    200:201:void setCradleVerticalOffset(float) -> a
    204:204:float getFabCradleMargin() -> b
    208:209:void setFabCradleMargin(float) -> b
    212:212:float getFabCradleRoundedCornerRadius() -> c
    216:217:void setFabCradleRoundedCornerRadius(float) -> c
    157:157:float getFabDiameter() -> d
    167:168:void setFabDiameter(float) -> d
    172:173:void setHorizontalOffset(float) -> e
    182:182:float getHorizontalOffset() -> e
com.google.android.material.bottomnavigation.BottomNavigationItemView -> com.google.android.material.bottomnavigation.BottomNavigationItemView:
    android.content.res.ColorStateList iconTint -> o
    int itemPosition -> m
    boolean isShifting -> i
    int[] CHECKED_STATE_SET -> s
    float scaleDownFactor -> g
    float scaleUpFactor -> f
    int labelVisibilityMode -> h
    float shiftAmount -> e
    int defaultMargin -> d
    androidx.appcompat.view.menu.MenuItemImpl itemData -> n
    android.widget.ImageView icon -> j
    android.widget.TextView smallLabel -> k
    android.graphics.drawable.Drawable originalIconDrawable -> p
    com.google.android.material.badge.BadgeDrawable badgeDrawable -> r
    android.graphics.drawable.Drawable wrappedIconDrawable -> q
    android.widget.TextView largeLabel -> l
    56:56:void <clinit>() -> <clinit>
    80:81:void <init>(android.content.Context) -> <init>
    84:85:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:android.widget.ImageView access$000(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> a
    53:53:void access$100(com.google.android.material.bottomnavigation.BottomNavigationItemView,android.view.View) -> a
    131:143:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> a
    281:285:void setViewLayoutParams(android.view.View,int,int) -> a
    288:291:void setViewValues(android.view.View,float,float,int) -> a
    340:340:boolean prefersCondensedTitle() -> a
    381:384:void calculateTextScaleFactors(float,float) -> a
    458:462:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> a
    412:413:void removeBadge() -> b
    428:439:void tryAttachBadgeToAnchor(android.view.View) -> b
    416:416:boolean hasBadge() -> c
    442:454:void tryRemoveBadgeFromAnchor(android.view.View) -> c
    420:425:void tryUpdateBadgeBounds(android.view.View) -> d
    408:408:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    177:177:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    150:150:int getItemPosition() -> getItemPosition
    310:314:int[] onCreateDrawableState(int) -> onCreateDrawableState
    269:278:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    400:404:void setBadge(com.google.android.material.badge.BadgeDrawable) -> setBadge
    191:192:void setCheckable(boolean) -> setCheckable
    196:265:void setChecked(boolean) -> setChecked
    295:306:void setEnabled(boolean) -> setEnabled
    322:336:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    357:361:void setIconSize(int) -> setIconSize
    349:354:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    387:390:void setItemBackground(int) -> setItemBackground
    393:397:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    146:147:void setItemPosition(int) -> setItemPosition
    165:173:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    154:162:void setShifting(boolean) -> setShifting
    369:371:void setTextAppearanceActive(int) -> setTextAppearanceActive
    364:366:void setTextAppearanceInactive(int) -> setTextAppearanceInactive
    374:378:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    182:187:void setTitle(java.lang.CharSequence) -> setTitle
com.google.android.material.bottomnavigation.BottomNavigationItemView$1 -> com.google.android.material.bottomnavigation.BottomNavigationItemView$a:
    com.google.android.material.bottomnavigation.BottomNavigationItemView this$0 -> a
    108:108:void <init>(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> <init>
    120:123:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomnavigation.BottomNavigationMenu -> com.google.android.material.bottomnavigation.BottomNavigationMenu:
    34:35:void <init>(android.content.Context) -> <init>
    44:45:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    39:39:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.bottomnavigation.BottomNavigationMenuView -> com.google.android.material.bottomnavigation.BottomNavigationMenuView:
    int[] tempChildWidths -> y
    android.content.res.ColorStateList itemTextColorDefault -> t
    int activeItemMinWidth -> h
    int inactiveItemMinWidth -> f
    android.view.View$OnClickListener onClickListener -> j
    int[] CHECKED_STATE_SET -> C
    int itemTextAppearanceInactive -> u
    androidx.transition.TransitionSet set -> d
    com.google.android.material.bottomnavigation.BottomNavigationPresenter presenter -> A
    androidx.core.util.Pools$Pool itemPool -> k
    int selectedItemId -> o
    int labelVisibilityMode -> m
    android.content.res.ColorStateList itemIconTint -> q
    android.content.res.ColorStateList itemTextColorFromUser -> s
    androidx.appcompat.view.menu.MenuBuilder menu -> B
    int itemHeight -> i
    boolean itemHorizontalTranslationEnabled -> l
    int activeItemMaxWidth -> g
    int inactiveItemMaxWidth -> e
    com.google.android.material.bottomnavigation.BottomNavigationItemView[] buttons -> n
    android.util.SparseArray badgeDrawables -> z
    android.graphics.drawable.Drawable itemBackground -> w
    int[] DISABLED_STATE_SET -> D
    int itemBackgroundRes -> x
    int itemTextAppearanceActive -> v
    int itemIconSize -> r
    int selectedItemPosition -> p
    59:60:void <clinit>() -> <clinit>
    94:95:void <init>(android.content.Context) -> <init>
    98:129:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:55:com.google.android.material.bottomnavigation.BottomNavigationPresenter access$000(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> a
    133:134:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
    471:483:android.content.res.ColorStateList createDefaultColorStateList(int) -> a
    495:546:void buildMenuView() -> a
    597:597:boolean isShifting(int,int) -> a
    55:55:androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> b
    467:467:boolean isItemHorizontalTranslationEnabled() -> b
    603:613:void tryRestoreSelectedItemId(int) -> b
    549:550:void updateMenuView() -> c
    704:704:boolean isValidId(int) -> c
    678:690:void removeUnusedBadges() -> d
    616:616:android.util.SparseArray getBadgeDrawables() -> getBadgeDrawables
    260:260:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    412:417:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    388:388:int getItemBackgroundRes() -> getItemBackgroundRes
    282:282:int getItemIconSize() -> getItemIconSize
    363:363:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    334:334:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    305:305:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    444:444:int getLabelVisibilityMode() -> getLabelVisibilityMode
    585:589:com.google.android.material.bottomnavigation.BottomNavigationItemView getNewItem() -> getNewItem
    593:593:int getSelectedItemId() -> getSelectedItemId
    236:236:int getWindowAnimations() -> getWindowAnimations
    216:232:void onLayout(boolean,int,int,int,int) -> onLayout
    138:212:void onMeasure(int,int) -> onMeasure
    620:621:void setBadgeDrawables(android.util.SparseArray) -> setBadgeDrawables
    665:675:void setBadgeIfNeeded(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> setBadgeIfNeeded
    245:251:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    397:403:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    372:378:void setItemBackgroundRes(int) -> setItemBackgroundRes
    456:457:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    271:277:void setItemIconSize(int) -> setItemIconSize
    343:354:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    314:325:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    291:297:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    435:436:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    491:492:void setPresenter(com.google.android.material.bottomnavigation.BottomNavigationPresenter) -> setPresenter
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1 -> com.google.android.material.bottomnavigation.BottomNavigationMenuView$a:
    com.google.android.material.bottomnavigation.BottomNavigationMenuView this$0 -> d
    118:118:void <init>(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> <init>
    121:126:void onClick(android.view.View) -> onClick
com.google.android.material.bottomnavigation.BottomNavigationPresenter -> com.google.android.material.bottomnavigation.BottomNavigationPresenter:
    com.google.android.material.bottomnavigation.BottomNavigationMenuView menuView -> e
    androidx.appcompat.view.menu.MenuBuilder menu -> d
    boolean updateSuspended -> f
    int id -> g
    39:42:void <init>() -> <init>
    46:47:void setBottomNavigationMenuView(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> a
    51:53:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    62:70:void updateMenuView(boolean) -> a
    77:77:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    81:81:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    95:95:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    99:100:void setId(int) -> a
    104:104:int getId() -> a
    118:125:void onRestoreInstanceState(android.os.Parcelable) -> a
    85:85:boolean flagActionItems() -> b
    90:90:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    128:129:void setUpdateSuspended(boolean) -> b
    109:113:android.os.Parcelable onSaveInstanceState() -> c
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState:
    com.google.android.material.internal.ParcelableSparseArray badgeSavedStates -> e
    int selectedItemId -> d
    153:153:void <clinit>() -> <clinit>
    135:135:void <init>() -> <init>
    137:140:void <init>(android.os.Parcel) -> <init>
    144:144:int describeContents() -> describeContents
    149:151:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$a:
    154:154:void <init>() -> <init>
    154:154:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    157:157:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    154:154:java.lang.Object[] newArray(int) -> newArray
    162:162:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomnavigation.BottomNavigationView -> com.google.android.material.bottomnavigation.BottomNavigationView:
    com.google.android.material.bottomnavigation.BottomNavigationMenuView menuView -> e
    com.google.android.material.bottomnavigation.BottomNavigationPresenter presenter -> f
    androidx.appcompat.view.menu.MenuBuilder menu -> d
    int DEF_STYLE_RES -> k
    com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener selectedListener -> i
    android.content.res.ColorStateList itemRippleColor -> g
    com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener reselectedListener -> j
    android.view.MenuInflater menuInflater -> h
    112:112:void <clinit>() -> <clinit>
    125:126:void <init>(android.content.Context) -> <init>
    129:130:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    133:244:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    110:110:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener access$000(com.google.android.material.bottomnavigation.BottomNavigationView) -> a
    311:315:void inflateMenu(int) -> a
    683:692:void addCompatibilityTopDivider(android.content.Context) -> a
    110:110:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener access$100(com.google.android.material.bottomnavigation.BottomNavigationView) -> b
    247:254:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(android.content.Context) -> b
    436:436:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    412:412:int getItemBackgroundResource() -> getItemBackgroundResource
    375:375:int getItemIconSize() -> getItemIconSize
    330:330:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    460:460:android.content.res.ColorStateList getItemRippleColor() -> getItemRippleColor
    593:593:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    574:574:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    388:388:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    555:555:int getLabelVisibilityMode() -> getLabelVisibilityMode
    319:319:int getMaxItemCount() -> getMaxItemCount
    300:300:android.view.Menu getMenu() -> getMenu
    695:698:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    508:508:int getSelectedItemId() -> getSelectedItemId
    712:719:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    703:707:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    265:270:void setElevation(float) -> setElevation
    448:450:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    424:426:void setItemBackgroundResource(int) -> setItemBackgroundResource
    604:608:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    352:353:void setItemIconSize(int) -> setItemIconSize
    364:365:void setItemIconSizeRes(int) -> setItemIconSizeRes
    340:341:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    472:499:void setItemRippleColor(android.content.res.ColorStateList) -> setItemRippleColor
    583:584:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    564:565:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    399:400:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    541:545:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    294:295:void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener) -> setOnNavigationItemReselectedListener
    282:283:void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener) -> setOnNavigationItemSelectedListener
    518:524:void setSelectedItemId(int) -> setSelectedItemId
com.google.android.material.bottomnavigation.BottomNavigationView$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$a:
    com.google.android.material.bottomnavigation.BottomNavigationView this$0 -> d
    231:231:void <init>(com.google.android.material.bottomnavigation.BottomNavigationView) -> <init>
    234:238:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    242:242:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener -> com.google.android.material.bottomnavigation.BottomNavigationView$b:
    void onNavigationItemReselected(android.view.MenuItem) -> a
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener -> com.google.android.material.bottomnavigation.BottomNavigationView$c:
    boolean onNavigationItemSelected(android.view.MenuItem) -> a
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState:
    android.os.Bundle menuPresenterState -> f
    743:743:void <clinit>() -> <clinit>
    725:726:void <init>(android.os.Parcelable) -> <init>
    729:731:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    740:741:void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    735:737:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$a:
    744:744:void <init>() -> <init>
    744:744:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    744:744:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    747:747:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    752:752:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    744:744:java.lang.Object[] newArray(int) -> newArray
    757:757:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    int fitToContentsOffset -> l
    int DEF_STYLE_RES -> I
    com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable -> h
    int peekHeightMin -> f
    boolean ignoreEvents -> u
    float maximumVelocity -> c
    int peekHeight -> d
    boolean nestedScrolled -> w
    int initialY -> E
    boolean hideable -> q
    java.lang.ref.WeakReference viewRef -> z
    android.animation.ValueAnimator interpolatorAnimator -> j
    int parentHeight -> y
    boolean fitToContents -> b
    int state -> s
    int collapsedOffset -> o
    com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback callback -> B
    int halfExpandedOffset -> m
    int expandedOffset -> k
    int activePointerId -> D
    boolean skipCollapsed -> r
    android.view.VelocityTracker velocityTracker -> C
    int saveFlags -> a
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModelDefault -> i
    androidx.customview.widget.ViewDragHelper$Callback dragCallback -> H
    androidx.customview.widget.ViewDragHelper viewDragHelper -> t
    int parentWidth -> x
    boolean peekHeightAuto -> e
    int lastNestedScrollDy -> v
    boolean touchingScrollingChild -> F
    boolean shapeThemingEnabled -> g
    java.lang.ref.WeakReference nestedScrollingChildRef -> A
    float elevation -> p
    float halfExpandedRatio -> n
    java.util.Map importantForAccessibilityMap -> G
    194:194:void <clinit>() -> <clinit>
    241:241:void <init>() -> <init>
    244:281:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:66:com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> a
    290:300:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> a
    304:309:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> a
    313:317:void onDetachedFromLayoutParams() -> a
    321:369:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    374:425:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
    486:522:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> a
    530:537:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> a
    613:613:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> a
    622:627:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> a
    648:660:void setFitToContents(boolean) -> a
    683:709:void setPeekHeight(int,boolean) -> a
    733:734:void setHalfExpandedRatio(float) -> a
    840:841:void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> a
    935:950:void updateDrawableOnStateChange(int,int) -> a
    980:997:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> a
    1000:1008:boolean shouldHide(android.view.View,float) -> a
    1013:1025:android.view.View findScrollingChild(android.view.View) -> a
    1030:1031:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean) -> a
    1038:1054:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList) -> a
    1085:1099:void startSettlingAnimation(android.view.View,int) -> a
    1255:1265:void dispatchOnSlide(int) -> a
    66:66:boolean access$100(com.google.android.material.bottomsheet.BottomSheetBehavior) -> b
    436:461:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    472:474:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> b
    749:750:void setExpandedOffset(int) -> b
    771:778:void setHideable(boolean) -> b
    898:898:int getState() -> b
    1374:1376:com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View) -> b
    66:66:android.animation.ValueAnimator access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> c
    670:671:void setPeekHeight(int) -> c
    798:799:void setSkipCollapsed(boolean) -> c
    954:965:void calculateCollapsedOffset() -> c
    66:66:int access$300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> d
    285:285:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> d
    822:823:void setSaveFlags(int) -> d
    968:969:void calculateHalfExpandedOffset() -> d
    1386:1432:void updateImportantForAccessibility(boolean) -> d
    66:66:int access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> e
    851:867:void setState(int) -> e
    1057:1069:void createShapeValueAnimator() -> e
    66:66:boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> f
    902:932:void setStateInternal(int) -> f
    1080:1080:int getExpandedOffset() -> f
    870:888:void startSettlingAnimationPendingLayout(int) -> g
    1072:1076:float getYVelocity() -> g
    972:977:void reset() -> h
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$a:
    int val$finalState -> e
    android.view.View val$child -> d
    com.google.android.material.bottomsheet.BottomSheetBehavior this$0 -> f
    879:879:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    882:883:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$b:
    com.google.android.material.bottomsheet.BottomSheetBehavior this$0 -> a
    1060:1060:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1063:1067:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$c:
    com.google.android.material.bottomsheet.BottomSheetBehavior this$0 -> a
    1110:1110:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1133:1134:void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    1147:1231:void onViewReleased(android.view.View,float,float) -> a
    1241:1241:int clampViewPositionHorizontal(android.view.View,int,int) -> a
    1114:1127:boolean tryCaptureView(android.view.View,int) -> b
    1235:1235:int clampViewPositionVertical(android.view.View,int,int) -> b
    1246:1249:int getViewVerticalDragRange(android.view.View) -> b
    1138:1141:void onViewDragStateChanged(int) -> c
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$d:
    69:69:void <init>() -> <init>
    void onSlide(android.view.View,float) -> a
    void onStateChanged(android.view.View,int) -> a
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    boolean hideable -> i
    boolean skipCollapsed -> j
    int state -> f
    int peekHeight -> g
    boolean fitToContents -> h
    1347:1347:void <clinit>() -> <clinit>
    1319:1326:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1329:1335:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1339:1345:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$a:
    1348:1348:void <init>() -> <init>
    1348:1348:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1348:1348:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1351:1351:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1356:1356:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1348:1348:java.lang.Object[] newArray(int) -> newArray
    1361:1361:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable -> com.google.android.material.bottomsheet.BottomSheetBehavior$e:
    int targetState -> e
    android.view.View view -> d
    com.google.android.material.bottomsheet.BottomSheetBehavior this$0 -> f
    1289:1292:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1296:1303:void run() -> run
com.google.android.material.bottomsheet.BottomSheetDialog -> com.google.android.material.bottomsheet.BottomSheetDialog:
    boolean canceledOnTouchOutsideSet -> i
    boolean cancelable -> g
    com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback bottomSheetCallback -> j
    boolean canceledOnTouchOutside -> h
    com.google.android.material.bottomsheet.BottomSheetBehavior behavior -> f
    55:59:void <init>(android.content.Context,int) -> <init>
    131:191:android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams) -> a
    207:217:int getThemeResId(android.content.Context,int) -> a
    195:203:boolean shouldWindowCloseOnTouchOutside() -> b
    75:84:void onCreate(android.os.Bundle) -> onCreate
    109:113:void onStart() -> onStart
    98:105:void setCancelable(boolean) -> setCancelable
    117:123:void setCanceledOnTouchOutside(boolean) -> setCanceledOnTouchOutside
    70:71:void setContentView(int) -> setContentView
    88:89:void setContentView(android.view.View) -> setContentView
    93:94:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
com.google.android.material.bottomsheet.BottomSheetDialog$1 -> com.google.android.material.bottomsheet.BottomSheetDialog$a:
    com.google.android.material.bottomsheet.BottomSheetDialog this$0 -> d
    150:150:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    153:156:void onClick(android.view.View) -> onClick
com.google.android.material.bottomsheet.BottomSheetDialog$2 -> com.google.android.material.bottomsheet.BottomSheetDialog$b:
    com.google.android.material.bottomsheet.BottomSheetDialog this$0 -> d
    161:161:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    165:172:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    176:180:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
com.google.android.material.bottomsheet.BottomSheetDialog$3 -> com.google.android.material.bottomsheet.BottomSheetDialog$c:
    184:184:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    188:188:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.bottomsheet.BottomSheetDialog$4 -> com.google.android.material.bottomsheet.BottomSheetDialog$d:
    com.google.android.material.bottomsheet.BottomSheetDialog this$0 -> a
    221:221:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    225:228:void onStateChanged(android.view.View,int) -> a
    231:231:void onSlide(android.view.View,float) -> a
com.google.android.material.bottomsheet.BottomSheetDialogFragment -> com.google.android.material.bottomsheet.BottomSheetDialogFragment:
    28:28:void <init>() -> <init>
    32:32:android.app.Dialog onCreateDialog(android.os.Bundle) -> n
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    boolean checked -> m
    boolean broadcasting -> n
    int iconPadding -> l
    int[] CHECKABLE_STATE_SET -> r
    int iconSize -> j
    int[] CHECKED_STATE_SET -> s
    int iconLeft -> k
    android.graphics.drawable.Drawable icon -> i
    com.google.android.material.button.MaterialButton$OnPressedChangeListener onPressedChangeListenerInternal -> p
    java.util.LinkedHashSet onCheckedChangeListeners -> o
    android.graphics.PorterDuff$Mode iconTintMode -> g
    android.content.res.ColorStateList iconTint -> h
    int DEF_STYLE_RES -> t
    com.google.android.material.button.MaterialButtonHelper materialButtonHelper -> f
    int iconGravity -> q
    124:166:void <clinit>() -> <clinit>
    187:188:void <init>(android.content.Context) -> <init>
    191:192:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:226:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    942:942:boolean isCheckable() -> a
    881:882:void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> addOnCheckedChangeListener
    465:465:boolean isLayoutRTL() -> b
    1009:1009:boolean isUsingOriginalBackground() -> c
    645:662:void updateIcon() -> d
    422:423:void updateIconPosition() -> e
    230:230:java.lang.String getA11yClassName() -> getA11yClassName
    332:332:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    343:343:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    827:827:int getCornerRadius() -> getCornerRadius
    576:576:android.graphics.drawable.Drawable getIcon() -> getIcon
    839:839:int getIconGravity() -> getIconGravity
    502:502:int getIconPadding() -> getIconPadding
    532:532:int getIconSize() -> getIconSize
    615:615:android.content.res.ColorStateList getIconTint() -> getIconTint
    640:640:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    701:701:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    983:986:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    743:743:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    786:786:int getStrokeWidth() -> getStrokeWidth
    277:283:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    315:320:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    920:920:boolean isChecked() -> isChecked
    858:868:int[] onCreateDrawableState(int) -> onCreateDrawableState
    244:247:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    235:240:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    393:398:void onLayout(boolean,int,int,int,int) -> onLayout
    402:404:void onMeasure(int,int) -> onMeasure
    408:410:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    930:932:boolean performClick() -> performClick
    891:892:void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> removeOnCheckedChangeListener
    359:360:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    348:355:void setBackgroundColor(int) -> setBackgroundColor
    373:389:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    364:369:void setBackgroundResource(int) -> setBackgroundResource
    326:327:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    337:338:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    952:955:void setCheckable(boolean) -> setCheckable
    901:916:void setChecked(boolean) -> setChecked
    798:801:void setCornerRadius(int) -> setCornerRadius
    812:815:void setCornerRadiusResource(int) -> setCornerRadiusResource
    415:419:void setElevation(float) -> setElevation
    545:549:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    850:854:void setIconGravity(int) -> setIconGravity
    487:491:void setIconPadding(int) -> setIconPadding
    560:565:void setIconResource(int) -> setIconResource
    513:514:void setIconSize(int) -> setIconSize
    588:592:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    626:630:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    603:604:void setIconTintResource(int) -> setIconTintResource
    476:477:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    997:998:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1002:1006:void setPressed(boolean) -> setPressed
    673:676:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    687:690:void setRippleColorResource(int) -> setRippleColorResource
    964:967:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1013:1016:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    714:717:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    729:732:void setStrokeColorResource(int) -> setStrokeColorResource
    756:759:void setStrokeWidth(int) -> setStrokeWidth
    771:774:void setStrokeWidthResource(int) -> setStrokeWidthResource
    258:265:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    296:303:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    925:926:void toggle() -> toggle
com.google.android.material.button.MaterialButton$OnCheckedChangeListener -> com.google.android.material.button.MaterialButton$a:
    void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean) -> a
com.google.android.material.button.MaterialButton$OnPressedChangeListener -> com.google.android.material.button.MaterialButton$b:
    void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> a
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.a:
    boolean shouldDrawSurfaceColorStroke -> n
    boolean backgroundOverwritten -> o
    boolean cornerRadiusSet -> p
    int strokeWidth -> h
    int insetBottom -> f
    int cornerRadius -> g
    int insetRight -> d
    int insetTop -> e
    boolean checkable -> q
    int insetLeft -> c
    boolean IS_LOLLIPOP -> s
    android.graphics.PorterDuff$Mode backgroundTintMode -> i
    android.graphics.drawable.LayerDrawable rippleDrawable -> r
    com.google.android.material.button.MaterialButton materialButton -> a
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel -> b
    android.content.res.ColorStateList backgroundTint -> j
    com.google.android.material.shape.MaterialShapeDrawable maskDrawable -> m
    android.content.res.ColorStateList rippleColor -> l
    android.content.res.ColorStateList strokeColor -> k
    49:49:void <clinit>() -> <clinit>
    72:75:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    78:131:void loadFromAttributes(android.content.res.TypedArray) -> a
    151:151:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> a
    168:174:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    241:244:void updateMaskBounds(int,int) -> a
    247:250:void setBackgroundColor(int) -> a
    253:263:void setRippleColor(android.content.res.ColorStateList) -> a
    330:330:int getCornerRadius() -> a
    335:351:void adjustShapeAppearanceModelCornerRadius(com.google.android.material.shape.ShapeAppearanceModel,float) -> a
    376:377:void setCheckable(boolean) -> a
    415:417:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> a
    181:183:void setShouldDrawSurfaceColorStroke(boolean) -> b
    271:275:void setStrokeColor(android.content.res.ColorStateList) -> b
    321:327:void setCornerRadius(int) -> b
    389:398:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> b
    402:411:com.google.android.material.shape.MaterialShapeDrawable getMaskDrawable() -> b
    155:161:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> c
    283:287:void setStrokeWidth(int) -> c
    355:367:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> c
    372:372:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> c
    267:267:android.content.res.ColorStateList getRippleColor() -> d
    421:421:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> e
    279:279:android.content.res.ColorStateList getStrokeColor() -> f
    290:290:int getStrokeWidth() -> g
    164:164:android.content.res.ColorStateList getSupportBackgroundTintList() -> h
    177:177:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> i
    147:147:boolean isBackgroundOverwritten() -> j
    380:380:boolean isCheckable() -> k
    139:144:void setBackgroundOverwritten() -> l
    191:236:android.graphics.drawable.Drawable createBackground() -> m
    385:385:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> n
    294:316:void updateStroke() -> o
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
    com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker pressedStateTracker -> g
    boolean skipCheckedStateTracker -> i
    boolean singleSelection -> j
    int checkedId -> k
    java.util.LinkedHashSet onButtonCheckedListeners -> h
    java.lang.String LOG_TAG -> l
    com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker checkedStateTracker -> f
    java.util.ArrayList originalCornerData -> e
    java.util.ArrayList childrenInOrder -> d
    124:124:void <clinit>() -> <clinit>
    139:140:void <init>(android.content.Context) -> <init>
    143:144:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:164:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    108:108:boolean access$200(com.google.android.material.button.MaterialButtonToggleGroup) -> a
    108:108:int access$402(com.google.android.material.button.MaterialButtonToggleGroup,int) -> a
    108:108:void access$500(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> a
    273:283:void clearChecked() -> a
    507:510:void dispatchOnButtonChecked(int,boolean) -> a
    513:516:void checkForced(int) -> a
    553:563:android.widget.RelativeLayout$LayoutParams buildEndAlignLayoutParams(android.view.View,android.view.View) -> a
    332:333:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    178:211:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    108:108:boolean access$300(com.google.android.material.button.MaterialButtonToggleGroup) -> b
    108:108:void access$600(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> b
    389:395:void setCheckedStateForView(int,boolean) -> b
    415:435:void adjustChildMarginsAndUpdateLayout() -> b
    438:445:void resetFirstChildMargin() -> c
    492:504:void updateCheckedStates(int,boolean) -> c
    449:480:void updateChildShapes() -> d
    242:242:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    298:298:int getCheckedButtonId() -> getCheckedButtonId
    311:319:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    168:174:void onFinishInflate() -> onFinishInflate
    234:238:void onMeasure(int,int) -> onMeasure
    215:230:void onViewRemoved(android.view.View) -> onViewRemoved
    342:343:void removeOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> removeOnButtonCheckedListener
    398:401:void setCheckedId(int) -> setCheckedId
    519:530:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    369:374:void setSingleSelection(boolean) -> setSingleSelection
    385:386:void setSingleSelection(int) -> setSingleSelection
    540:549:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$a:
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$b:
    com.google.android.material.button.MaterialButtonToggleGroup this$0 -> a
    566:566:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    566:566:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    570:581:void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean) -> a
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$c:
    float bottomLeft -> d
    float bottomRight -> c
    float topRight -> b
    float topLeft -> a
    601:606:void <init>(float,float,float,float) -> <init>
com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener -> com.google.android.material.button.MaterialButtonToggleGroup$d:
    void onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> a
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$e:
    com.google.android.material.button.MaterialButtonToggleGroup this$0 -> a
    584:584:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    584:584:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    587:592:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> a
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.b.a:
    56:59:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> a
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
    com.google.android.material.card.MaterialCardViewHelper cardViewHelper -> m
    boolean isParentCardViewDoneInitializing -> o
    boolean checked -> p
    com.google.android.material.card.MaterialCardView$OnCheckedChangeListener onCheckedChangeListener -> r
    int[] CHECKABLE_STATE_SET -> s
    int[] CHECKED_STATE_SET -> t
    int[] DRAGGED_STATE_SET -> u
    int DEF_STYLE_RES -> v
    android.widget.FrameLayout contentLayout -> n
    boolean dragged -> q
    86:90:void <clinit>() -> <clinit>
    107:108:void <init>(android.content.Context) -> <init>
    111:112:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    115:144:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    73:73:float access$001(com.google.android.material.card.MaterialCardView) -> a
    314:315:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    370:371:void setContentLayoutPadding(int,int,int,int) -> b
    410:410:boolean isCheckable() -> d
    400:400:boolean isDragged() -> e
    553:556:void forceRippleRedrawIfNeeded() -> f
    156:159:void updateContentLayout() -> g
    267:267:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    227:227:float getCardViewRadius() -> getCardViewRadius
    507:507:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    538:538:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    252:252:int getContentPaddingBottom() -> getContentPaddingBottom
    237:237:int getContentPaddingLeft() -> getContentPaddingLeft
    247:247:int getContentPaddingRight() -> getContentPaddingRight
    242:242:int getContentPaddingTop() -> getContentPaddingTop
    223:223:float getRadius() -> getRadius
    496:496:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    189:189:int getStrokeColor() -> getStrokeColor
    195:195:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    211:211:int getStrokeWidth() -> getStrokeWidth
    375:375:boolean isChecked() -> isChecked
    437:450:int[] onCreateDrawableState(int) -> onCreateDrawableState
    148:153:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    163:165:void onMeasure(int,int) -> onMeasure
    319:320:void removeAllViews() -> removeAllViews
    324:325:void removeView(android.view.View) -> removeView
    339:340:void removeViewAt(int) -> removeViewAt
    329:330:void removeViewInLayout(android.view.View) -> removeViewInLayout
    344:345:void removeViews(int,int) -> removeViews
    334:335:void removeViewsInLayout(int,int) -> removeViewsInLayout
    349:350:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    354:362:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    366:367:void setBackgroundInternal(android.graphics.drawable.Drawable) -> setBackgroundInternal
    257:258:void setCardBackgroundColor(int) -> setCardBackgroundColor
    262:263:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    288:290:void setCardElevation(float) -> setCardElevation
    420:421:void setCheckable(boolean) -> setCheckable
    380:383:void setChecked(boolean) -> setChecked
    527:528:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    517:518:void setCheckedIconResource(int) -> setCheckedIconResource
    549:550:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    282:284:void setClickable(boolean) -> setClickable
    391:397:void setDragged(boolean) -> setDragged
    272:278:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    294:296:void setMaxCardElevation(float) -> setMaxCardElevation
    459:460:void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    307:310:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    216:219:void setRadius(float) -> setRadius
    471:472:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    483:485:void setRippleColorResource(int) -> setRippleColorResource
    173:174:void setStrokeColor(int) -> setStrokeColor
    182:183:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    204:206:void setStrokeWidth(int) -> setStrokeWidth
    300:303:void setUseCompatPadding(boolean) -> setUseCompatPadding
    425:433:void toggle() -> toggle
com.google.android.material.card.MaterialCardView$OnCheckedChangeListener -> com.google.android.material.card.MaterialCardView$a:
    void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean) -> a
com.google.android.material.card.MaterialCardViewHelper -> com.google.android.material.card.a:
    com.google.android.material.shape.MaterialShapeDrawable drawableInsetByStroke -> g
    com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable -> e
    com.google.android.material.shape.MaterialShapeDrawable bgDrawable -> d
    int[] CHECKED_STATE_SET -> t
    android.graphics.drawable.Drawable fgDrawable -> i
    com.google.android.material.card.MaterialCardView materialCardView -> a
    android.graphics.drawable.Drawable checkedIcon -> j
    android.graphics.Rect temporaryBounds -> h
    double COS_45 -> u
    boolean isBackgroundOverwritten -> r
    boolean checkable -> s
    android.graphics.Rect userContentPadding -> b
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModelInsetByStroke -> f
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel -> c
    android.graphics.drawable.LayerDrawable clickableForegroundDrawable -> o
    android.graphics.drawable.Drawable rippleDrawable -> n
    android.content.res.ColorStateList checkedIconTint -> l
    android.content.res.ColorStateList rippleColor -> k
    android.content.res.ColorStateList strokeColor -> m
    com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable -> p
    int strokeWidth -> q
    64:69:void <clinit>() -> <clinit>
    122:139:void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int) -> <init>
    556:568:android.graphics.drawable.Drawable getClickableForeground() -> A
    510:514:float getParentCardViewCalculatedCornerPadding() -> B
    518:518:boolean shouldAddCornerPaddingInsideCardBackground() -> C
    522:522:boolean shouldAddCornerPaddingOutsideCardBackground() -> D
    590:595:void updateRippleColor() -> E
    62:62:int access$000(com.google.android.material.card.MaterialCardViewHelper) -> a
    143:187:void loadFromAttributes(android.content.res.TypedArray) -> a
    194:195:void setBackgroundOverwritten(boolean) -> a
    217:223:void setStrokeWidth(int) -> a
    231:232:void setCardBackgroundColor(android.content.res.ColorStateList) -> a
    239:241:void setUserContentPadding(int,int,int,int) -> a
    257:268:void setCornerRadius(float) -> a
    292:317:void createOutlineProvider(android.view.View) -> a
    379:390:void setCheckedIcon(android.graphics.drawable.Drawable) -> a
    393:411:void onMeasure(int,int) -> a
    415:424:void forceRippleRedraw() -> a
    546:551:float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment) -> a
    62:62:android.graphics.Rect access$100(com.google.android.material.card.MaterialCardViewHelper) -> b
    235:235:android.content.res.ColorStateList getCardBackgroundColor() -> b
    344:345:void setCheckable(boolean) -> b
    357:361:void setCheckedIconTint(android.content.res.ColorStateList) -> b
    466:474:android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable) -> b
    62:62:com.google.android.material.shape.MaterialShapeDrawable access$200(com.google.android.material.card.MaterialCardViewHelper) -> c
    352:354:void setRippleColor(android.content.res.ColorStateList) -> c
    375:375:android.graphics.drawable.Drawable getCheckedIcon() -> c
    447:453:void updateInsetForeground(android.graphics.drawable.Drawable) -> c
    198:204:void setStrokeColor(android.content.res.ColorStateList) -> d
    365:365:android.content.res.ColorStateList getCheckedIconTint() -> d
    271:271:float getCornerRadius() -> e
    370:370:android.content.res.ColorStateList getRippleColor() -> f
    208:208:int getStrokeColor() -> g
    213:213:android.content.res.ColorStateList getStrokeColorStateList() -> h
    227:227:int getStrokeWidth() -> i
    244:244:android.graphics.Rect getUserContentPadding() -> j
    190:190:boolean isBackgroundOverwritten() -> k
    348:348:boolean isCheckable() -> l
    248:254:void updateClickable() -> m
    327:341:void updateContentPadding() -> n
    275:276:void updateElevation() -> o
    280:284:void updateInsets() -> p
    287:288:void updateStroke() -> q
    427:439:void adjustShapeAppearanceModelInsetByStroke() -> r
    536:536:float calculateActualCornerPadding() -> s
    501:501:float calculateHorizontalBackgroundPadding() -> t
    491:491:float calculateVerticalBackgroundPadding() -> u
    506:506:boolean canClipToOutline() -> v
    599:603:android.graphics.drawable.Drawable createCheckedIconLayer() -> w
    581:585:android.graphics.drawable.Drawable createCompatRippleDrawable() -> x
    572:577:android.graphics.drawable.Drawable createForegroundRippleDrawable() -> y
    607:607:com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable() -> z
com.google.android.material.card.MaterialCardViewHelper$1 -> com.google.android.material.card.a$a:
    com.google.android.material.card.MaterialCardViewHelper this$0 -> a
    301:301:void <init>(com.google.android.material.card.MaterialCardViewHelper) -> <init>
    304:311:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.card.MaterialCardViewHelper$2 -> com.google.android.material.card.a$b:
    475:475:void <init>(com.google.android.material.card.MaterialCardViewHelper,android.graphics.drawable.Drawable,int,int,int,int) -> <init>
    480:480:boolean getPadding(android.graphics.Rect) -> getPadding
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
    int DEF_STYLE_RES -> h
    android.content.res.ColorStateList materialThemeColorsTintList -> g
    int[][] ENABLED_CHECKED_STATES -> i
    43:45:void <clinit>() -> <clinit>
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    105:122:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    87:92:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    boolean closeIconPressed -> m
    boolean closeIconHovered -> n
    int[] SELECTED_STATE -> x
    boolean closeIconFocused -> o
    boolean ensureMinTouchTargetSize -> p
    boolean deferredCheckedValue -> l
    android.graphics.drawable.InsetDrawable insetBackgroundDrawable -> h
    android.view.View$OnClickListener onCloseIconClickListener -> j
    com.google.android.material.chip.Chip$ChipTouchHelper touchHelper -> s
    android.graphics.RectF rectF -> u
    com.google.android.material.resources.TextAppearanceFontCallback fontCallback -> v
    android.graphics.Rect EMPTY_BOUNDS -> w
    android.widget.CompoundButton$OnCheckedChangeListener onCheckedChangeListenerInternal -> k
    android.graphics.drawable.RippleDrawable ripple -> i
    int minTouchTargetSize -> r
    android.graphics.Rect rect -> t
    com.google.android.material.chip.ChipDrawable chipDrawable -> g
    int lastLayoutDirection -> q
    131:133:void <clinit>() -> <clinit>
    175:176:void <init>(android.content.Context) -> <init>
    179:180:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    183:240:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    125:125:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> a
    125:125:boolean access$302(com.google.android.material.chip.Chip,boolean) -> a
    273:294:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> a
    333:340:void validateAttributes(android.util.AttributeSet) -> a
    442:443:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> a
    649:656:void onChipDrawableSizeChange() -> a
    771:798:boolean handleAccessibilityExit(android.view.MotionEvent) -> a
    2184:2223:boolean ensureAccessibleTouchTarget(int) -> a
    2237:2239:void insetChipBackgroundDrawable(int,int,int,int) -> a
    125:125:boolean access$100(com.google.android.material.chip.Chip) -> b
    436:439:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> b
    1697:1697:boolean isCheckable() -> b
    125:125:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> c
    1519:1519:boolean isCloseIconVisible() -> c
    125:125:android.graphics.Rect access$400(com.google.android.material.chip.Chip) -> d
    698:710:boolean performCloseIconClick() -> d
    803:803:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    810:821:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    856:867:void drawableStateChanged() -> drawableStateChanged
    2161:2161:boolean shouldEnsureMinTouchTargetSize() -> e
    125:125:android.graphics.Rect access$500() -> f
    870:910:int[] createCloseIconDrawableState() -> g
    417:420:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1784:1784:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1037:1037:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1105:1105:float getChipCornerRadius() -> getChipCornerRadius
    384:384:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2126:2126:float getChipEndPadding() -> getChipEndPadding
    1415:1415:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1485:1485:float getChipIconSize() -> getChipIconSize
    1450:1450:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1071:1071:float getChipMinHeight() -> getChipMinHeight
    1888:1888:float getChipStartPadding() -> getChipStartPadding
    1149:1149:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1183:1183:float getChipStrokeWidth() -> getChipStrokeWidth
    1258:1258:java.lang.CharSequence getChipText() -> getChipText
    1571:1571:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1687:1687:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2092:2092:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1642:1642:float getCloseIconSize() -> getCloseIconSize
    2058:2058:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1608:1608:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    918:925:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    929:931:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    590:590:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    832:838:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1854:1854:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1956:1956:float getIconEndPadding() -> getIconEndPadding
    1922:1922:float getIconStartPadding() -> getIconStartPadding
    1218:1218:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1127:1127:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1819:1819:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1352:1352:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2024:2024:float getTextEndPadding() -> getTextEndPadding
    1990:1990:float getTextStartPadding() -> getTextStartPadding
    409:414:void ensureChipDrawableHasCallback() -> h
    914:914:boolean hasCloseIcon() -> i
    366:380:void initOutlineProvider() -> j
    2227:2233:void removeBackgroundInset() -> k
    262:270:void updateAccessibilityDelegate() -> l
    399:406:void updateBackgroundDrawable() -> m
    425:433:void updateFrameworkRippleBackground() -> n
    301:302:void updatePaddingInternal() -> o
    447:451:int[] onCreateDrawableState(int) -> onCreateDrawableState
    826:828:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    751:762:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    253:257:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    937:940:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    322:330:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    715:746:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1340:1348:void updateTextPaintDrawState() -> p
    484:489:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    474:475:void setBackgroundColor(int) -> setBackgroundColor
    493:498:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    479:480:void setBackgroundResource(int) -> setBackgroundResource
    464:465:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    469:470:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1719:1722:void setCheckable(boolean) -> setCheckable
    1707:1710:void setCheckableResource(int) -> setCheckableResource
    660:673:void setChecked(boolean) -> setChecked
    1806:1809:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1773:1774:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1767:1768:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1794:1797:void setCheckedIconResource(int) -> setCheckedIconResource
    1747:1750:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1759:1762:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1059:1062:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1047:1050:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1136:1139:void setChipCornerRadius(float) -> setChipCornerRadius
    1114:1117:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    389:396:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2148:2151:void setChipEndPadding(float) -> setChipEndPadding
    2136:2139:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1437:1440:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1404:1405:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1398:1399:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1425:1428:void setChipIconResource(int) -> setChipIconResource
    1507:1510:void setChipIconSize(float) -> setChipIconSize
    1495:1498:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1473:1476:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1460:1463:void setChipIconTintResource(int) -> setChipIconTintResource
    1378:1381:void setChipIconVisible(int) -> setChipIconVisible
    1390:1393:void setChipIconVisible(boolean) -> setChipIconVisible
    1093:1096:void setChipMinHeight(float) -> setChipMinHeight
    1081:1084:void setChipMinHeightResource(int) -> setChipMinHeightResource
    1910:1913:void setChipStartPadding(float) -> setChipStartPadding
    1898:1901:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1171:1174:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1159:1162:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1205:1208:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1193:1196:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1294:1295:void setChipText(java.lang.CharSequence) -> setChipText
    1288:1289:void setChipTextResource(int) -> setChipTextResource
    1594:1598:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1675:1678:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1560:1561:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1554:1555:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2114:2117:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2102:2105:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    848:852:void setCloseIconHovered(boolean) -> setCloseIconHovered
    841:845:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1581:1585:void setCloseIconResource(int) -> setCloseIconResource
    1664:1667:void setCloseIconSize(float) -> setCloseIconSize
    1652:1655:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2080:2083:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2068:2071:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1630:1633:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1618:1621:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1535:1536:void setCloseIconVisible(int) -> setCloseIconVisible
    1545:1549:void setCloseIconVisible(boolean) -> setCloseIconVisible
    506:507:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    550:551:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    563:564:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    579:580:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    518:519:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    534:535:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    245:249:void setElevation(float) -> setElevation
    595:599:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2172:2174:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    456:461:void setGravity(int) -> setGravity
    1876:1879:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1864:1867:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    1978:1981:void setIconEndPadding(float) -> setIconEndPadding
    1966:1969:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    1944:1947:void setIconStartPadding(float) -> setIconStartPadding
    1932:1935:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    1263:1269:void setLayoutDirection(int) -> setLayoutDirection
    617:618:void setLines(int) -> setLines
    633:634:void setMaxLines(int) -> setMaxLines
    641:645:void setMaxWidth(int) -> setMaxWidth
    625:626:void setMinLines(int) -> setMinLines
    680:681:void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListenerInternal
    685:686:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1243:1249:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1228:1234:void setRippleColorResource(int) -> setRippleColorResource
    1121:1122:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1841:1844:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1829:1832:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    609:610:void setSingleLine(boolean) -> setSingleLine
    1273:1283:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1315:1319:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1323:1328:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1332:1337:void setTextAppearance(int) -> setTextAppearance
    1304:1305:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2046:2049:void setTextEndPadding(float) -> setTextEndPadding
    2034:2037:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    2012:2015:void setTextStartPadding(float) -> setTextStartPadding
    2000:2003:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$a:
    com.google.android.material.chip.Chip this$0 -> a
    161:161:void <init>(com.google.android.material.chip.Chip) -> <init>
    165:168:void onFontRetrieved(android.graphics.Typeface,boolean) -> a
    171:171:void onFontRetrievalFailed(int) -> a
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$b:
    com.google.android.material.chip.Chip this$0 -> a
    368:368:void <init>(com.google.android.material.chip.Chip) -> <init>
    372:377:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$c:
    com.google.android.material.chip.Chip this$0 -> q
    946:948:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    952:952:int getVirtualViewAt(float,float) -> a
    959:963:void getVisibleVirtualViews(java.util.List) -> a
    967:971:void onVirtualViewKeyboardFocusChanged(int,boolean) -> a
    976:996:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1000:1011:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1016:1023:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> a
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.a:
    com.google.android.material.internal.TextDrawableHelper textDrawableHelper -> k0
    int maxWidth -> D0
    float chipIconSize -> J
    android.graphics.PointF pointF -> i0
    float chipCornerRadius -> B
    android.graphics.Path shapePath -> j0
    java.lang.ref.WeakReference delegate -> A0
    android.graphics.drawable.Drawable checkedIcon -> S
    float textEndPadding -> Z
    android.content.Context context -> d0
    java.lang.CharSequence closeIconContentDescription -> P
    float chipStartPadding -> V
    com.google.android.material.animation.MotionSpec showMotionSpec -> T
    android.graphics.drawable.ShapeDrawable closeIconRippleMask -> H0
    boolean chipIconVisible -> G
    float closeIconStartPadding -> a0
    android.content.res.ColorStateList closeIconTint -> N
    float chipEndPadding -> c0
    boolean isShapeThemingEnabled -> E0
    android.graphics.ColorFilter colorFilter -> t0
    int[] closeIconStateSet -> x0
    boolean shouldDrawText -> C0
    int currentChipSurfaceColor -> l0
    java.lang.CharSequence text -> F
    android.content.res.ColorStateList chipSurfaceColor -> y
    boolean checkable -> Q
    int currentTextColor -> p0
    android.graphics.Paint chipPaint -> e0
    int currentChipStrokeColor -> n0
    int currentTint -> r0
    android.content.res.ColorStateList chipStrokeColor -> C
    float iconStartPadding -> W
    com.google.android.material.animation.MotionSpec hideMotionSpec -> U
    android.graphics.drawable.Drawable closeIcon -> L
    int[][] states -> G0
    float closeIconSize -> O
    android.graphics.PorterDuffColorFilter tintFilter -> u0
    android.graphics.drawable.Drawable chipIcon -> H
    android.content.res.ColorStateList compatRippleColor -> z0
    float chipStrokeWidth -> D
    android.content.res.ColorStateList chipBackgroundColor -> z
    android.content.res.ColorStateList tint -> v0
    boolean checkedIconVisible -> R
    android.text.TextUtils$TruncateAt truncateAt -> B0
    float iconEndPadding -> X
    android.graphics.RectF rectF -> h0
    android.graphics.drawable.Drawable closeIconRipple -> M
    int[] DEFAULT_STATE -> F0
    float closeIconEndPadding -> b0
    android.graphics.Paint$FontMetrics fontMetrics -> g0
    boolean closeIconVisible -> K
    android.graphics.PorterDuff$Mode tintMode -> w0
    float chipMinHeight -> A
    boolean useCompatRipple -> y0
    int currentCompatRippleColor -> o0
    int currentChipBackgroundColor -> m0
    int alpha -> s0
    android.graphics.Paint debugPaint -> f0
    float textStartPadding -> Y
    boolean currentChecked -> q0
    android.content.res.ColorStateList rippleColor -> E
    android.content.res.ColorStateList chipIconTint -> I
    168:181:void <clinit>() -> <clinit>
    334:356:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1554:1555:void setRippleColorResource(int) -> A
    1880:1880:java.lang.CharSequence getCloseIconContentDescription() -> A
    2016:2017:void setShowMotionSpecResource(int) -> B
    2283:2283:float getCloseIconEndPadding() -> B
    1598:1599:void setTextAppearanceResource(int) -> C
    1852:1852:float getCloseIconSize() -> C
    2223:2224:void setTextEndPaddingResource(int) -> D
    2247:2247:float getCloseIconStartPadding() -> D
    983:983:int[] getCloseIconState() -> E
    2189:2190:void setTextStartPaddingResource(int) -> E
    1832:1832:android.content.res.ColorStateList getCloseIconTint() -> F
    1606:1606:android.text.TextUtils$TruncateAt getEllipsize() -> G
    2037:2037:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> H
    2140:2140:float getIconEndPadding() -> I
    2101:2101:float getIconStartPadding() -> J
    1544:1544:android.content.res.ColorStateList getRippleColor() -> K
    2006:2006:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> L
    1573:1573:java.lang.CharSequence getText() -> M
    1594:1594:com.google.android.material.resources.TextAppearance getTextAppearance() -> N
    2213:2213:float getTextEndPadding() -> O
    2179:2179:float getTextStartPadding() -> P
    466:466:boolean getUseCompatRipple() -> Q
    1884:1884:boolean isCheckable() -> R
    963:963:boolean isCloseIconStateful() -> S
    1743:1743:boolean isCloseIconVisible() -> T
    476:480:void onSizeChange() -> U
    2366:2366:boolean shouldDrawText() -> V
    849:850:float calculateTextCenterFromBaseline() -> W
    536:536:boolean canShowCheckedIcon() -> X
    1303:1303:android.graphics.ColorFilter getTintColorFilter() -> Y
    526:526:boolean showsCheckedIcon() -> Z
    284:286:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> a
    360:453:void loadFromAttributes(android.util.AttributeSet,int,int) -> a
    471:472:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> a
    495:496:void getCloseIconTouchBounds(android.graphics.RectF) -> a
    683:695:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> a
    796:812:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> a
    816:833:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> a
    971:977:boolean setCloseIconState(int[]) -> a
    988:990:void onTextSizeChange() -> a
    1003:1096:boolean onStateChange(int[],int[]) -> a
    1325:1334:boolean hasState(int[],int) -> a
    1387:1387:android.content.res.ColorStateList compositeSurfaceBackgroundColor(android.content.res.ColorStateList,android.content.res.ColorStateList) -> a
    1602:1603:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> a
    1610:1611:void setEllipsize(android.text.TextUtils$TruncateAt) -> a
    1870:1876:void setCloseIconContentDescription(java.lang.CharSequence) -> a
    1892:1906:void setCheckable(boolean) -> a
    1982:1996:void setCheckedIcon(android.graphics.drawable.Drawable) -> a
    2057:2058:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> a
    521:521:boolean showsChipIcon() -> a0
    623:630:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> b
    903:919:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> b
    1108:1108:boolean isStateful(com.google.android.material.resources.TextAppearance) -> b
    1581:1590:void setText(java.lang.CharSequence) -> b
    1669:1685:void setChipIcon(android.graphics.drawable.Drawable) -> b
    1923:1940:void setCheckedIconVisible(boolean) -> b
    2026:2027:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> b
    531:531:boolean showsCloseIcon() -> b0
    668:680:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> c
    884:900:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> c
    1374:1383:void setChipBackgroundColor(android.content.res.ColorStateList) -> c
    1628:1645:void setChipIconVisible(boolean) -> c
    1798:1817:void setCloseIcon(android.graphics.drawable.Drawable) -> c
    1307:1309:void updateCompatRippleColor() -> c0
    637:653:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> d
    922:943:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> d
    1275:1295:void applyChildDrawable(android.graphics.drawable.Drawable) -> d
    1710:1719:void setChipIconTint(android.content.res.ColorStateList) -> d
    1757:1774:void setCloseIconVisible(boolean) -> d
    1888:1889:void setCheckableResource(int) -> d
    1821:1828:void updateFrameworkCloseIconRipple() -> d0
    564:566:void draw(android.graphics.Canvas) -> draw
    614:620:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> e
    858:877:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> e
    1104:1104:boolean isStateful(android.graphics.drawable.Drawable) -> e
    1452:1459:void setChipCornerRadius(float) -> e
    1489:1496:void setChipStrokeColor(android.content.res.ColorStateList) -> e
    1972:1973:void setCheckedIconResource(int) -> e
    2376:2377:void setShouldDrawText(boolean) -> e
    457:462:void setUseCompatRipple(boolean) -> f
    734:752:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> f
    1268:1271:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> f
    1840:1849:void setCloseIconTint(android.content.res.ColorStateList) -> f
    1919:1920:void setCheckedIconVisible(int) -> f
    2339:2344:void setChipEndPadding(float) -> f
    656:665:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> g
    1364:1365:void setChipBackgroundColorResource(int) -> g
    1564:1569:void setRippleColor(android.content.res.ColorStateList) -> g
    1730:1740:void setChipIconSize(float) -> g
    1187:1187:int getAlpha() -> getAlpha
    1201:1201:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    516:516:int getIntrinsicHeight() -> getIntrinsicHeight
    501:510:int getIntrinsicWidth() -> getIntrinsicWidth
    1223:1223:int getOpacity() -> getOpacity
    1229:1241:void getOutline(android.graphics.Outline) -> getOutline
    755:789:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> h
    1100:1100:boolean isStateful(android.content.res.ColorStateList) -> h
    1418:1423:void setChipMinHeight(float) -> h
    1443:1444:void setChipCornerRadiusResource(int) -> h
    699:731:void drawText(android.graphics.Canvas,android.graphics.Rect) -> i
    1312:1321:void setChipSurfaceColor(android.content.res.ColorStateList) -> i
    2087:2092:void setChipStartPadding(float) -> i
    2329:2330:void setChipEndPaddingResource(int) -> i
    1245:1249:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    949:949:boolean isStateful() -> isStateful
    1525:1534:void setChipStrokeWidth(float) -> j
    1665:1666:void setChipIconResource(int) -> j
    1726:1727:void setChipIconSizeResource(int) -> k
    2303:2310:void setCloseIconEndPadding(float) -> k
    1700:1701:void setChipIconTintResource(int) -> l
    1860:1867:void setCloseIconSize(float) -> l
    541:542:float calculateChipIconWidth() -> m
    1624:1625:void setChipIconVisible(int) -> m
    2267:2274:void setCloseIconStartPadding(float) -> m
    552:555:float calculateCloseIconWidth() -> n
    1408:1409:void setChipMinHeightResource(int) -> n
    2160:2170:void setIconEndPadding(float) -> n
    1962:1962:android.graphics.drawable.Drawable getCheckedIcon() -> o
    2077:2078:void setChipStartPaddingResource(int) -> o
    2121:2131:void setIconStartPadding(float) -> o
    1115:1130:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1135:1150:boolean onLevelChange(int) -> onLevelChange
    994:997:boolean onStateChange(int[]) -> onStateChange
    1354:1354:android.content.res.ColorStateList getChipBackgroundColor() -> p
    1479:1480:void setChipStrokeColorResource(int) -> p
    2233:2238:void setTextEndPadding(float) -> p
    1432:1432:float getChipCornerRadius() -> q
    1515:1516:void setChipStrokeWidthResource(int) -> q
    2199:2204:void setTextStartPadding(float) -> q
    2293:2294:void setCloseIconEndPaddingResource(int) -> r
    2319:2319:float getChipEndPadding() -> r
    1661:1661:android.graphics.drawable.Drawable getChipIcon() -> s
    1794:1795:void setCloseIconResource(int) -> s
    1253:1257:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1179:1183:void setAlpha(int) -> setAlpha
    1192:1196:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1206:1210:void setTintList(android.content.res.ColorStateList) -> setTintList
    1214:1219:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1155:1170:boolean setVisible(boolean,boolean) -> setVisible
    1722:1722:float getChipIconSize() -> t
    1856:1857:void setCloseIconSizeResource(int) -> t
    1690:1690:android.content.res.ColorStateList getChipIconTint() -> u
    2257:2258:void setCloseIconStartPaddingResource(int) -> u
    1261:1265:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1398:1398:float getChipMinHeight() -> v
    1836:1837:void setCloseIconTintResource(int) -> v
    2047:2048:void setHideMotionSpecResource(int) -> w
    2067:2067:float getChipStartPadding() -> w
    1469:1469:android.content.res.ColorStateList getChipStrokeColor() -> x
    2150:2151:void setIconEndPaddingResource(int) -> x
    1505:1505:float getChipStrokeWidth() -> y
    2111:2112:void setIconStartPaddingResource(int) -> y
    1790:1790:android.graphics.drawable.Drawable getCloseIcon() -> z
    2362:2363:void setMaxWidth(int) -> z
com.google.android.material.chip.ChipDrawable$Delegate -> com.google.android.material.chip.a$a:
    void onChipDrawableSizeChange() -> a
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    com.google.android.material.chip.ChipGroup$OnCheckedChangeListener onCheckedChangeListener -> j
    com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener passThroughListener -> l
    boolean protectFromCheckedChange -> n
    int checkedId -> m
    boolean singleSelection -> i
    int chipSpacingVertical -> h
    com.google.android.material.chip.ChipGroup$CheckedStateTracker checkedStateTracker -> k
    int chipSpacingHorizontal -> g
    102:103:void <init>(android.content.Context) -> <init>
    106:107:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    110:134:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    50:50:boolean access$300(com.google.android.material.chip.ChipGroup) -> a
    50:50:void access$600(com.google.android.material.chip.ChipGroup,int,boolean) -> a
    50:50:void access$700(com.google.android.material.chip.ChipGroup,int) -> a
    304:310:void setCheckedStateForView(int,boolean) -> a
    175:186:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    50:50:int access$400(com.google.android.material.chip.ChipGroup) -> b
    273:283:void clearCheck() -> b
    50:50:boolean access$500(com.google.android.material.chip.ChipGroup) -> c
    153:153:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    50:50:com.google.android.material.chip.ChipGroup$CheckedStateTracker access$800(com.google.android.material.chip.ChipGroup) -> d
    148:148:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    138:138:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    143:143:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    262:262:int getCheckedChipId() -> getCheckedChipId
    326:326:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    346:346:int getChipSpacingVertical() -> getChipSpacingVertical
    164:171:void onFinishInflate() -> onFinishInflate
    296:301:void setCheckedId(int) -> setCheckedId
    314:316:void setChipSpacing(int) -> setChipSpacing
    331:336:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    340:341:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    320:321:void setChipSpacingResource(int) -> setChipSpacingResource
    351:356:void setChipSpacingVertical(int) -> setChipSpacingVertical
    360:361:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    191:191:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    199:199:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    221:221:void setFlexWrap(int) -> setFlexWrap
    292:293:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    159:160:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    207:207:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    214:214:void setShowDividerVertical(int) -> setShowDividerVertical
    365:366:void setSingleLine(int) -> setSingleLine
    379:384:void setSingleSelection(boolean) -> setSingleSelection
    392:393:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$1 -> com.google.android.material.chip.ChipGroup$a:
com.google.android.material.chip.ChipGroup$CheckedStateTracker -> com.google.android.material.chip.ChipGroup$b:
    com.google.android.material.chip.ChipGroup this$0 -> a
    395:395:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    395:395:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    399:415:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$c:
    72:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:77:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    80:81:void <init>(int,int) -> <init>
com.google.android.material.chip.ChipGroup$OnCheckedChangeListener -> com.google.android.material.chip.ChipGroup$d:
    void onCheckedChanged(com.google.android.material.chip.ChipGroup,int) -> a
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$e:
    android.view.ViewGroup$OnHierarchyChangeListener onHierarchyChangeListener -> d
    com.google.android.material.chip.ChipGroup this$0 -> e
    423:423:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    423:423:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    423:423:android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> a
    428:445:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    449:456:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.a:
    55:77:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> a
    118:118:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> a
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.a$a:
    com.google.android.material.circularreveal.CircularRevealWidget val$view -> a
    118:118:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    126:127:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    121:122:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    com.google.android.material.circularreveal.CircularRevealHelper helper -> d
    33:34:void <init>(android.content.Context) -> <init>
    37:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:44:void buildCircularRevealCache() -> a
    95:96:void actualDraw(android.graphics.Canvas) -> a
    48:49:void destroyCircularRevealCache() -> b
    109:109:boolean actualIsOpaque() -> c
    86:91:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    100:103:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealGridLayout -> com.google.android.material.circularreveal.CircularRevealGridLayout:
    com.google.android.material.circularreveal.CircularRevealHelper helper -> d
    32:33:void <init>(android.content.Context) -> <init>
    36:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void buildCircularRevealCache() -> a
    93:94:void actualDraw(android.graphics.Canvas) -> a
    47:48:void destroyCircularRevealCache() -> b
    107:107:boolean actualIsOpaque() -> c
    84:89:void draw(android.graphics.Canvas) -> draw
    74:74:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    63:63:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    53:53:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    98:101:boolean isOpaque() -> isOpaque
    79:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    58:59:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.b:
    com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo -> f
    int STRATEGY -> j
    android.graphics.drawable.Drawable overlayDrawable -> g
    boolean hasCircularRevealCache -> i
    android.graphics.Paint scrimPaint -> e
    android.graphics.Paint revealPaint -> d
    android.view.View view -> b
    boolean buildingCircularRevealCache -> h
    com.google.android.material.circularreveal.CircularRevealHelper$Delegate delegate -> a
    android.graphics.Path revealPath -> c
    126:133:void <clinit>() -> <clinit>
    135:149:void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate) -> <init>
    152:172:void buildCircularRevealCache() -> a
    188:205:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> a
    221:223:void setCircularRevealScrimColor(int) -> a
    236:238:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> a
    263:300:void draw(android.graphics.Canvas) -> a
    175:181:void destroyCircularRevealCache() -> b
    253:253:float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> b
    303:312:void drawOverlayDrawable(android.graphics.Canvas) -> b
    232:232:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> c
    227:227:int getCircularRevealScrimColor() -> d
    209:217:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> e
    315:315:boolean isOpaque() -> f
    241:250:void invalidateRevealInfo() -> g
    319:323:boolean shouldDrawCircularReveal() -> h
    332:332:boolean shouldDrawOverlayDrawable() -> i
    328:328:boolean shouldDrawScrim() -> j
com.google.android.material.circularreveal.CircularRevealHelper$Delegate -> com.google.android.material.circularreveal.b$a:
    void actualDraw(android.graphics.Canvas) -> a
    boolean actualIsOpaque() -> c
com.google.android.material.circularreveal.CircularRevealLinearLayout -> com.google.android.material.circularreveal.CircularRevealLinearLayout:
    com.google.android.material.circularreveal.CircularRevealHelper helper -> d
    32:33:void <init>(android.content.Context) -> <init>
    36:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void buildCircularRevealCache() -> a
    93:94:void actualDraw(android.graphics.Canvas) -> a
    47:48:void destroyCircularRevealCache() -> b
    107:107:boolean actualIsOpaque() -> c
    84:89:void draw(android.graphics.Canvas) -> draw
    74:74:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    63:63:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    53:53:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    98:101:boolean isOpaque() -> isOpaque
    79:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    58:59:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealRelativeLayout -> com.google.android.material.circularreveal.CircularRevealRelativeLayout:
    com.google.android.material.circularreveal.CircularRevealHelper helper -> d
    32:33:void <init>(android.content.Context) -> <init>
    36:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void buildCircularRevealCache() -> a
    93:94:void actualDraw(android.graphics.Canvas) -> a
    47:48:void destroyCircularRevealCache() -> b
    107:107:boolean actualIsOpaque() -> c
    84:89:void draw(android.graphics.Canvas) -> draw
    74:74:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    63:63:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    53:53:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    98:101:boolean isOpaque() -> isOpaque
    79:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    58:59:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealWidget -> com.google.android.material.circularreveal.c:
    void buildCircularRevealCache() -> a
    void destroyCircularRevealCache() -> b
com.google.android.material.circularreveal.CircularRevealWidget$1 -> com.google.android.material.circularreveal.c$a:
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.c$b:
    android.animation.TypeEvaluator CIRCULAR_REVEAL -> b
    com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo -> a
    208:208:void <clinit>() -> <clinit>
    206:209:void <init>() -> <init>
    213:217:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> a
    206:206:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.c$c:
    android.util.Property CIRCULAR_REVEAL -> a
    181:181:void <clinit>() -> <clinit>
    185:186:void <init>(java.lang.String) -> <init>
    190:190:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> a
    195:196:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> a
    179:179:java.lang.Object get(java.lang.Object) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.c$d:
    android.util.Property CIRCULAR_REVEAL_SCRIM_COLOR -> a
    227:227:void <clinit>() -> <clinit>
    231:232:void <init>(java.lang.String) -> <init>
    236:236:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> a
    241:242:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> a
    225:225:java.lang.Object get(java.lang.Object) -> get
    225:225:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.c$e:
    float radius -> c
    float centerY -> b
    float centerX -> a
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:150:void <init>(float,float,float) -> <init>
    153:154:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> <init>
    157:160:void set(float,float,float) -> a
    163:164:void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> a
    171:171:boolean isInvalid() -> a
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    com.google.android.material.circularreveal.CircularRevealHelper helper -> w
    36:37:void <init>(android.content.Context) -> <init>
    40:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:47:void buildCircularRevealCache() -> a
    97:98:void actualDraw(android.graphics.Canvas) -> a
    51:52:void destroyCircularRevealCache() -> b
    111:111:boolean actualIsOpaque() -> c
    88:93:void draw(android.graphics.Canvas) -> draw
    78:78:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    72:72:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    62:62:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    102:105:boolean isOpaque() -> isOpaque
    83:84:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    67:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    56:57:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout -> com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout:
    com.google.android.material.circularreveal.CircularRevealHelper helper -> C
    35:36:void <init>(android.content.Context) -> <init>
    39:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:46:void buildCircularRevealCache() -> a
    96:97:void actualDraw(android.graphics.Canvas) -> a
    50:51:void destroyCircularRevealCache() -> b
    110:110:boolean actualIsOpaque() -> c
    87:92:void draw(android.graphics.Canvas) -> draw
    77:77:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    71:71:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    61:61:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    101:104:boolean isOpaque() -> isOpaque
    82:83:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    66:67:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    55:56:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.color.MaterialColors -> com.google.android.material.c.a:
    59:59:int getColor(android.view.View,int) -> a
    70:70:int getColor(android.content.Context,int,java.lang.String) -> a
    80:80:int getColor(android.view.View,int,int) -> a
    90:94:int getColor(android.content.Context,int,int) -> a
    134:136:int layer(int,int,float) -> a
    145:145:int layer(int,int) -> a
    216:242:android.content.res.ColorStateList layer(android.content.res.ColorStateList,int,android.content.res.ColorStateList,int,int[][]) -> a
    251:260:boolean shouldAddColorForState(java.util.List,int,java.util.List,int[]) -> a
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.a:
    int topInset -> f
    int prePieSlop -> g
    int leftInset -> e
    android.app.Dialog dialog -> d
    44:49:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    53:73:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.dialog.MaterialAlertDialogBuilder -> com.google.android.material.dialog.MaterialAlertDialogBuilder:
    android.graphics.drawable.Drawable background -> c
    android.graphics.Rect backgroundInsets -> d
    68:72:void <clinit>() -> <clinit>
    66:66:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> a
    140:152:androidx.appcompat.app.AlertDialog create() -> a
    211:211:com.google.android.material.dialog.MaterialAlertDialogBuilder setCustomTitle(android.view.View) -> a
    221:221:com.google.android.material.dialog.MaterialAlertDialogBuilder setMessage(java.lang.CharSequence) -> a
    231:231:com.google.android.material.dialog.MaterialAlertDialogBuilder setIcon(android.graphics.drawable.Drawable) -> a
    265:265:com.google.android.material.dialog.MaterialAlertDialogBuilder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    307:307:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> a
    324:324:com.google.android.material.dialog.MaterialAlertDialogBuilder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    342:342:com.google.android.material.dialog.MaterialAlertDialogBuilder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> a
    371:371:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> a
    377:377:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> a
    66:66:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> b
    66:66:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> b
    66:66:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> b
    206:206:com.google.android.material.dialog.MaterialAlertDialogBuilder setTitle(java.lang.CharSequence) -> b
    248:248:com.google.android.material.dialog.MaterialAlertDialogBuilder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> b
    393:393:com.google.android.material.dialog.MaterialAlertDialogBuilder setView(android.view.View) -> b
com.google.android.material.dialog.MaterialDialogs -> com.google.android.material.dialog.b:
    44:44:android.graphics.drawable.InsetDrawable insetDrawable(android.graphics.drawable.Drawable,android.graphics.Rect) -> a
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.d.a:
    42:43:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.e.a:
    float displayDensity -> d
    boolean elevationOverlaysEnabled -> a
    int elevationOverlaysColor -> b
    int colorSurface -> c
    39:46:void <init>(android.content.Context) -> <init>
    72:73:int layerOverlay(int,float) -> a
    89:90:float calculateOverlayAlphaFraction(float) -> a
    125:125:boolean isSurfaceColor(int) -> a
    56:59:int layerOverlayIfNeeded(int,float) -> b
com.google.android.material.expandable.ExpandableTransformationWidget -> com.google.android.material.f.a:
com.google.android.material.expandable.ExpandableWidget -> com.google.android.material.f.b:
    boolean isExpanded() -> a
com.google.android.material.expandable.ExpandableWidgetHelper -> com.google.android.material.f.c:
    android.view.View widget -> a
    boolean expanded -> b
    int expandedComponentIdHint -> c
    39:41:void <init>(com.google.android.material.expandable.ExpandableWidget) -> <init>
    69:75:void onRestoreInstanceState(android.os.Bundle) -> a
    79:80:void setExpandedComponentIdHint(int) -> a
    85:85:int getExpandedComponentIdHint() -> a
    55:55:boolean isExpanded() -> b
    60:64:android.os.Bundle onSaveInstanceState() -> c
    89:93:void dispatchExpandedStateChanged() -> d
com.google.android.material.floatingactionbutton.BorderDrawable -> com.google.android.material.floatingactionbutton.a:
    com.google.android.material.shape.ShapeAppearancePathProvider pathProvider -> a
    boolean invalidateShader -> m
    android.content.res.ColorStateList borderTint -> o
    int currentBorderTintColor -> l
    int bottomOuterStrokeColor -> j
    float borderWidth -> g
    int bottomInnerStrokeColor -> k
    int topOuterStrokeColor -> h
    android.graphics.RectF rectF -> e
    int topInnerStrokeColor -> i
    com.google.android.material.floatingactionbutton.BorderDrawable$BorderState state -> f
    android.graphics.Rect rect -> d
    android.graphics.Path shapePath -> c
    android.graphics.Paint paint -> b
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel -> n
    80:84:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    87:93:void setBorderWidth(float) -> a
    96:102:void setBorderTint(android.content.res.ColorStateList) -> a
    115:119:void setGradientColors(int,int,int,int) -> a
    173:175:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> a
    214:239:android.graphics.Shader createGradientShader() -> a
    123:140:void draw(android.graphics.Canvas) -> draw
    246:246:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    185:185:int getOpacity() -> getOpacity
    145:157:void getOutline(android.graphics.Outline) -> getOutline
    161:165:boolean getPadding(android.graphics.Rect) -> getPadding
    195:195:boolean isStateful() -> isStateful
    190:191:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    200:210:boolean onStateChange(int[]) -> onStateChange
    179:181:void setAlpha(int) -> setAlpha
    106:108:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.google.android.material.floatingactionbutton.BorderDrawable$1 -> com.google.android.material.floatingactionbutton.a$a:
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState -> com.google.android.material.floatingactionbutton.a$b:
    com.google.android.material.floatingactionbutton.BorderDrawable this$0 -> a
    253:253:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable) -> <init>
    253:253:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1) -> <init>
    263:263:int getChangingConfigurations() -> getChangingConfigurations
    258:258:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    boolean isExtended -> M
    int DEF_STYLE_RES -> O
    boolean isUsingPillCorner -> N
    android.animation.Animator currentShowHideAnimator -> w
    android.animation.Animator currentCollapseExpandAnimator -> x
    com.google.android.material.animation.MotionSpec extendMotionSpec -> A
    com.google.android.material.animation.MotionSpec defaultShowMotionSpec -> C
    int userSetVisibility -> H
    com.google.android.material.animation.MotionSpec shrinkMotionSpec -> B
    com.google.android.material.animation.MotionSpec defaultExtendMotionSpec -> E
    com.google.android.material.animation.MotionSpec defaultHideMotionSpec -> D
    com.google.android.material.animation.MotionSpec defaultShrinkMotionSpec -> F
    androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior behavior -> G
    java.util.ArrayList extendListeners -> L
    java.util.ArrayList shrinkListeners -> K
    java.util.ArrayList hideListeners -> J
    java.util.ArrayList showListeners -> I
    int animState -> v
    android.graphics.Rect shadowPadding -> u
    android.util.Property HEIGHT -> Q
    com.google.android.material.animation.MotionSpec showMotionSpec -> y
    android.util.Property CORNER_RADIUS -> R
    android.util.Property WIDTH -> P
    com.google.android.material.animation.MotionSpec hideMotionSpec -> z
    74:986:void <clinit>() -> <clinit>
    146:147:void <init>(android.content.Context) -> <init>
    150:151:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:183:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    72:72:void access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int,boolean) -> a
    72:72:int access$102(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> a
    72:72:android.animation.Animator access$202(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.animation.Animator) -> a
    72:72:void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean,boolean,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> a
    72:72:android.graphics.Rect access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> a
    233:237:void internalSetVisibility(int,boolean) -> a
    402:457:void hide(boolean,boolean,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> a
    787:812:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec) -> a
    820:842:android.animation.AnimatorSet createShrinkExtendAnimator(com.google.android.material.animation.MotionSpec,boolean) -> a
    1010:1010:int getAdjustedRadius(int) -> a
    72:72:android.animation.Animator access$302(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.animation.Animator) -> b
    72:72:void access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean,boolean,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> b
    718:719:void setExtended(boolean,boolean,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> b
    883:891:void extendNow() -> b
    490:536:void show(boolean,boolean,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> c
    856:861:boolean isOrWillBeHidden() -> c
    846:851:boolean isOrWillBeShown() -> d
    866:866:boolean shouldAnimateVisibilityChange() -> e
    570:571:void extend(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> extend
    871:879:void shrinkNow() -> f
    207:207:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1018:1018:int getCollapsedSize() -> getCollapsedSize
    920:929:com.google.android.material.animation.MotionSpec getCurrentExtendMotionSpec() -> getCurrentExtendMotionSpec
    907:916:com.google.android.material.animation.MotionSpec getCurrentHideMotionSpec() -> getCurrentHideMotionSpec
    894:903:com.google.android.material.animation.MotionSpec getCurrentShowMotionSpec() -> getCurrentShowMotionSpec
    933:942:com.google.android.material.animation.MotionSpec getCurrentShrinkMotionSpec() -> getCurrentShrinkMotionSpec
    659:659:com.google.android.material.animation.MotionSpec getExtendMotionSpec() -> getExtendMotionSpec
    635:635:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    611:611:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    683:683:com.google.android.material.animation.MotionSpec getShrinkMotionSpec() -> getShrinkMotionSpec
    240:240:int getUserSetVisibility() -> getUserSetVisibility
    397:398:void hide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> hide
    187:193:void onAttachedToWindow() -> onAttachedToWindow
    197:202:void onMeasure(int,int) -> onMeasure
    218:225:void setCornerRadius(int) -> setCornerRadius
    668:669:void setExtendMotionSpec(com.google.android.material.animation.MotionSpec) -> setExtendMotionSpec
    677:678:void setExtendMotionSpecResource(int) -> setExtendMotionSpecResource
    644:645:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    653:654:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    212:214:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    620:621:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    629:630:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    692:693:void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec) -> setShrinkMotionSpec
    701:702:void setShrinkMotionSpecResource(int) -> setShrinkMotionSpecResource
    229:230:void setVisibility(int) -> setVisibility
    485:486:void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> show
    605:606:void shrink(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> shrink
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$a:
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener val$listener -> c
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton this$0 -> d
    boolean cancelled -> a
    boolean val$fromUser -> b
    414:414:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> <init>
    428:429:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    433:442:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    419:424:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$b:
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener val$listener -> b
    boolean val$fromUser -> a
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton this$0 -> c
    502:502:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> <init>
    513:519:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    505:509:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$c:
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener val$listener -> b
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton this$0 -> d
    boolean cancelled -> a
    boolean val$extended -> c
    733:733:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener,boolean) -> <init>
    746:747:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    751:754:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    739:742:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$d:
    950:950:void <init>(java.lang.Class,java.lang.String) -> <init>
    953:955:void set(android.view.View,java.lang.Float) -> a
    959:959:java.lang.Float get(android.view.View) -> a
    950:950:java.lang.Object get(java.lang.Object) -> get
    950:950:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$e:
    968:968:void <init>(java.lang.Class,java.lang.String) -> <init>
    971:973:void set(android.view.View,java.lang.Float) -> a
    977:977:java.lang.Float get(android.view.View) -> a
    968:968:java.lang.Object get(java.lang.Object) -> get
    968:968:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$f:
    987:987:void <init>(java.lang.Class,java.lang.String) -> <init>
    990:993:void set(android.view.View,java.lang.Float) -> a
    997:997:java.lang.Float get(android.view.View) -> a
    987:987:java.lang.Object get(java.lang.Object) -> get
    987:987:void set(java.lang.Object,java.lang.Object) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener internalAutoShrinkListener -> c
    com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener internalAutoHideListener -> b
    boolean autoShrinkEnabled -> e
    android.graphics.Rect tmpRect -> a
    boolean autoHideEnabled -> d
    1040:1043:void <init>() -> <init>
    1049:1062:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1027:1027:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> a
    1027:1027:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    1118:1123:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> a
    1128:1135:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> a
    1139:1143:boolean isBottomSheet(android.view.View) -> a
    1157:1175:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> a
    1180:1199:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> a
    1249:1254:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> a
    1260:1277:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> a
    1287:1293:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> a
    1302:1333:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> a
    1027:1027:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    1204:1213:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> b
    1229:1234:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> b
    1148:1149:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> setInternalAutoHideListener
    1153:1154:void setInternalAutoShrinkListener(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener) -> setInternalAutoShrinkListener
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedListener -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$g:
    void onExtended(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> a
    void onHidden(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> b
    void onShown(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> c
    void onShrunken(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> d
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    int maxImageSize -> n
    int customSize -> l
    boolean compatPadding -> o
    int imagePadding -> m
    int borderWidth -> j
    com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper -> s
    int size -> k
    android.graphics.Rect shadowPadding -> p
    android.graphics.PorterDuff$Mode backgroundTintMode -> f
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl impl -> t
    android.graphics.PorterDuff$Mode imageMode -> h
    androidx.appcompat.widget.AppCompatImageHelper imageHelper -> r
    android.content.res.ColorStateList backgroundTint -> e
    android.content.res.ColorStateList imageTint -> g
    int DEF_STYLE_RES -> u
    android.content.res.ColorStateList rippleColor -> i
    android.graphics.Rect touchArea -> q
    106:106:void <clinit>() -> <clinit>
    193:194:void <init>(android.content.Context) -> <init>
    197:198:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    202:264:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    101:101:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    101:101:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> a
    607:608:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> a
    611:612:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> a
    625:625:boolean isExpanded() -> a
    702:706:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> a
    774:784:int getSizeDimension(int) -> a
    859:864:boolean getContentRect(android.graphics.Rect) -> a
    891:913:int resolveAdjustedSize(int,int) -> a
    1336:1337:void addTransformationListener(com.google.android.material.animation.TransformationListener) -> a
    1349:1349:boolean isUsingDefaultCorner(com.google.android.material.shape.ShapeAppearanceModel) -> a
    575:576:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> b
    579:580:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> b
    720:720:boolean isOrWillBeHidden() -> b
    873:875:void getMeasuredContentRect(android.graphics.Rect) -> b
    724:724:boolean isOrWillBeShown() -> c
    878:882:void offsetRectWithShadow(android.graphics.Rect) -> c
    1421:1424:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> d
    809:811:void drawableStateChanged() -> drawableStateChanged
    460:479:void onApplySupportImageTint() -> e
    349:349:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    375:375:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1188:1188:float getCompatElevation() -> getCompatElevation
    1223:1223:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1258:1258:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    887:887:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    756:756:int getCustomSize() -> getCustomSize
    635:635:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1312:1312:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1414:1417:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    295:295:int getRippleColor() -> getRippleColor
    306:306:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    521:521:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    1288:1288:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    696:696:int getSize() -> getSize
    770:770:int getSizeDimension() -> getSizeDimension
    409:409:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    428:428:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    442:442:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    456:456:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    663:663:boolean getUseCompatPadding() -> getUseCompatPadding
    603:604:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> hide
    815:817:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    797:799:void onAttachedToWindow() -> onAttachedToWindow
    803:805:void onDetachedFromWindow() -> onDetachedFromWindow
    268:283:void onMeasure(int,int) -> onMeasure
    837:847:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    821:830:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    918:924:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    493:494:void setBackgroundColor(int) -> setBackgroundColor
    483:484:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    488:489:void setBackgroundResource(int) -> setBackgroundResource
    360:364:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    387:391:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1200:1201:void setCompatElevation(float) -> setCompatElevation
    1212:1213:void setCompatElevationResource(int) -> setCompatElevationResource
    1235:1236:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1247:1248:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1270:1271:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1282:1283:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    738:739:void setCustomSize(int) -> setCustomSize
    1176:1178:void setElevation(float) -> setElevation
    542:546:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    630:631:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1321:1322:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1330:1331:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    505:512:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    499:501:void setImageResource(int) -> setImageResource
    320:321:void setRippleColor(int) -> setRippleColor
    334:338:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1403:1405:void setScaleX(float) -> setScaleX
    1409:1411:void setScaleY(float) -> setScaleY
    516:517:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    1297:1298:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1306:1307:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    680:686:void setSize(int) -> setSize
    399:400:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    418:419:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    433:437:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    447:451:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1385:1387:void setTranslationX(float) -> setTranslationX
    1391:1393:void setTranslationY(float) -> setTranslationY
    1397:1399:void setTranslationZ(float) -> setTranslationZ
    648:652:void setUseCompatPadding(boolean) -> setUseCompatPadding
    551:552:void setVisibility(int) -> setVisibility
    571:572:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> show
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$a:
    com.google.android.material.floatingactionbutton.FloatingActionButton this$0 -> b
    com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener val$listener -> a
    706:706:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    709:710:void onShown() -> a
    714:715:void onHidden() -> b
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener internalAutoHideListener -> b
    android.graphics.Rect tmpRect -> a
    boolean autoHideEnabled -> c
    959:961:void <init>() -> <init>
    964:972:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    950:950:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> a
    950:950:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    1000:1005:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> a
    1010:1017:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> a
    1021:1025:boolean isBottomSheet(android.view.View) -> a
    1034:1052:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    1057:1076:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    1097:1114:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> a
    1124:1130:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> a
    1139:1170:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    950:950:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    1081:1090:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> b
    1030:1031:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    936:937:void <init>() -> <init>
    940:941:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    933:933:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> a
    933:933:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> a
    933:933:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> a
    933:933:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> a
    933:933:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$b:
    109:109:void <init>() -> <init>
    123:123:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> a
    115:115:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> b
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$c:
    com.google.android.material.floatingactionbutton.FloatingActionButton this$0 -> a
    1429:1429:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1438:1441:void setShadowPadding(int,int,int,int) -> a
    1445:1448:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    1452:1452:boolean isCompatPaddingEnabled() -> a
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationListenerWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$d:
    com.google.android.material.floatingactionbutton.FloatingActionButton this$0 -> b
    com.google.android.material.animation.TransformationListener listener -> a
    1357:1359:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationListener) -> <init>
    1368:1369:void onScaleChanged() -> a
    1363:1364:void onTranslationChanged() -> b
    1373:1373:boolean equals(java.lang.Object) -> equals
    1379:1379:int hashCode() -> hashCode
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.b:
    android.graphics.drawable.Drawable rippleDrawable -> c
    android.graphics.drawable.Drawable contentBackground -> e
    float hoveredFocusedTranslationZ -> i
    com.google.android.material.shadow.ShadowViewDelegate shadowViewDelegate -> z
    android.graphics.RectF tmpRectF2 -> C
    java.util.ArrayList transformationListeners -> x
    android.animation.TimeInterpolator ELEVATION_ANIM_INTERPOLATOR -> F
    com.google.android.material.shape.MaterialShapeDrawable shapeDrawable -> b
    com.google.android.material.animation.MotionSpec defaultShowMotionSpec -> m
    int[] PRESSED_ENABLED_STATE_SET -> G
    int[] FOCUSED_ENABLED_STATE_SET -> I
    com.google.android.material.animation.MotionSpec hideMotionSpec -> q
    java.util.ArrayList hideListeners -> w
    android.graphics.Matrix tmpMatrix -> D
    boolean usingDefaultCorner -> f
    float imageMatrixScale -> s
    android.animation.Animator currentAnimator -> o
    int animState -> u
    int[] ENABLED_STATE_SET -> K
    float pressedTranslationZ -> j
    android.graphics.RectF tmpRectF1 -> B
    float elevation -> h
    int minTouchTargetSize -> k
    com.google.android.material.internal.StateListAnimator stateListAnimator -> l
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearance -> a
    com.google.android.material.floatingactionbutton.FloatingActionButton view -> y
    android.graphics.Rect tmpRect -> A
    int[] HOVERED_FOCUSED_ENABLED_STATE_SET -> H
    com.google.android.material.animation.MotionSpec defaultHideMotionSpec -> n
    com.google.android.material.animation.MotionSpec showMotionSpec -> p
    android.view.ViewTreeObserver$OnPreDrawListener preDrawListener -> E
    com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable -> d
    java.util.ArrayList showListeners -> v
    boolean ensureMinTouchTargetSize -> g
    float rotation -> r
    int maxImageSize -> t
    int[] HOVERED_ENABLED_STATE_SET -> J
    int[] EMPTY_STATE_SET -> L
    63:136:void <clinit>() -> <clinit>
    150:177:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    537:542:com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec() -> A
    706:717:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> B
    826:826:boolean shouldAnimateVisibilityChange() -> C
    61:61:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> a
    61:61:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> a
    61:61:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> a
    186:204:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> a
    207:213:void setBackgroundTintList(android.content.res.ColorStateList) -> a
    216:219:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    233:237:void setElevation(float) -> a
    266:270:void setMaxImageSize(int) -> a
    287:301:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> a
    304:321:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel,boolean) -> a
    343:344:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> a
    355:356:void setEnsureMinTouchTargetSize(boolean) -> a
    360:362:void onElevationsChanged(float,float,float) -> a
    371:372:void onDrawableStateChanged(int[]) -> a
    395:399:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> a
    411:471:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> a
    557:592:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> a
    596:600:void addTransformationListener(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationListener) -> a
    654:662:void getPadding(android.graphics.Rect) -> a
    721:725:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> a
    749:755:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> a
    222:223:void setMinTouchTargetSize(int) -> b
    226:230:void setRippleColor(android.content.res.ColorStateList) -> b
    252:256:void setHoveredFocusedTranslationZ(float) -> b
    334:335:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> b
    379:383:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> b
    474:534:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> b
    629:629:android.graphics.drawable.Drawable getContentBackground() -> b
    665:673:void onPaddingUpdated(android.graphics.Rect) -> b
    240:240:float getElevation() -> c
    279:284:void setImageMatrixScale(float) -> c
    259:263:void setPressedTranslationZ(float) -> d
    351:351:boolean getEnsureMinTouchTargetSize() -> d
    339:339:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> e
    365:368:void updateShapeElevation(float) -> e
    244:244:float getHoveredFocusedTranslationZ() -> f
    248:248:float getPressedTranslationZ() -> g
    325:325:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> h
    330:330:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> i
    739:744:boolean isOrWillBeHidden() -> j
    729:734:boolean isOrWillBeShown() -> k
    375:376:void jumpDrawableToCurrentState() -> l
    680:683:void onAttachedToWindow() -> m
    634:634:void onCompatShadowChanged() -> n
    686:691:void onDetachedFromWindow() -> o
    698:703:void onPreDraw() -> p
    620:625:void onScaleChanged() -> q
    612:617:void onTranslationChanged() -> r
    694:694:boolean requirePreDrawListener() -> s
    676:676:boolean shouldAddPadding() -> t
    347:347:boolean shouldExpandBoundsForA11y() -> u
    830:848:void updateFromViewRotation() -> v
    275:276:void updateImageMatrixScale() -> w
    647:651:void updatePadding() -> x
    637:639:void updateSize() -> y
    546:551:com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec() -> z
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.b$a:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> d
    boolean cancelled -> a
    boolean val$fromUser -> b
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> c
    428:428:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    442:443:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    447:456:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    433:438:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.b$b:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> c
    boolean val$fromUser -> a
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> b
    499:499:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    510:516:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    502:506:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.b$c:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> d
    577:577:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    582:583:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> a
    577:577:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.b$d:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> d
    708:708:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    711:712:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.b$e:
    817:817:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    821:821:float getTargetShadowSize() -> a
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.b$f:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> e
    799:799:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    803:803:float getTargetShadowSize() -> a
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.b$g:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> e
    808:808:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    812:812:float getTargetShadowSize() -> a
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationListener -> com.google.android.material.floatingactionbutton.b$h:
    void onScaleChanged() -> a
    void onTranslationChanged() -> b
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener -> com.google.android.material.floatingactionbutton.b$i:
    void onShown() -> a
    void onHidden() -> b
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.b$j:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> e
    790:790:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    794:794:float getTargetShadowSize() -> a
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.b$k:
    com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0 -> d
    float shadowSizeEnd -> c
    float shadowSizeStart -> b
    boolean validValues -> a
    758:758:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    758:758:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    float getTargetShadowSize() -> a
    781:783:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    767:777:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.c:
    53:54:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    63:85:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> a
    103:152:void onElevationsChanged(float,float,float) -> a
    156:162:android.animation.Animator createElevationAnimator(float,float) -> a
    182:197:void onDrawableStateChanged(int[]) -> a
    215:224:com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> a
    229:233:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> a
    238:246:void getPadding(android.graphics.Rect) -> a
    89:95:void setRippleColor(android.content.res.ColorStateList) -> b
    167:167:float getElevation() -> c
    202:202:void jumpDrawableToCurrentState() -> l
    172:173:void onCompatShadowChanged() -> n
    211:211:boolean requirePreDrawListener() -> s
    177:177:boolean shouldAddPadding() -> t
    207:207:void updateFromViewRotation() -> v
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable -> com.google.android.material.floatingactionbutton.c$a:
    257:258:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    262:262:boolean isStateful() -> isStateful
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    int baseline -> d
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:110:void onLayout(boolean,int,int,int,int) -> onLayout
    47:81:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    int[] DRAWABLE_STATE_CHECKED -> g
    boolean checked -> f
    37:37:void <clinit>() -> <clinit>
    42:43:void <init>(android.content.Context) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:82:boolean isChecked() -> isChecked
    92:97:int[] onCreateDrawableState(int) -> onCreateDrawableState
    73:78:void setChecked(boolean) -> setChecked
    87:88:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$a:
    com.google.android.material.internal.CheckableImageButton this$0 -> d
    54:54:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    64:67:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    57:59:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.a:
    android.graphics.RectF currentBounds -> f
    int collapsedTextGravity -> h
    float scale -> F
    float expandedFraction -> c
    android.animation.TimeInterpolator positionInterpolator -> L
    com.google.android.material.resources.CancelableFontCallback collapsedFontCallback -> w
    float expandedShadowRadius -> R
    android.content.res.ColorStateList expandedTextColor -> k
    float expandedDrawX -> o
    android.graphics.Typeface currentTypeface -> u
    java.lang.CharSequence textToDraw -> y
    float collapsedShadowRadius -> N
    boolean boundsChanged -> I
    float currentTextSize -> G
    android.graphics.Rect expandedBounds -> d
    android.animation.TimeInterpolator textSizeInterpolator -> M
    int[] state -> H
    boolean isRtl -> z
    float expandedShadowDx -> S
    android.content.res.ColorStateList collapsedTextColor -> l
    float collapsedDrawX -> p
    android.graphics.Typeface expandedTypeface -> t
    java.lang.CharSequence text -> x
    android.text.TextPaint textPaint -> J
    float collapsedShadowDx -> O
    android.graphics.Paint DEBUG_DRAW_PAINT -> W
    float expandedTextSize -> i
    android.content.res.ColorStateList collapsedShadowColor -> Q
    android.content.res.ColorStateList expandedShadowColor -> U
    float textureAscent -> D
    boolean USE_SCALING_TEXTURE -> V
    android.graphics.Rect collapsedBounds -> e
    android.graphics.Typeface collapsedTypeface -> s
    android.graphics.Paint texturePaint -> C
    android.view.View view -> a
    float expandedShadowDy -> T
    float currentDrawX -> q
    boolean useTexture -> A
    float collapsedShadowDy -> P
    boolean drawTitle -> b
    android.text.TextPaint tmpPaint -> K
    float expandedDrawY -> m
    float collapsedTextSize -> j
    float textureDescent -> E
    int expandedTextGravity -> g
    android.graphics.Bitmap expandedTitleTexture -> B
    com.google.android.material.resources.CancelableFontCallback expandedFontCallback -> v
    float currentDrawY -> r
    float collapsedDrawY -> n
    57:68:void <clinit>() -> <clinit>
    130:139:void <init>(android.view.View) -> <init>
    147:149:void setPositionInterpolator(android.animation.TimeInterpolator) -> a
    152:156:void setExpandedTextSize(float) -> a
    166:170:void setCollapsedTextColor(android.content.res.ColorStateList) -> a
    192:197:void setCollapsedBounds(int,int,int,int) -> a
    200:201:void setCollapsedBounds(android.graphics.Rect) -> a
    204:211:void getCollapsedTextActualBounds(android.graphics.RectF) -> a
    214:218:float calculateCollapsedTextWidth() -> a
    239:241:void getTextPaintCollapsed(android.text.TextPaint) -> a
    274:305:void setCollapsedTextAppearance(int) -> a
    341:344:void setCollapsedTypeface(android.graphics.Typeface) -> a
    413:420:boolean setState(int[]) -> a
    580:621:void draw(android.graphics.Canvas) -> a
    761:767:void setText(java.lang.CharSequence) -> a
    785:785:boolean isClose(float,float) -> a
    803:808:int blendColors(int,int,float) -> a
    813:816:float lerp(float,float,float,android.animation.TimeInterpolator) -> a
    820:820:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> a
    142:144:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> b
    173:177:void setExpandedTextColor(android.content.res.ColorStateList) -> b
    180:185:void setExpandedBounds(int,int,int,int) -> b
    188:189:void setExpandedBounds(android.graphics.Rect) -> b
    234:236:void getTextPaintExpanded(android.text.TextPaint) -> b
    263:267:void setCollapsedTextGravity(int) -> b
    347:350:void setExpandedTypeface(android.graphics.Typeface) -> b
    404:410:void setExpansionFraction(float) -> b
    624:626:boolean calculateIsRtl(java.lang.CharSequence) -> b
    793:793:android.content.res.ColorStateList getCollapsedTextColor() -> b
    270:270:int getCollapsedTextGravity() -> c
    308:338:void setExpandedTextAppearance(int) -> c
    353:358:void setTypefaces(android.graphics.Typeface) -> c
    445:469:void calculateOffsets(float) -> c
    483:489:int getCurrentColor(android.content.res.ColorStateList) -> c
    228:230:float getCollapsedTextHeight() -> d
    252:256:void setExpandedTextGravity(int) -> d
    364:371:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> d
    648:717:void calculateUsingTextSize(float) -> d
    378:385:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> e
    389:389:android.graphics.Typeface getCollapsedTypeface() -> e
    570:577:void interpolateBounds(float) -> e
    478:478:int getCurrentCollapsedTextColor() -> f
    633:644:void setInterpolatedTextSize(float) -> f
    259:259:int getExpandedTextGravity() -> g
    222:224:float getExpandedTextHeight() -> h
    393:393:android.graphics.Typeface getExpandedTypeface() -> i
    429:429:float getExpansionFraction() -> j
    770:770:java.lang.CharSequence getText() -> k
    424:424:boolean isStateful() -> l
    244:249:void onBoundsChanged() -> m
    747:753:void recalculate() -> n
    493:567:void calculateBaseOffsets() -> o
    441:442:void calculateCurrentOffsets() -> p
    774:778:void clearTexture() -> q
    720:721:void ensureExpandedTexture() -> r
    473:473:int getCurrentExpandedTextColor() -> s
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.a$a:
    com.google.android.material.internal.CollapsingTextHelper this$0 -> a
    295:295:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    298:299:void apply(android.graphics.Typeface) -> a
com.google.android.material.internal.CollapsingTextHelper$2 -> com.google.android.material.internal.a$b:
    com.google.android.material.internal.CollapsingTextHelper this$0 -> a
    328:328:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    331:332:void apply(android.graphics.Typeface) -> a
com.google.android.material.internal.ContextUtils -> com.google.android.material.internal.b:
    41:47:android.app.Activity getActivity(android.content.Context) -> a
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.c:
    java.lang.ThreadLocal matrix -> a
    java.lang.ThreadLocal rectF -> b
    36:37:void <clinit>() -> <clinit>
    80:82:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    85:97:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> a
    48:70:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> b
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    boolean singleLine -> f
    int lineSpacing -> d
    int itemSpacing -> e
    47:48:void <init>(android.content.Context) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    68:73:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> a
    92:92:boolean isSingleLine() -> a
    173:177:int getMeasuredDimension(int,int,int) -> a
    84:84:int getItemSpacing() -> getItemSpacing
    76:76:int getLineSpacing() -> getLineSpacing
    185:235:void onLayout(boolean,int,int,int,int) -> onLayout
    102:170:void onMeasure(int,int) -> onMeasure
    88:89:void setItemSpacing(int) -> setItemSpacing
    80:81:void setLineSpacing(int) -> setLineSpacing
    97:98:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    android.graphics.drawable.Drawable foreground -> s
    int foregroundGravity -> v
    android.graphics.Rect overlayBounds -> u
    boolean mForegroundInPadding -> w
    boolean foregroundBoundsChanged -> x
    android.graphics.Rect selfBounds -> t
    53:54:void <init>(android.content.Context) -> <init>
    57:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    202:233:void draw(android.graphics.Canvas) -> draw
    239:243:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    136:140:void drawableStateChanged() -> drawableStateChanged
    185:185:android.graphics.drawable.Drawable getForeground() -> getForeground
    89:89:int getForegroundGravity() -> getForegroundGravity
    128:132:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    190:192:void onLayout(boolean,int,int,int,int) -> onLayout
    196:198:void onSizeChanged(int,int,int,int) -> onSizeChanged
    151:175:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    100:118:void setForegroundGravity(int) -> setForegroundGravity
    122:122:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.NavigationMenu -> com.google.android.material.internal.NavigationMenu:
    38:39:void <init>(android.content.Context) -> <init>
    43:46:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    androidx.core.view.AccessibilityDelegateCompat accessibilityDelegate -> H
    int[] CHECKED_STATE_SET -> I
    android.graphics.drawable.Drawable emptyDrawable -> G
    boolean needsEmptyIcon -> z
    android.widget.CheckedTextView textView -> B
    int iconSize -> y
    android.content.res.ColorStateList iconTintList -> E
    boolean hasIconTintList -> F
    boolean checkable -> A
    android.widget.FrameLayout actionArea -> C
    androidx.appcompat.view.menu.MenuItemImpl itemData -> D
    53:53:void <clinit>() -> <clinit>
    84:85:void <init>(android.content.Context) -> <init>
    88:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    92:99:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    103:120:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> a
    237:237:boolean prefersCondensedTitle() -> a
    148:152:void recycle() -> d
    129:145:void adjustAppearance() -> e
    167:176:android.graphics.drawable.StateListDrawable createDefaultBackground() -> f
    123:123:boolean shouldExpandActionArea() -> g
    181:181:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    247:251:int[] onCreateDrawableState(int) -> onCreateDrawableState
    155:164:void setActionView(android.view.View) -> setActionView
    191:197:void setCheckable(boolean) -> setCheckable
    201:203:void setChecked(boolean) -> setChecked
    276:277:void setHorizontalPadding(int) -> setHorizontalPadding
    210:229:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    280:281:void setIconPadding(int) -> setIconPadding
    232:233:void setIconSize(int) -> setIconSize
    255:261:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    284:285:void setMaxLines(int) -> setMaxLines
    272:273:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    264:265:void setTextAppearance(int) -> setTextAppearance
    268:269:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    186:187:void setTitle(java.lang.CharSequence) -> setTitle
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$a:
    com.google.android.material.internal.NavigationMenuItemView this$0 -> d
    74:74:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    78:80:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
com.google.android.material.internal.NavigationMenuPresenter -> com.google.android.material.internal.NavigationMenuPresenter:
    int textAppearance -> k
    int id -> h
    boolean textAppearanceSet -> l
    com.google.android.material.internal.NavigationMenuView menuView -> d
    com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter -> i
    android.view.LayoutInflater layoutInflater -> j
    android.widget.LinearLayout headerLayout -> e
    boolean hasCustomItemIconSize -> s
    androidx.appcompat.view.menu.MenuPresenter$Callback callback -> f
    int paddingSeparator -> v
    int itemMaxLines -> t
    int paddingTopDefault -> u
    android.graphics.drawable.Drawable itemBackground -> o
    int itemIconSize -> r
    androidx.appcompat.view.menu.MenuBuilder menu -> g
    android.content.res.ColorStateList iconTintList -> n
    int itemHorizontalPadding -> p
    android.content.res.ColorStateList textColor -> m
    int itemIconPadding -> q
    android.view.View$OnClickListener onClickListener -> w
    57:370:void <init>() -> <init>
    57:57:int access$000(com.google.android.material.internal.NavigationMenuPresenter) -> a
    95:100:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    104:117:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    122:125:void updateMenuView(boolean) -> a
    134:134:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    139:142:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    156:156:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    161:161:int getId() -> a
    189:204:void onRestoreInstanceState(android.os.Parcelable) -> a
    207:208:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
    216:218:android.view.View inflateHeaderView(int) -> a
    222:225:void addHeaderView(android.view.View) -> a
    248:250:void setItemIconTintList(android.content.res.ColorStateList) -> a
    274:276:void setItemBackground(android.graphics.drawable.Drawable) -> a
    320:328:void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat) -> a
    146:146:boolean flagActionItems() -> b
    151:151:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    165:166:void setId(int) -> b
    258:260:void setItemTextColor(android.content.res.ColorStateList) -> b
    314:317:void setUpdateSuspended(boolean) -> b
    170:184:android.os.Parcelable onSaveInstanceState() -> c
    283:285:void setItemHorizontalPadding(int) -> c
    212:212:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> d
    292:294:void setItemIconPadding(int) -> d
    235:235:int getHeaderCount() -> e
    306:311:void setItemIconSize(int) -> e
    270:270:android.graphics.drawable.Drawable getItemBackground() -> f
    297:299:void setItemMaxLines(int) -> f
    263:266:void setItemTextAppearance(int) -> g
    279:279:int getItemHorizontalPadding() -> g
    288:288:int getItemIconPadding() -> h
    302:302:int getItemMaxLines() -> i
    254:254:android.content.res.ColorStateList getItemTextColor() -> j
    244:244:android.content.res.ColorStateList getItemTintList() -> k
com.google.android.material.internal.NavigationMenuPresenter$1 -> com.google.android.material.internal.NavigationMenuPresenter$a:
    com.google.android.material.internal.NavigationMenuPresenter this$0 -> d
    371:371:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    375:388:void onClick(android.view.View) -> onClick
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$b:
    363:364:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter -> com.google.android.material.internal.NavigationMenuPresenter$c:
    boolean updateSuspended -> e
    com.google.android.material.internal.NavigationMenuPresenter this$0 -> f
    java.util.ArrayList items -> c
    androidx.appcompat.view.menu.MenuItemImpl checkedItem -> d
    405:407:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    411:411:long getItemId(int) -> a
    454:497:void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int) -> a
    501:504:void onViewRecycled(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder) -> a
    592:593:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
    630:670:void restoreInstanceState(android.os.Bundle) -> a
    391:391:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    391:391:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> b
    416:416:int getItemCount() -> b
    421:434:int getItemViewType(int) -> b
    439:441:com.google.android.material.internal.NavigationMenuPresenter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> b
    673:674:void setUpdateSuspended(boolean) -> b
    391:391:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    585:589:void appendTransparentIconIfMissing(int,int) -> d
    607:626:android.os.Bundle createInstanceState() -> f
    603:603:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> g
    678:684:int getRowCount() -> h
    507:509:void update() -> i
    516:582:void prepareMenuItems() -> j
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem -> com.google.android.material.internal.NavigationMenuPresenter$d:
    730:730:void <init>() -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem -> com.google.android.material.internal.NavigationMenuPresenter$e:
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem -> com.google.android.material.internal.NavigationMenuPresenter$f:
    int paddingBottom -> b
    int paddingTop -> a
    714:717:void <init>(int,int) -> <init>
    724:724:int getPaddingBottom() -> a
    720:720:int getPaddingTop() -> b
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem -> com.google.android.material.internal.NavigationMenuPresenter$g:
    androidx.appcompat.view.menu.MenuItemImpl menuItem -> a
    boolean needsEmptyIcon -> b
    698:700:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    703:703:androidx.appcompat.view.menu.MenuItemImpl getMenuItem() -> a
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate -> com.google.android.material.internal.NavigationMenuPresenter$h:
    com.google.android.material.internal.NavigationMenuPresenter this$0 -> f
    736:738:void <init>(com.google.android.material.internal.NavigationMenuPresenter,androidx.recyclerview.widget.RecyclerView) -> <init>
    742:744:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$i:
    341:343:void <init>(android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$j:
    356:357:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$k:
    349:350:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$l:
    333:334:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
    51:51:int getWindowAnimations() -> getWindowAnimations
com.google.android.material.internal.NavigationSubMenu -> com.google.android.material.internal.NavigationSubMenu:
    37:38:void <init>(android.content.Context,com.google.android.material.internal.NavigationMenu,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    42:44:void onItemsChanged(boolean) -> b
com.google.android.material.internal.ParcelableSparseArray -> com.google.android.material.internal.ParcelableSparseArray:
    64:64:void <clinit>() -> <clinit>
    31:32:void <init>() -> <init>
    35:43:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    47:47:int describeContents() -> describeContents
    52:62:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseArray$1 -> com.google.android.material.internal.ParcelableSparseArray$a:
    65:65:void <init>() -> <init>
    65:65:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    65:65:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    68:68:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    73:73:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    65:65:java.lang.Object[] newArray(int) -> newArray
    78:78:com.google.android.material.internal.ParcelableSparseArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseBooleanArray -> com.google.android.material.internal.ParcelableSparseBooleanArray:
    69:69:void <clinit>() -> <clinit>
    35:36:void <init>() -> <init>
    39:40:void <init>(int) -> <init>
    51:51:int describeContents() -> describeContents
    56:67:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseBooleanArray$1 -> com.google.android.material.internal.ParcelableSparseBooleanArray$a:
    70:70:void <init>() -> <init>
    70:70:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    73:86:com.google.android.material.internal.ParcelableSparseBooleanArray createFromParcel(android.os.Parcel) -> createFromParcel
    70:70:java.lang.Object[] newArray(int) -> newArray
    91:91:com.google.android.material.internal.ParcelableSparseBooleanArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseIntArray -> com.google.android.material.internal.ParcelableSparseIntArray:
    69:69:void <clinit>() -> <clinit>
    35:36:void <init>() -> <init>
    39:40:void <init>(int) -> <init>
    51:51:int describeContents() -> describeContents
    56:67:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseIntArray$1 -> com.google.android.material.internal.ParcelableSparseIntArray$a:
    70:70:void <init>() -> <init>
    70:70:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    73:86:com.google.android.material.internal.ParcelableSparseIntArray createFromParcel(android.os.Parcel) -> createFromParcel
    70:70:java.lang.Object[] newArray(int) -> newArray
    91:91:com.google.android.material.internal.ParcelableSparseIntArray[] newArray(int) -> newArray
com.google.android.material.internal.ScrimInsetsFrameLayout -> com.google.android.material.internal.ScrimInsetsFrameLayout:
    android.graphics.drawable.Drawable insetForeground -> d
    android.graphics.Rect insets -> e
    android.graphics.Rect tempRect -> f
    47:48:void <init>(android.content.Context) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    139:139:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> a
    91:121:void draw(android.graphics.Canvas) -> draw
    125:129:void onAttachedToWindow() -> onAttachedToWindow
    133:137:void onDetachedFromWindow() -> onDetachedFromWindow
com.google.android.material.internal.ScrimInsetsFrameLayout$1 -> com.google.android.material.internal.ScrimInsetsFrameLayout$a:
    com.google.android.material.internal.ScrimInsetsFrameLayout this$0 -> a
    70:70:void <init>(com.google.android.material.internal.ScrimInsetsFrameLayout) -> <init>
    73:84:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.d:
    com.google.android.material.internal.StateListAnimator$Tuple lastMatch -> b
    android.animation.ValueAnimator runningAnimator -> c
    android.animation.Animator$AnimatorListener animationListener -> d
    java.util.ArrayList tuples -> a
    35:42:void <init>() -> <init>
    60:63:void addState(int[],android.animation.ValueAnimator) -> a
    67:88:void setState(int[]) -> a
    91:93:void start(com.google.android.material.internal.StateListAnimator$Tuple) -> a
    108:112:void jumpToCurrentState() -> a
    96:100:void cancel() -> b
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.d$a:
    com.google.android.material.internal.StateListAnimator this$0 -> a
    43:43:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    46:49:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.d$b:
    int[] specs -> a
    android.animation.ValueAnimator animator -> b
    118:121:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.e:
    com.google.android.material.resources.TextAppearanceFontCallback fontCallback -> b
    com.google.android.material.resources.TextAppearance textAppearance -> f
    android.text.TextPaint textPaint -> a
    java.lang.ref.WeakReference delegate -> e
    float textWidth -> c
    boolean textWidthDirty -> d
    76:78:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> a
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> a
    82:83:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> a
    90:91:void setTextWidthDirty(boolean) -> a
    99:105:float getTextWidth(java.lang.String) -> a
    109:112:float calculateTextWidth(java.lang.CharSequence) -> a
    121:121:com.google.android.material.resources.TextAppearance getTextAppearance() -> a
    132:151:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> a
    154:155:void updateTextPaintDrawState(android.content.Context) -> a
    86:86:android.text.TextPaint getTextPaint() -> b
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.e$a:
    com.google.android.material.internal.TextDrawableHelper this$0 -> a
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    47:55:void onFontRetrieved(android.graphics.Typeface,boolean) -> a
    59:65:void onFontRetrievalFailed(int) -> a
com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate -> com.google.android.material.internal.e$b:
    void onTextSizeChange() -> a
com.google.android.material.internal.TextScale -> com.google.android.material.internal.f:
    32:32:void <init>() -> <init>
    42:43:void captureEndValues(androidx.transition.TransitionValues) -> a
    55:59:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    37:38:void captureStartValues(androidx.transition.TransitionValues) -> c
    46:50:void captureValues(androidx.transition.TransitionValues) -> d
com.google.android.material.internal.TextScale$1 -> com.google.android.material.internal.f$a:
    android.widget.TextView val$view -> a
    75:75:void <init>(com.google.android.material.internal.TextScale,android.widget.TextView) -> <init>
    78:81:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.g:
    int[] MATERIAL_CHECK_ATTRS -> b
    int[] ANDROID_THEME_OVERLAY_ATTRS -> c
    int[] MATERIAL_THEME_OVERLAY_ATTR -> d
    int[] APPCOMPAT_CHECK_ATTRS -> a
    42:50:void <clinit>() -> <clinit>
    127:147:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> a
    156:185:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> a
    211:212:void checkAppCompatTheme(android.content.Context) -> a
    227:235:boolean isTheme(android.content.Context,int[]) -> a
    239:240:void checkTheme(android.content.Context,int[],java.lang.String) -> a
    282:289:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> a
    198:207:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> b
    215:216:void checkMaterialTheme(android.content.Context) -> b
    256:272:android.content.Context createThemedContext(android.content.Context,android.util.AttributeSet,int,int) -> b
    78:84:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> c
    300:305:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> c
    116:122:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> d
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.h:
    38:40:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> a
    57:57:boolean isLayoutRtl(android.view.View) -> a
    61:62:float dpToPx(android.content.Context,int) -> a
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    int userSetVisibility -> d
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:59:void internalSetVisibility(int,boolean) -> a
    62:62:int getUserSetVisibility() -> getUserSetVisibility
    51:52:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.g.a:
    28:30:float dist(float,float,float,float) -> a
    49:49:boolean geq(float,float,float) -> a
    65:65:float distanceToFurthestCorner(float,float,float,float,float,float) -> a
    37:37:float lerp(float,float,float) -> b
    74:74:float max(float,float,float,float) -> b
com.google.android.material.navigation.NavigationView -> com.google.android.material.navigation.NavigationView:
    int maxWidth -> j
    com.google.android.material.internal.NavigationMenuPresenter presenter -> h
    com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener listener -> i
    android.view.MenuInflater menuInflater -> k
    com.google.android.material.internal.NavigationMenu menu -> g
    int[] CHECKED_STATE_SET -> l
    int[] DISABLED_STATE_SET -> m
    93:94:void <clinit>() -> <clinit>
    107:108:void <init>(android.content.Context) -> <init>
    111:112:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    115:229:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    254:269:android.graphics.drawable.Drawable createDefaultItemBackground(androidx.appcompat.widget.TintTypedArray) -> a
    325:326:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> a
    354:354:android.view.View inflateHeaderView(int) -> a
    232:232:boolean hasShapeAppearance(androidx.appcompat.widget.TintTypedArray) -> b
    336:340:void inflateMenu(int) -> b
    609:621:android.content.res.ColorStateList createDefaultColorStateList(int) -> c
    561:561:android.view.MenuItem getCheckedItem() -> getCheckedItem
    381:381:int getHeaderCount() -> getHeaderCount
    445:445:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    477:477:int getItemHorizontalPadding() -> getItemHorizontalPadding
    508:508:int getItemIconPadding() -> getItemIconPadding
    403:403:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    598:598:int getItemMaxLines() -> getItemMaxLines
    424:424:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    344:344:android.view.Menu getMenu() -> getMenu
    602:605:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    304:319:void onMeasure(int,int) -> onMeasure
    283:290:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    274:278:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    537:541:void setCheckedItem(int) -> setCheckedItem
    549:553:void setCheckedItem(android.view.MenuItem) -> setCheckedItem
    238:245:void setElevation(float) -> setElevation
    466:467:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    456:457:void setItemBackgroundResource(int) -> setItemBackgroundResource
    487:488:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    497:498:void setItemHorizontalPaddingResource(int) -> setItemHorizontalPaddingResource
    518:519:void setItemIconPadding(int) -> setItemIconPadding
    528:529:void setItemIconPaddingResource(int) -> setItemIconPaddingResource
    580:581:void setItemIconSize(int) -> setItemIconSize
    413:414:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    589:590:void setItemMaxLines(int) -> setItemMaxLines
    570:571:void setItemTextAppearance(int) -> setItemTextAppearance
    434:435:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    299:300:void setNavigationItemSelectedListener(com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener) -> setNavigationItemSelectedListener
com.google.android.material.navigation.NavigationView$1 -> com.google.android.material.navigation.NavigationView$a:
    com.google.android.material.navigation.NavigationView this$0 -> d
    199:199:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    202:202:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    206:206:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener -> com.google.android.material.navigation.NavigationView$b:
    boolean onNavigationItemSelected(android.view.MenuItem) -> a
com.google.android.material.navigation.NavigationView$SavedState -> com.google.android.material.navigation.NavigationView$SavedState:
    android.os.Bundle menuState -> f
    661:661:void <clinit>() -> <clinit>
    647:649:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    652:653:void <init>(android.os.Parcelable) -> <init>
    657:659:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationView$SavedState$1 -> com.google.android.material.navigation.NavigationView$SavedState$a:
    662:662:void <init>() -> <init>
    662:662:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    662:662:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    665:665:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    670:670:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    662:662:java.lang.Object[] newArray(int) -> newArray
    675:675:com.google.android.material.navigation.NavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.picker.CalendarBounds -> com.google.android.material.picker.CalendarBounds:
    com.google.android.material.picker.Month current -> f
    com.google.android.material.picker.Month end -> e
    com.google.android.material.picker.Month start -> d
    104:104:void <clinit>() -> <clinit>
    36:41:void <init>(com.google.android.material.picker.Month,com.google.android.material.picker.Month,com.google.android.material.picker.Month) -> <init>
    53:53:com.google.android.material.picker.CalendarBounds create(com.google.android.material.picker.Month,com.google.android.material.picker.Month,com.google.android.material.picker.Month) -> a
    80:80:com.google.android.material.picker.Month getCurrent() -> b
    75:75:com.google.android.material.picker.Month getEnd() -> c
    70:70:com.google.android.material.picker.Month getStart() -> d
    122:122:int describeContents() -> describeContents
    85:92:boolean equals(java.lang.Object) -> equals
    97:98:int hashCode() -> hashCode
    127:130:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.picker.CalendarBounds$1 -> com.google.android.material.picker.CalendarBounds$a:
    105:105:void <init>() -> <init>
    105:105:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    108:111:com.google.android.material.picker.CalendarBounds createFromParcel(android.os.Parcel) -> createFromParcel
    105:105:java.lang.Object[] newArray(int) -> newArray
    116:116:com.google.android.material.picker.CalendarBounds[] newArray(int) -> newArray
com.google.android.material.picker.CalendarGridSelectors -> com.google.android.material.picker.a:
    46:85:void colorCell(android.widget.TextView,int) -> a
com.google.android.material.picker.DateGridSelector -> com.google.android.material.picker.DateGridSelector:
    java.util.Calendar selectedItem -> d
    84:84:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    38:38:java.lang.Object getSelection() -> a
    39:39:java.util.Calendar access$002(com.google.android.material.picker.DateGridSelector,java.util.Calendar) -> a
    45:46:void select(java.util.Calendar) -> a
    50:68:void drawCell(android.widget.TextView,java.util.Calendar) -> a
    73:73:java.util.Calendar getSelection() -> a
    79:79:void onCalendarMonthDraw(android.graphics.Canvas,com.google.android.material.picker.MaterialCalendarGridView) -> a
    101:101:int describeContents() -> describeContents
    106:107:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.picker.DateGridSelector$1 -> com.google.android.material.picker.DateGridSelector$a:
    85:85:void <init>() -> <init>
    85:85:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:90:com.google.android.material.picker.DateGridSelector createFromParcel(android.os.Parcel) -> createFromParcel
    85:85:java.lang.Object[] newArray(int) -> newArray
    95:95:com.google.android.material.picker.DateGridSelector[] newArray(int) -> newArray
com.google.android.material.picker.DateRangeGridSelector -> com.google.android.material.picker.DateRangeGridSelector:
    android.graphics.Paint rangeFillPaint -> g
    java.util.Calendar selectedEndItem -> e
    int selectedStyle -> j
    int todayStyle -> k
    int rangeFillColor -> h
    java.util.Calendar selectedStartItem -> d
    int dayStyle -> i
    boolean stylesInitialized -> f
    211:211:void <clinit>() -> <clinit>
    47:51:void <init>() -> <init>
    46:46:java.lang.Object getSelection() -> a
    47:47:java.util.Calendar access$002(com.google.android.material.picker.DateRangeGridSelector,java.util.Calendar) -> a
    47:47:boolean access$202(com.google.android.material.picker.DateRangeGridSelector,boolean) -> a
    47:47:int access$302(com.google.android.material.picker.DateRangeGridSelector,int) -> a
    60:82:void initializeStyles(android.content.Context) -> a
    86:95:void select(java.util.Calendar) -> a
    99:110:void drawCell(android.widget.TextView,java.util.Calendar) -> a
    114:167:void onCalendarMonthDraw(android.graphics.Canvas,com.google.android.material.picker.MaterialCalendarGridView) -> a
    172:173:androidx.core.util.Pair getSelection() -> a
    198:199:boolean skipMonth(java.util.Calendar,java.util.Calendar,java.util.Calendar,java.util.Calendar) -> a
    205:205:int horizontalMidPoint(android.view.View) -> a
    47:47:java.util.Calendar access$102(com.google.android.material.picker.DateRangeGridSelector,java.util.Calendar) -> b
    47:47:int access$402(com.google.android.material.picker.DateRangeGridSelector,int) -> b
    47:47:int access$502(com.google.android.material.picker.DateRangeGridSelector,int) -> c
    47:47:int access$602(com.google.android.material.picker.DateRangeGridSelector,int) -> d
    234:234:int describeContents() -> describeContents
    239:246:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.picker.DateRangeGridSelector$1 -> com.google.android.material.picker.DateRangeGridSelector$a:
    212:212:void <init>() -> <init>
    212:212:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    215:223:com.google.android.material.picker.DateRangeGridSelector createFromParcel(android.os.Parcel) -> createFromParcel
    212:212:java.lang.Object[] newArray(int) -> newArray
    228:228:com.google.android.material.picker.DateRangeGridSelector[] newArray(int) -> newArray
com.google.android.material.picker.DaysOfWeekAdapter -> com.google.android.material.picker.b:
    java.util.Calendar calendar -> d
    int firstDayOfWeek -> f
    int CALENDAR_DAY_STYLE -> g
    int daysInWeek -> e
    43:43:void <clinit>() -> <clinit>
    46:51:void <init>() -> <init>
    87:91:int positionToDayOfWeek(int) -> a
    69:69:int getCount() -> getCount
    36:36:java.lang.Object getItem(int) -> getItem
    55:58:java.lang.Integer getItem(int) -> getItem
    64:64:long getItemId(int) -> getItemId
    74:82:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.google.android.material.picker.GridSelector -> com.google.android.material.picker.GridSelector:
    void drawCell(android.widget.TextView,java.util.Calendar) -> a
    java.lang.Object getSelection() -> a
    void onCalendarMonthDraw(android.graphics.Canvas,com.google.android.material.picker.MaterialCalendarGridView) -> a
    void select(java.util.Calendar) -> a
com.google.android.material.picker.MaterialCalendar -> com.google.android.material.picker.c:
    int themeResId -> b0
    java.lang.Object VIEW_PAGER_TAG -> f0
    com.google.android.material.picker.MonthsPagerAdapter monthsPagerAdapter -> e0
    java.util.LinkedHashSet onSelectionChangedListeners -> a0
    com.google.android.material.picker.CalendarBounds calendarBounds -> d0
    com.google.android.material.picker.GridSelector gridSelector -> c0
    57:57:void <clinit>() -> <clinit>
    49:59:void <init>() -> <init>
    49:49:com.google.android.material.picker.GridSelector access$000(com.google.android.material.picker.MaterialCalendar) -> a
    49:49:com.google.android.material.picker.CalendarBounds access$302(com.google.android.material.picker.MaterialCalendar,com.google.android.material.picker.CalendarBounds) -> a
    109:151:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    49:49:com.google.android.material.picker.MonthsPagerAdapter access$100(com.google.android.material.picker.MaterialCalendar) -> b
    183:183:int getDayHeight(android.content.Context) -> b
    187:223:void addMonthChangeListeners(android.view.View) -> b
    49:49:java.util.LinkedHashSet access$200(com.google.android.material.picker.MaterialCalendar) -> c
    96:101:void onCreate(android.os.Bundle) -> c
    49:49:com.google.android.material.picker.CalendarBounds access$300(com.google.android.material.picker.MaterialCalendar) -> d
    88:92:void onSaveInstanceState(android.os.Bundle) -> e
com.google.android.material.picker.MaterialCalendar$1 -> com.google.android.material.picker.c$a:
    com.google.android.material.picker.MaterialCalendar this$0 -> a
    137:137:void <init>(com.google.android.material.picker.MaterialCalendar) -> <init>
    141:146:void onDayClick(java.util.Calendar) -> a
com.google.android.material.picker.MaterialCalendar$2 -> com.google.android.material.picker.c$b:
    com.google.android.material.button.MaterialButton val$monthDropSelect -> a
    com.google.android.material.picker.MaterialCalendar this$0 -> b
    193:193:void <init>(com.google.android.material.picker.MaterialCalendar,com.google.android.material.button.MaterialButton) -> <init>
    196:202:void onPageSelected(int) -> b
com.google.android.material.picker.MaterialCalendar$3 -> com.google.android.material.picker.c$c:
    androidx.viewpager.widget.ViewPager val$monthPager -> d
    206:206:void <init>(com.google.android.material.picker.MaterialCalendar,androidx.viewpager.widget.ViewPager) -> <init>
    209:212:void onClick(android.view.View) -> onClick
com.google.android.material.picker.MaterialCalendar$4 -> com.google.android.material.picker.c$d:
    androidx.viewpager.widget.ViewPager val$monthPager -> d
    215:215:void <init>(com.google.android.material.picker.MaterialCalendar,androidx.viewpager.widget.ViewPager) -> <init>
    218:221:void onClick(android.view.View) -> onClick
com.google.android.material.picker.MaterialCalendar$OnDayClickListener -> com.google.android.material.picker.c$e:
    void onDayClick(java.util.Calendar) -> a
com.google.android.material.picker.MaterialCalendar$OnSelectionChangedListener -> com.google.android.material.picker.c$f:
    void onSelectionChanged(java.lang.Object) -> a
com.google.android.material.picker.MaterialCalendarGridView -> com.google.android.material.picker.MaterialCalendarGridView:
    27:28:void <init>(android.content.Context) -> <init>
    31:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    35:36:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    24:24:android.widget.Adapter getAdapter() -> getAdapter
    24:24:android.widget.ListAdapter getAdapter() -> getAdapter
    40:40:com.google.android.material.picker.MonthAdapter getAdapter() -> getAdapter
    57:59:void onDraw(android.graphics.Canvas) -> onDraw
    24:24:void setAdapter(android.widget.Adapter) -> setAdapter
    45:47:void setAdapter(android.widget.ListAdapter) -> setAdapter
com.google.android.material.picker.Month -> com.google.android.material.picker.Month:
    int daysInWeek -> h
    java.text.SimpleDateFormat longNameFormat -> j
    java.util.Calendar calendar -> d
    int daysInMonth -> i
    int month -> f
    int year -> g
    java.lang.String longName -> e
    30:150:void <clinit>() -> <clinit>
    38:46:void <init>(java.util.Calendar) -> <init>
    57:61:com.google.android.material.picker.Month create(int,int) -> a
    87:89:java.util.Calendar getDay(int) -> a
    112:112:int compareTo(com.google.android.material.picker.Month) -> a
    71:75:int daysFromStartOfWeekToFirstOfMonth() -> b
    125:128:int monthsUntil(com.google.android.material.picker.Month) -> b
    137:139:com.google.android.material.picker.Month monthsLater(int) -> b
    144:144:java.lang.String getLongName() -> c
    27:27:int compareTo(java.lang.Object) -> compareTo
    167:167:int describeContents() -> describeContents
    94:101:boolean equals(java.lang.Object) -> equals
    106:107:int hashCode() -> hashCode
    172:174:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.picker.Month$1 -> com.google.android.material.picker.Month$a:
    151:151:void <init>() -> <init>
    151:151:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    154:156:com.google.android.material.picker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    151:151:java.lang.Object[] newArray(int) -> newArray
    161:161:com.google.android.material.picker.Month[] newArray(int) -> newArray
com.google.android.material.picker.MonthAdapter -> com.google.android.material.picker.d:
    com.google.android.material.picker.GridSelector gridSelector -> e
    int MAXIMUM_WEEKS -> f
    com.google.android.material.picker.Month month -> d
    40:40:void <clinit>() -> <clinit>
    48:51:void <init>(android.content.Context,com.google.android.material.picker.Month,com.google.android.material.picker.GridSelector) -> <init>
    117:117:int firstPositionInMonth() -> a
    144:145:int dayToPosition(int) -> a
    128:128:int lastPositionInMonth() -> b
    139:139:int positionToDay(int) -> b
    150:150:boolean withinMonth(int) -> c
    83:83:int getCount() -> getCount
    35:35:java.lang.Object getItem(int) -> getItem
    64:65:java.util.Calendar getItem(int) -> getItem
    72:72:long getItemId(int) -> getItemId
    35:35:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    88:106:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
com.google.android.material.picker.MonthFragment -> com.google.android.material.picker.e:
    com.google.android.material.picker.Month month -> a0
    com.google.android.material.picker.MaterialCalendar$OnDayClickListener onDayClickListener -> c0
    com.google.android.material.picker.MonthAdapter monthAdapter -> b0
    41:41:void <init>() -> <init>
    40:40:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    41:41:com.google.android.material.picker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.picker.MonthFragment) -> a
    61:66:com.google.android.material.picker.MonthFragment newInstance(com.google.android.material.picker.Month,com.google.android.material.picker.GridSelector) -> a
    80:95:android.widget.GridView onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    41:41:com.google.android.material.picker.MonthAdapter access$100(com.google.android.material.picker.MonthFragment) -> b
    71:75:void onCreate(android.os.Bundle) -> c
    99:100:void notifyDataSetChanged() -> n0
    51:52:void setOnDayClickListener(com.google.android.material.picker.MaterialCalendar$OnDayClickListener) -> setOnDayClickListener
com.google.android.material.picker.MonthFragment$1 -> com.google.android.material.picker.e$a:
    com.google.android.material.picker.MonthFragment this$0 -> d
    87:87:void <init>(com.google.android.material.picker.MonthFragment) -> <init>
    90:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.picker.MonthsPagerAdapter -> com.google.android.material.picker.f:
    android.util.SparseArray observingFragments -> m
    int startIndex -> k
    com.google.android.material.picker.MaterialCalendar$OnDayClickListener onDayClickListener -> n
    com.google.android.material.picker.Month lastPage -> j
    com.google.android.material.picker.Month firstPage -> i
    com.google.android.material.picker.GridSelector gridSelector -> l
    63:65:void <init>(androidx.fragment.app.FragmentManager,com.google.android.material.picker.GridSelector,com.google.android.material.picker.Month,com.google.android.material.picker.Month,com.google.android.material.picker.Month,com.google.android.material.picker.MaterialCalendar$OnDayClickListener) -> <init>
    32:32:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    79:79:int getCount() -> a
    85:87:androidx.fragment.app.Fragment instantiateItem(android.view.ViewGroup,int) -> a
    109:115:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    125:125:java.lang.CharSequence getPageTitle(int) -> a
    32:32:androidx.fragment.app.Fragment getItem(int) -> c
    92:104:com.google.android.material.picker.MonthFragment getItem(int) -> c
    119:119:int getStartPosition() -> d
    129:129:com.google.android.material.picker.Month getPageMonth(int) -> d
com.google.android.material.picker.MonthsPagerAdapter$1 -> com.google.android.material.picker.f$a:
    com.google.android.material.picker.MonthFragment val$monthFragment -> a
    96:96:void <init>(com.google.android.material.picker.MonthsPagerAdapter,com.google.android.material.picker.MonthFragment) -> <init>
    99:100:void onChanged() -> onChanged
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
    int DEF_STYLE_RES -> h
    android.content.res.ColorStateList materialThemeColorsTintList -> g
    int[][] ENABLED_CHECKED_STATES -> i
    43:45:void <clinit>() -> <clinit>
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    105:122:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    87:92:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.h.a:
    android.graphics.Typeface fallbackFont -> a
    com.google.android.material.resources.CancelableFontCallback$ApplyFont applyFont -> b
    boolean cancelled -> c
    42:45:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    49:50:void onFontRetrieved(android.graphics.Typeface,boolean) -> a
    54:55:void onFontRetrievalFailed(int) -> a
    64:65:void cancel() -> a
    68:71:void updateIfNotCancelled(android.graphics.Typeface) -> a
com.google.android.material.resources.CancelableFontCallback$ApplyFont -> com.google.android.material.h.a$a:
    void apply(android.graphics.Typeface) -> a
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.h.b:
    45:49:android.util.TypedValue resolve(android.content.Context,int) -> a
    59:66:int resolveOrThrow(android.content.Context,int,java.lang.String) -> a
    81:81:int resolveOrThrow(android.view.View,int) -> a
    101:102:boolean resolveBoolean(android.content.Context,int,boolean) -> a
com.google.android.material.resources.MaterialResources -> com.google.android.material.h.c:
    50:69:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> a
    79:98:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> a
    145:148:int getIndexWithValue(android.content.res.TypedArray,int,int) -> a
    110:119:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> b
    130:136:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> c
com.google.android.material.resources.TextAppearance -> com.google.android.material.h.d:
    android.content.res.ColorStateList textColor -> b
    float shadowRadius -> i
    float shadowDy -> h
    int fontFamilyResourceId -> j
    android.graphics.Typeface font -> l
    float shadowDx -> g
    android.content.res.ColorStateList shadowColor -> f
    boolean fontResolved -> k
    int typeface -> d
    float textSize -> a
    int textStyle -> c
    java.lang.String fontFamily -> e
    74:105:void <init>(android.content.Context,int) -> <init>
    46:46:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> a
    46:46:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> a
    46:46:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> a
    115:137:android.graphics.Typeface getFont(android.content.Context) -> a
    154:200:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> a
    217:234:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> a
    245:246:android.graphics.Typeface getFallbackFont() -> a
    322:329:void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface) -> a
    251:273:void createFallbackFont() -> b
    285:298:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> b
    308:313:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> c
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.h.d$a:
    com.google.android.material.resources.TextAppearanceFontCallback val$callback -> a
    com.google.android.material.resources.TextAppearance this$0 -> b
    176:176:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    179:182:void onFontRetrieved(android.graphics.Typeface) -> a
    186:188:void onFontRetrievalFailed(int) -> a
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.h.d$b:
    com.google.android.material.resources.TextAppearanceFontCallback val$callback -> b
    android.text.TextPaint val$textPaint -> a
    com.google.android.material.resources.TextAppearance this$0 -> c
    221:221:void <init>(com.google.android.material.resources.TextAppearance,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    225:227:void onFontRetrieved(android.graphics.Typeface,boolean) -> a
    231:232:void onFontRetrievalFailed(int) -> a
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.h.e:
    boolean shouldLoadFontSynchronously -> a
    37:37:boolean shouldLoadFontSynchronously() -> a
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.h.f:
    30:30:void <init>() -> <init>
    void onFontRetrievalFailed(int) -> a
    void onFontRetrieved(android.graphics.Typeface,boolean) -> a
com.google.android.material.ripple.RippleUtils -> com.google.android.material.i.a:
    int[] SELECTED_PRESSED_STATE_SET -> f
    int[] SELECTED_HOVERED_FOCUSED_STATE_SET -> g
    int[] SELECTED_FOCUSED_STATE_SET -> h
    int[] SELECTED_HOVERED_STATE_SET -> i
    int[] PRESSED_STATE_SET -> b
    int[] HOVERED_FOCUSED_STATE_SET -> c
    int[] FOCUSED_STATE_SET -> d
    int[] HOVERED_STATE_SET -> e
    boolean USE_FRAMEWORK_RIPPLE -> a
    int[] SELECTED_STATE_SET -> j
    40:67:void <clinit>() -> <clinit>
    99:171:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> a
    178:183:int getColorForState(android.content.res.ColorStateList,int[]) -> a
    193:194:int doubleAlpha(int) -> a
com.google.android.material.shadow.ShadowDrawableWrapper -> com.google.android.material.shadow.ShadowDrawableWrapper:
    float rawShadowSize -> l
    boolean dirty -> m
    int shadowStartColor -> n
    float shadowSize -> k
    int shadowMiddleColor -> o
    float rawMaxShadowSize -> j
    float cornerRadius -> h
    android.graphics.Path cornerShadowPath -> i
    double COS_45 -> s
    android.graphics.RectF contentBounds -> g
    boolean addPaddingForCorners -> q
    android.graphics.Paint edgeShadowPaint -> f
    android.graphics.Paint cornerShadowPaint -> e
    float rotation -> r
    int shadowEndColor -> p
    44:44:void <clinit>() -> <clinit>
    180:183:float calculateHorizontalPadding(float,float,boolean) -> a
    221:306:void drawShadow(android.graphics.Canvas) -> a
    360:375:void buildComponents(android.graphics.Rect) -> a
    171:174:float calculateVerticalPadding(float,float,boolean) -> b
    309:354:void buildShadowCorners() -> b
    204:211:void draw(android.graphics.Canvas) -> draw
    189:189:int getOpacity() -> getOpacity
    157:166:boolean getPadding(android.graphics.Rect) -> getPadding
    121:122:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    114:117:void setAlpha(int) -> setAlpha
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.a:
    int[] edgeColors -> h
    float[] cornerPositions -> k
    float[] edgePositions -> i
    android.graphics.Paint edgeShadowPaint -> c
    android.graphics.Paint cornerShadowPaint -> b
    int shadowEndColor -> f
    android.graphics.Paint shadowPaint -> a
    int shadowStartColor -> d
    android.graphics.Path scratch -> g
    int shadowMiddleColor -> e
    int[] cornerColors -> j
    57:63:void <clinit>() -> <clinit>
    68:69:void <init>() -> <init>
    71:81:void <init>(int) -> <init>
    84:87:void setShadowColor(int) -> a
    91:112:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> a
    125:173:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> a
    176:176:android.graphics.Paint getShadowPaint() -> a
com.google.android.material.shadow.ShadowViewDelegate -> com.google.android.material.shadow.b:
    boolean isCompatPaddingEnabled() -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setShadowPadding(int,int,int,int) -> a
com.google.android.material.shape.CornerTreatment -> com.google.android.material.j.a:
    float cornerSize -> d
    31:34:void <init>() -> <init>
    36:40:void <init>(float) -> <init>
    57:57:void getCornerPath(float,float,com.google.android.material.shape.ShapePath) -> a
    60:60:float getCornerSize() -> a
    64:65:void setCornerSize(float) -> a
    27:27:java.lang.Object clone() -> clone
    70:72:com.google.android.material.shape.CornerTreatment clone() -> clone
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.j.b:
    33:34:void <init>(float) -> <init>
    38:44:void getCornerPath(float,float,com.google.android.material.shape.ShapePath) -> a
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.j.c:
    27:27:void <init>() -> <init>
    61:62:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> a
    27:27:java.lang.Object clone() -> clone
    67:69:com.google.android.material.shape.EdgeTreatment clone() -> clone
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.j.d:
    android.graphics.Paint clearPaint -> x
    com.google.android.material.shape.ShapeAppearancePathProvider$PathListener pathShadowListener -> s
    android.graphics.PorterDuffColorFilter tintFilter -> u
    com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState drawableState -> d
    android.graphics.PorterDuffColorFilter strokeTintFilter -> v
    android.graphics.Matrix matrix -> h
    android.graphics.Path path -> i
    android.graphics.Paint strokePaint -> q
    android.graphics.Paint fillPaint -> p
    android.graphics.RectF insetRectF -> l
    android.graphics.RectF rectF -> k
    android.graphics.Path pathInsetByStroke -> j
    com.google.android.material.shape.ShapeAppearancePathProvider pathProvider -> t
    com.google.android.material.shape.ShapeAppearanceModel strokeShapeAppearance -> o
    android.graphics.Rect padding -> w
    boolean pathDirty -> g
    com.google.android.material.shadow.ShadowRenderer shadowRenderer -> r
    com.google.android.material.shape.ShapePath$ShadowCompatOperation[] cornerShadowOperation -> e
    android.graphics.Region scratchRegion -> n
    com.google.android.material.shape.ShapePath$ShadowCompatOperation[] edgeShadowOperation -> f
    android.graphics.Region transparentRegion -> m
    103:103:void <clinit>() -> <clinit>
    70:70:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    164:165:void <init>() -> <init>
    169:170:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    177:178:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    180:205:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    70:70:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$000(com.google.android.material.shape.MaterialShapeDrawable) -> a
    70:70:boolean access$302(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> a
    153:160:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> a
    222:223:int modulateAlpha(int,int) -> a
    233:237:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> a
    278:282:void setFillColor(android.content.res.ColorStateList) -> a
    390:392:void setStroke(float,int) -> a
    401:403:void setStroke(float,android.content.res.ColorStateList) -> a
    462:464:void setCornerRadius(float) -> a
    503:510:void setPadding(int,int,int,int) -> a
    570:572:void initializeElevationOverlay(android.content.Context) -> a
    840:843:void setShadowColor(int) -> a
    860:862:void setPaintStyle(android.graphics.Paint$Style) -> a
    962:963:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> a
    972:978:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> a
    1019:1035:void drawCompatShadow(android.graphics.Canvas) -> a
    1060:1061:void getPathForSize(android.graphics.Rect,android.graphics.Path) -> a
    1123:1131:void calculatePath(android.graphics.RectF,android.graphics.Path) -> a
    1162:1162:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> a
    1170:1177:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> a
    1182:1186:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> a
    1210:1231:boolean updateColorsForState(int[]) -> a
    70:70:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> b
    300:304:void setStrokeColor(android.content.res.ColorStateList) -> b
    621:625:void setElevation(float) -> b
    741:745:void setShadowCompatRotation(int) -> b
    799:800:void onShapeAppearanceModelChanged() -> b
    981:982:void drawFillShape(android.graphics.Canvas) -> b
    1064:1070:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> b
    456:458:android.graphics.RectF getBoundsAsRectF() -> c
    523:527:void setShadowCompatibilityMode(int) -> c
    599:604:void setInterpolation(float) -> c
    985:987:void drawStrokeShape(android.graphics.Canvas) -> c
    420:422:void setStrokeWidth(float) -> d
    576:576:int layerElevationOverlayIfNeeded(int) -> d
    612:612:float getElevation() -> d
    991:1009:void prepareCanvasForShadow(android.graphics.Canvas) -> d
    892:950:void draw(android.graphics.Canvas) -> draw
    291:291:android.content.res.ColorStateList getFillColor() -> e
    1096:1097:float adjustCornerSizeForStrokeSize(float) -> e
    1039:1039:int getShadowOffsetX() -> f
    1046:1046:int getShadowOffsetY() -> g
    210:210:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    428:428:int getOpacity() -> getOpacity
    1103:1120:void getOutline(android.graphics.Outline) -> getOutline
    486:490:boolean getPadding(android.graphics.Rect) -> getPadding
    447:452:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    753:753:int getShadowRadius() -> h
    247:247:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> i
    804:806:void invalidateSelf() -> invalidateSelf
    1191:1191:boolean isStateful() -> isStateful
    334:334:android.content.res.ColorStateList getTintList() -> j
    633:633:float getTranslationZ() -> k
    654:654:float getZ() -> l
    1074:1093:void calculateStrokePath() -> m
    216:218:android.graphics.drawable.Drawable mutate() -> mutate
    1242:1246:android.graphics.RectF getBoundsInsetByStroke() -> n
    1235:1238:float getStrokeInsetLength() -> o
    886:888:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1200:1206:boolean onStateChange(int[]) -> onStateChange
    866:866:boolean hasCompatShadow() -> p
    873:873:boolean hasFill() -> q
    879:879:boolean hasStroke() -> r
    813:814:void invalidateSelfIgnoreShape() -> s
    433:437:void setAlpha(int) -> setAlpha
    441:443:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    360:361:void setTint(int) -> setTint
    327:330:void setTintList(android.content.res.ColorStateList) -> setTintList
    318:323:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    772:772:boolean requiresCompatShadow() -> t
    1134:1152:boolean updateTintFilter() -> u
    667:673:void updateZ() -> v
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.j.d$a:
    com.google.android.material.shape.MaterialShapeDrawable this$0 -> a
    190:190:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    198:199:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> a
    193:194:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> b
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.j.d$b:
    float strokeWidth -> l
    float interpolation -> k
    float scale -> j
    android.graphics.ColorFilter colorFilter -> c
    int alpha -> m
    android.graphics.Paint$Style paintStyle -> u
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel -> a
    boolean useTintColorForShadow -> t
    android.content.res.ColorStateList fillColor -> d
    android.content.res.ColorStateList strokeTintList -> f
    android.graphics.PorterDuff$Mode tintMode -> h
    android.graphics.Rect padding -> i
    android.content.res.ColorStateList strokeColor -> e
    android.content.res.ColorStateList tintList -> g
    int shadowCompatOffset -> r
    float translationZ -> o
    int shadowCompatRotation -> s
    com.google.android.material.elevation.ElevationOverlayProvider elevationOverlayProvider -> b
    float elevation -> n
    int shadowCompatMode -> p
    int shadowCompatRadius -> q
    1280:1283:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1285:1309:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1321:1321:int getChangingConfigurations() -> getChangingConfigurations
    1313:1316:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.j.e:
    31:33:com.google.android.material.shape.CornerTreatment createCornerTreatment(int,int) -> a
    42:42:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> a
    46:46:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> b
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.j.f:
    29:30:void <init>(float) -> <init>
    34:37:void getCornerPath(float,float,com.google.android.material.shape.ShapePath) -> a
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.j.g:
    com.google.android.material.shape.EdgeTreatment rightEdge -> f
    com.google.android.material.shape.EdgeTreatment topEdge -> e
    java.util.Set onChangedListeners -> i
    com.google.android.material.shape.CornerTreatment bottomLeftCorner -> d
    com.google.android.material.shape.CornerTreatment bottomRightCorner -> c
    com.google.android.material.shape.CornerTreatment topRightCorner -> b
    com.google.android.material.shape.CornerTreatment topLeftCorner -> a
    com.google.android.material.shape.EdgeTreatment leftEdge -> h
    com.google.android.material.shape.EdgeTreatment bottomEdge -> g
    71:83:void <init>() -> <init>
    85:95:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    99:100:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    107:117:void <init>(android.content.Context,android.util.AttributeSet,int,int,int) -> <init>
    122:124:void <init>(android.content.Context,int,int) -> <init>
    132:176:void initFromShapeAppearanceStyle(android.content.Context,int,int,int) -> a
    217:218:void setCornerRadius(float) -> a
    233:241:void setCornerRadii(float,float,float,float) -> a
    480:485:boolean setBottomLeftCornerInternal(com.google.android.material.shape.CornerTreatment) -> a
    532:535:void setTopEdge(com.google.android.material.shape.EdgeTreatment) -> a
    610:610:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> a
    614:615:void addOnChangedListener(com.google.android.material.shape.ShapeAppearanceModel$OnChangedListener) -> addOnChangedListener
    271:276:boolean setBottomLeftCornerSizeInternal(float) -> b
    441:446:boolean setBottomRightCornerInternal(com.google.android.material.shape.CornerTreatment) -> b
    494:494:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> b
    596:601:boolean setBottomEdgeInternal(com.google.android.material.shape.EdgeTreatment) -> b
    262:267:boolean setBottomRightCornerSizeInternal(float) -> c
    363:368:boolean setTopLeftCornerInternal(com.google.android.material.shape.CornerTreatment) -> c
    455:455:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> c
    509:514:boolean setLeftEdgeInternal(com.google.android.material.shape.EdgeTreatment) -> c
    244:249:boolean setTopLeftCornerSizeInternal(float) -> d
    402:407:boolean setTopRightCornerInternal(com.google.android.material.shape.CornerTreatment) -> d
    523:523:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> d
    567:572:boolean setRightEdgeInternal(com.google.android.material.shape.EdgeTreatment) -> d
    253:258:boolean setTopRightCornerSizeInternal(float) -> e
    538:543:boolean setTopEdgeInternal(com.google.android.material.shape.EdgeTreatment) -> e
    581:581:com.google.android.material.shape.EdgeTreatment getRightEdge() -> e
    552:552:com.google.android.material.shape.EdgeTreatment getTopEdge() -> f
    377:377:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> g
    416:416:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> h
    645:664:boolean isRoundRect() -> i
    623:623:boolean isUsingPillCorner() -> j
    630:635:void onShapeAppearanceModelChanged() -> k
    618:619:void removeOnChangedListener(com.google.android.material.shape.ShapeAppearanceModel$OnChangedListener) -> removeOnChangedListener
com.google.android.material.shape.ShapeAppearanceModel$OnChangedListener -> com.google.android.material.j.g$a:
    void onShapeAppearanceModelChanged() -> b
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.j.h:
    float[] scratch2 -> g
    com.google.android.material.shape.ShapePath shapePath -> e
    float[] scratch -> f
    android.graphics.Matrix[] cornerTransforms -> b
    android.graphics.Matrix[] edgeTransforms -> c
    com.google.android.material.shape.ShapePath[] cornerPaths -> a
    android.graphics.PointF pointF -> d
    56:62:void <init>() -> <init>
    74:75:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> a
    92:114:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> a
    138:150:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> a
    176:182:float getEdgeCenterForIndex(android.graphics.RectF,int) -> a
    192:194:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> a
    221:236:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> a
    239:239:float angleOfEdge(int) -> a
    128:135:void setEdgePathAndTransform(int) -> b
    153:173:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> b
    207:209:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> b
    117:125:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> c
com.google.android.material.shape.ShapeAppearancePathProvider$PathListener -> com.google.android.material.j.h$a:
    void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> a
    void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> b
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.j.h$b:
    android.graphics.RectF bounds -> c
    com.google.android.material.shape.ShapeAppearancePathProvider$PathListener pathListener -> d
    float interpolation -> e
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel -> a
    android.graphics.Path path -> b
    258:264:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.j.i:
    float endShadowAngle -> f
    float currentShadowAngle -> e
    float endY -> d
    float endX -> c
    float startY -> b
    java.util.List shadowCompatOperations -> h
    float startX -> a
    java.util.List operations -> g
    47:49:void <init>() -> <init>
    60:68:void reset(float,float,float,float) -> a
    77:92:void lineTo(float,float) -> a
    126:146:void addArc(float,float,float,float,float,float) -> a
    155:159:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> a
    167:169:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> a
    186:189:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> a
    196:210:void addConnectingShadowIfNecessary(float) -> a
    56:57:void reset(float,float) -> b
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.j.i$a:
    java.util.List val$operations -> b
    android.graphics.Matrix val$transform -> c
    169:169:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    173:176:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> a
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.j.i$b:
    com.google.android.material.shape.ShapePath$PathArcOperation operation -> b
    266:268:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    273:278:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> a
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.j.i$c:
    com.google.android.material.shape.ShapePath$PathLineOperation operation -> b
    float startY -> d
    float startX -> c
    237:241:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    246:254:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> a
    257:257:float getAngle() -> a
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.j.i$d:
    float sweepAngle -> g
    float startAngle -> f
    float bottom -> e
    android.graphics.RectF rectF -> h
    float right -> d
    float top -> c
    float left -> b
    322:322:void <clinit>() -> <clinit>
    331:336:void <init>(float,float,float,float) -> <init>
    340:346:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> a
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.j.i$e:
    float y -> c
    float x -> b
    289:289:void <init>() -> <init>
    289:289:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> a
    289:289:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> a
    295:300:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> a
    289:289:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> b
    289:289:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> b
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.j.i$f:
    android.graphics.Matrix matrix -> a
    282:283:void <init>() -> <init>
    void applyToPath(android.graphics.Matrix,android.graphics.Path) -> a
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.j.i$g:
    android.graphics.Matrix IDENTITY_MATRIX -> a
    218:218:void <clinit>() -> <clinit>
    216:216:void <init>() -> <init>
    void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> a
    222:223:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> a
com.google.android.material.shape.Shapeable -> com.google.android.material.j.j:
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate delegate -> k
    1012:1014:void <init>() -> <init>
    1022:1022:boolean canSwipeDismissView(android.view.View) -> a
    1027:1028:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.a:
    com.google.android.material.snackbar.SnackbarManager$Callback managerCallback -> a
    1038:1042:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1049:1049:boolean canSwipeDismissView(android.view.View) -> a
    1053:1068:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener -> com.google.android.material.snackbar.b:
com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener -> com.google.android.material.snackbar.c:
    void onLayoutChange(android.view.View,int,int,int,int) -> a
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener onAttachStateChangeListener -> e
    android.view.View$OnTouchListener consumeAllTouchListener -> i
    float actionTextColorAlpha -> h
    float backgroundOverlayColorAlpha -> g
    int animationMode -> f
    com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener onLayoutChangeListener -> d
    907:907:void <clinit>() -> <clinit>
    924:925:void <init>(android.content.Context) -> <init>
    928:945:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1004:1004:float getActionTextColorAlpha() -> getActionTextColorAlpha
    992:992:int getAnimationMode() -> getAnimationMode
    1000:1000:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    964:970:void onAttachedToWindow() -> onAttachedToWindow
    974:978:void onDetachedFromWindow() -> onDetachedFromWindow
    956:960:void onLayout(boolean,int,int,int,int) -> onLayout
    996:997:void setAnimationMode(int) -> setAnimationMode
    987:988:void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    950:952:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    982:983:void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$a:
    908:908:void <init>() -> <init>
    913:913:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.snackbar.ContentViewCallback -> com.google.android.material.snackbar.d:
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    437:438:void <init>(android.content.Context) -> <init>
    441:442:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    446:461:void onMeasure(int,int) -> onMeasure
    434:434:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    android.widget.TextView messageView -> d
    int maxWidth -> f
    int maxInlineActionWidth -> g
    android.widget.Button actionView -> e
    43:44:void <init>(android.content.Context) -> <init>
    47:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    117:127:boolean updateViewsWithinLayout(int,int,int) -> a
    131:141:void updateTopBottomPadding(android.view.View,int,int) -> a
    67:67:android.widget.Button getActionView() -> getActionView
    63:63:android.widget.TextView getMessageView() -> getMessageView
    57:60:void onFinishInflate() -> onFinishInflate
    82:113:void onMeasure(int,int) -> onMeasure
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.e:
    com.google.android.material.snackbar.SnackbarManager snackbarManager -> e
    android.os.Handler handler -> b
    com.google.android.material.snackbar.SnackbarManager$SnackbarRecord nextSnackbar -> d
    com.google.android.material.snackbar.SnackbarManager$SnackbarRecord currentSnackbar -> c
    java.lang.Object lock -> a
    47:63:void <init>() -> <init>
    35:38:com.google.android.material.snackbar.SnackbarManager getInstance() -> a
    142:147:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> a
    202:209:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> a
    237:241:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> a
    151:156:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> b
    221:234:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> b
    213:213:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> c
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.e$a:
    com.google.android.material.snackbar.SnackbarManager this$0 -> a
    52:52:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    55:58:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$Callback -> com.google.android.material.snackbar.e$b:
    void dismiss(int) -> a
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.e$c:
    java.lang.ref.WeakReference callback -> a
    int duration -> b
    boolean paused -> c
    182:182:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> a
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    androidx.collection.SimpleArrayMap extendableStates -> f
    88:88:void <clinit>() -> <clinit>
    34:34:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    39:41:void <init>(android.os.Parcelable) -> <init>
    44:58:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    81:81:java.lang.String toString() -> toString
    62:77:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$a:
    89:89:void <init>() -> <init>
    89:89:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:93:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    98:98:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object[] newArray(int) -> newArray
    103:103:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.switchmaterial.SwitchMaterial -> com.google.android.material.switchmaterial.SwitchMaterial:
    android.content.res.ColorStateList materialThemeColorsThumbTintList -> T
    android.content.res.ColorStateList materialThemeColorsTrackTintList -> U
    int DEF_STYLE_RES -> V
    int[][] ENABLED_CHECKED_STATES -> W
    com.google.android.material.elevation.ElevationOverlayProvider elevationOverlayProvider -> S
    44:45:void <clinit>() -> <clinit>
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    120:138:android.content.res.ColorStateList getMaterialThemeColorsThumbTintList() -> getMaterialThemeColorsThumbTintList
    142:159:android.content.res.ColorStateList getMaterialThemeColorsTrackTintList() -> getMaterialThemeColorsTrackTintList
    97:104:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.tabs.TabItem -> com.google.android.material.tabs.TabItem:
    android.graphics.drawable.Drawable icon -> e
    java.lang.CharSequence text -> d
    int customLayout -> f
    48:49:void <init>(android.content.Context) -> <init>
    52:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.tabs.TabLayout -> com.google.android.material.tabs.TabLayout:
    java.util.HashMap selectedListenerMap -> J
    int tabTextAppearance -> l
    int tabPaddingEnd -> j
    android.graphics.RectF tabViewContentBounds -> f
    int tabPaddingStart -> h
    android.database.DataSetObserver pagerAdapterObserver -> N
    int mode -> C
    int tabIndicatorAnimationDuration -> A
    androidx.viewpager.widget.PagerAdapter pagerAdapter -> M
    android.animation.ValueAnimator scrollAnimator -> K
    int contentInsetStart -> y
    java.util.ArrayList selectedListeners -> H
    boolean tabIndicatorFullWidth -> E
    android.graphics.PorterDuff$Mode tabIconTintMode -> q
    float tabTextMultiLineSize -> s
    int requestedTabMaxWidth -> w
    androidx.core.util.Pools$Pool tabViewPool -> R
    int tabMaxWidth -> u
    android.graphics.drawable.Drawable tabSelectedIndicator -> p
    com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator -> g
    android.content.res.ColorStateList tabTextColors -> m
    android.content.res.ColorStateList tabRippleColorStateList -> o
    com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener pageChangeListener -> O
    com.google.android.material.tabs.TabLayout$AdapterChangeListener adapterChangeListener -> P
    int tabPaddingBottom -> k
    int tabPaddingTop -> i
    com.google.android.material.tabs.TabLayout$Tab selectedTab -> e
    java.util.ArrayList tabs -> d
    int tabIndicatorGravity -> B
    boolean setupViewPagerImplicitly -> Q
    com.google.android.material.tabs.TabLayout$OnTabSelectedListener selectedListener -> G
    int tabGravity -> z
    int scrollableTabMinWidth -> x
    androidx.core.util.Pools$Pool tabPool -> S
    int requestedTabMinWidth -> v
    boolean unboundedRipple -> F
    float tabTextSize -> r
    int tabBackgroundResId -> t
    androidx.viewpager.widget.ViewPager viewPager -> L
    android.content.res.ColorStateList tabIconTint -> n
    boolean inlineLabel -> D
    com.google.android.material.tabs.TabLayout$OnTabSelectedListener currentVpSelectedListener -> I
    198:198:void <clinit>() -> <clinit>
    453:454:void <init>(android.content.Context) -> <init>
    457:458:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    461:531:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:174:android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout) -> a
    615:616:void setScrollPosition(int,float,boolean) -> a
    635:637:void setScrollPosition(int,float,boolean,boolean) -> a
    664:665:void addTab(com.google.android.material.tabs.TabLayout$Tab) -> a
    685:686:void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> a
    696:697:void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean) -> a
    708:722:void addTabFromItemView(com.google.android.material.tabs.TabItem) -> a
    807:834:com.google.android.material.tabs.TabLayout$OnTabSelectedListener wrapOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> a
    860:864:com.google.android.material.tabs.TabLayout$Tab createTabFromPool() -> a
    884:884:com.google.android.material.tabs.TabLayout$Tab getTabAt(int) -> a
    1339:1340:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean) -> a
    1344:1398:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean) -> a
    1449:1466:void setPagerAdapter(androidx.viewpager.widget.PagerAdapter,boolean) -> a
    1510:1517:void configureTab(com.google.android.material.tabs.TabLayout$Tab,int) -> a
    1547:1550:void addViewInternal(android.view.View) -> a
    1562:1569:void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> a
    1807:1821:int calculateScrollXForTab(int,float) -> a
    1850:1858:void updateTabViews(boolean) -> a
    3142:3155:android.content.res.ColorStateList createColorStateList(int,int) -> a
    761:764:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> addOnTabSelectedListener
    778:779:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> addOnTabSelectedListener
    1528:1529:void addView(android.view.View) -> addView
    1533:1534:void addView(android.view.View,int) -> addView
    1538:1539:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    1543:1544:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    852:855:com.google.android.material.tabs.TabLayout$Tab newTab() -> b
    869:869:boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab) -> b
    1673:1683:void animateToTab(int) -> b
    1755:1786:void selectTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> b
    1469:1485:void populateFromPagerAdapter() -> c
    1663:1670:void removeTabViewAt(int) -> c
    1743:1744:void selectTab(com.google.android.material.tabs.TabLayout$Tab) -> c
    939:951:void removeAllTabs() -> d
    1520:1524:void addTabView(com.google.android.material.tabs.TabLayout$Tab) -> d
    1494:1506:com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab) -> e
    1829:1847:void applyModeAndGravity() -> e
    1555:1558:android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> f
    1801:1804:void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> f
    1701:1713:void ensureScrollAnimator() -> g
    1789:1792:void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> g
    173:173:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3186:3186:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3160:3168:int getDefaultHeight() -> getDefaultHeight
    893:893:int getSelectedTabPosition() -> getSelectedTabPosition
    878:878:int getTabCount() -> getTabCount
    1005:1005:int getTabGravity() -> getTabGravity
    1213:1213:android.content.res.ColorStateList getTabIconTint() -> getTabIconTint
    1038:1038:int getTabIndicatorGravity() -> getTabIndicatorGravity
    3190:3190:int getTabMaxWidth() -> getTabMaxWidth
    3172:3177:int getTabMinWidth() -> getTabMinWidth
    982:982:int getTabMode() -> getTabMode
    1224:1224:android.content.res.ColorStateList getTabRippleColor() -> getTabRippleColor
    1444:1444:int getTabScrollRange() -> getTabScrollRange
    1271:1271:android.graphics.drawable.Drawable getTabSelectedIndicator() -> getTabSelectedIndicator
    1175:1175:android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    1488:1491:void updateAllTabs() -> h
    1795:1798:void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> h
    1418:1430:void onAttachedToWindow() -> onAttachedToWindow
    1434:1441:void onDetachedFromWindow() -> onDetachedFromWindow
    1583:1591:void onDraw(android.graphics.Canvas) -> onDraw
    1597:1660:void onMeasure(int,int) -> onMeasure
    788:789:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> removeOnTabSelectedListener
    800:801:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> removeOnTabSelectedListener
    1574:1578:void setElevation(float) -> setElevation
    1081:1091:void setInlineLabel(boolean) -> setInlineLabel
    1102:1103:void setInlineLabelResource(int) -> setInlineLabelResource
    732:741:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> setOnTabSelectedListener
    749:750:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> setOnTabSelectedListener
    1716:1718:void setScrollAnimatorListener(android.animation.Animator$AnimatorListener) -> setScrollAnimatorListener
    1285:1289:void setSelectedTabIndicator(android.graphics.drawable.Drawable) -> setSelectedTabIndicator
    1302:1308:void setSelectedTabIndicator(int) -> setSelectedTabIndicator
    587:588:void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    1023:1027:void setSelectedTabIndicatorGravity(int) -> setSelectedTabIndicatorGravity
    600:601:void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    1726:1734:void setSelectedTabView(int) -> setSelectedTabView
    992:996:void setTabGravity(int) -> setTabGravity
    1194:1198:void setTabIconTint(android.content.res.ColorStateList) -> setTabIconTint
    1207:1208:void setTabIconTintResource(int) -> setTabIconTintResource
    1057:1059:void setTabIndicatorFullWidth(boolean) -> setTabIndicatorFullWidth
    969:973:void setTabMode(int) -> setTabMode
    1238:1247:void setTabRippleColor(android.content.res.ColorStateList) -> setTabRippleColor
    1259:1260:void setTabRippleColorResource(int) -> setTabRippleColorResource
    1166:1170:void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    1407:1408:void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter) -> setTabsFromPagerAdapter
    1126:1135:void setUnboundedRipple(boolean) -> setUnboundedRipple
    1146:1147:void setUnboundedRippleResource(int) -> setUnboundedRippleResource
    1319:1320:void setupWithViewPager(androidx.viewpager.widget.ViewPager) -> setupWithViewPager
    1413:1413:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
com.google.android.material.tabs.TabLayout$1 -> com.google.android.material.tabs.TabLayout$a:
    com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener val$baseListener -> a
    816:816:void <init>(com.google.android.material.tabs.TabLayout,com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> <init>
    824:825:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> a
    819:820:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> b
    829:830:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> c
com.google.android.material.tabs.TabLayout$2 -> com.google.android.material.tabs.TabLayout$b:
    com.google.android.material.tabs.TabLayout this$0 -> a
    1706:1706:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    1709:1710:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$AdapterChangeListener -> com.google.android.material.tabs.TabLayout$c:
    com.google.android.material.tabs.TabLayout this$0 -> b
    boolean autoRefresh -> a
    3300:3300:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3307:3310:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> a
    3313:3314:void setAutoRefresh(boolean) -> a
com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener -> com.google.android.material.tabs.TabLayout$d:
    void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> a
    void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> b
    void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> c
com.google.android.material.tabs.TabLayout$OnTabSelectedListener -> com.google.android.material.tabs.TabLayout$e:
    void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> a
    void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> b
    void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> c
com.google.android.material.tabs.TabLayout$PagerAdapterObserver -> com.google.android.material.tabs.TabLayout$f:
    com.google.android.material.tabs.TabLayout this$0 -> a
    3284:3284:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3288:3289:void onChanged() -> onChanged
    3293:3294:void onInvalidated() -> onInvalidated
com.google.android.material.tabs.TabLayout$SlidingTabIndicator -> com.google.android.material.tabs.TabLayout$g:
    android.animation.ValueAnimator indicatorAnimator -> l
    float selectionOffset -> h
    int indicatorLeft -> j
    android.graphics.Paint selectedIndicatorPaint -> e
    int indicatorRight -> k
    int layoutDirection -> i
    com.google.android.material.tabs.TabLayout this$0 -> m
    android.graphics.drawable.GradientDrawable defaultSelectionIndicator -> f
    int selectedPosition -> g
    int selectedIndicatorHeight -> d
    2818:2823:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2826:2830:void setSelectedIndicatorColor(int) -> a
    2840:2846:boolean childrenNeedLayout() -> a
    2850:2857:void setIndicatorPositionFromTabPosition(int,float) -> a
    3003:3054:void animateIndicatorToPosition(int,int) -> a
    3069:3081:void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,android.graphics.RectF) -> a
    2833:2837:void setSelectedIndicatorHeight(int) -> b
    2956:2991:void updateIndicatorPosition() -> b
    2994:3000:void setIndicatorPosition(int,int) -> b
    3085:3138:void draw(android.graphics.Canvas) -> draw
    2939:2953:void onLayout(boolean,int,int,int,int) -> onLayout
    2879:2935:void onMeasure(int,int) -> onMeasure
    2865:2875:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1 -> com.google.android.material.tabs.TabLayout$g$a:
    int val$finalTargetRight -> d
    int val$finalTargetLeft -> b
    int val$startRight -> c
    com.google.android.material.tabs.TabLayout$SlidingTabIndicator this$1 -> e
    int val$startLeft -> a
    3035:3035:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int,int,int,int) -> <init>
    3038:3042:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2 -> com.google.android.material.tabs.TabLayout$g$b:
    com.google.android.material.tabs.TabLayout$SlidingTabIndicator this$1 -> b
    int val$position -> a
    3045:3045:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int) -> <init>
    3048:3050:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.tabs.TabLayout$Tab -> com.google.android.material.tabs.TabLayout$h:
    com.google.android.material.tabs.TabLayout parent -> g
    java.lang.CharSequence text -> b
    com.google.android.material.tabs.TabLayout$TabView view -> h
    java.lang.CharSequence contentDesc -> c
    int labelVisibilityMode -> f
    int position -> d
    android.view.View customView -> e
    android.graphics.drawable.Drawable icon -> a
    1888:1890:void <init>() -> <init>
    1862:1862:java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab) -> a
    1918:1918:android.view.View getCustomView() -> a
    1934:1936:com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View) -> a
    1953:1954:com.google.android.material.tabs.TabLayout$Tab setCustomView(int) -> a
    1999:2010:com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable) -> a
    2174:2176:com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence) -> a
    1862:1862:int access$1000(com.google.android.material.tabs.TabLayout$Tab) -> b
    1964:1964:android.graphics.drawable.Drawable getIcon() -> b
    1978:1979:void setPosition(int) -> b
    2036:2044:com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence) -> b
    1862:1862:java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab) -> c
    1974:1974:int getPosition() -> c
    2127:2127:int getTabLabelVisibility() -> d
    1988:1988:java.lang.CharSequence getText() -> e
    2140:2141:boolean isSelected() -> f
    2200:2208:void reset() -> g
    2132:2133:void select() -> h
    2194:2197:void updateView() -> i
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener -> com.google.android.material.tabs.TabLayout$i:
    java.lang.ref.WeakReference tabLayoutRef -> a
    int previousScrollState -> b
    int scrollState -> c
    3207:3209:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3213:3215:void onPageScrollStateChanged(int) -> a
    3220:3233:void onPageScrolled(int,float,int) -> a
    3252:3253:void reset() -> a
    3237:3249:void onPageSelected(int) -> b
com.google.android.material.tabs.TabLayout$TabView -> com.google.android.material.tabs.TabLayout$j:
    android.view.View customView -> i
    android.widget.ImageView iconView -> f
    int defaultMaxLines -> m
    android.widget.TextView textView -> e
    com.google.android.material.badge.BadgeDrawable badgeDrawable -> h
    android.widget.ImageView customIconView -> k
    android.graphics.drawable.Drawable baseBackgroundDrawable -> l
    com.google.android.material.tabs.TabLayout this$0 -> n
    android.widget.TextView customTextView -> j
    com.google.android.material.tabs.TabLayout$Tab tab -> d
    android.view.View badgeAnchorView -> g
    2225:2236:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2211:2211:void access$000(com.google.android.material.tabs.TabLayout$TabView,android.content.Context) -> a
    2211:2211:int access$1200(com.google.android.material.tabs.TabLayout$TabView) -> a
    2211:2211:void access$300(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas) -> a
    2211:2211:void access$900(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> a
    2239:2281:void updateBackgroundDrawable(android.content.Context) -> a
    2294:2298:void drawBackground(android.graphics.Canvas) -> a
    2440:2444:void setTab(com.google.android.material.tabs.TabLayout$Tab) -> a
    2447:2449:void reset() -> a
    2596:2617:void addOnLayoutChangeListener(android.view.View) -> a
    2689:2750:void updateTextAndIcon(android.widget.TextView,android.widget.ImageView) -> a
    2799:2799:float approximateLineWidth(android.text.Layout,int,float) -> a
    2211:2211:boolean access$400(com.google.android.material.tabs.TabLayout$TabView) -> b
    2452:2529:void update() -> b
    2765:2768:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> b
    2211:2211:com.google.android.material.badge.BadgeDrawable access$500(com.google.android.material.tabs.TabLayout$TabView) -> c
    2651:2662:void tryAttachBadgeToAnchor(android.view.View) -> c
    2679:2685:void updateOrientation() -> c
    2558:2563:android.widget.FrameLayout createPreApi18BadgeAnchorRoot() -> d
    2754:2757:void tryUpdateBadgeDrawableBounds(android.view.View) -> d
    2302:2313:void drawableStateChanged() -> drawableStateChanged
    2778:2790:int getContentWidth() -> e
    2760:2760:boolean hasBadgeDrawable() -> f
    2532:2542:void inflateAndAddDefaultIconView() -> g
    2545:2555:void inflateAndAddDefaultTextView() -> h
    2665:2676:void tryRemoveBadgeFromAnchor() -> i
    2620:2648:void tryUpdateBadgeAnchor() -> j
    2356:2359:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2364:2372:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    2376:2437:void onMeasure(int,int) -> onMeasure
    2317:2326:boolean performClick() -> performClick
    2332:2352:void setSelected(boolean) -> setSelected
com.google.android.material.tabs.TabLayout$TabView$1 -> com.google.android.material.tabs.TabLayout$j$a:
    android.view.View val$view -> a
    com.google.android.material.tabs.TabLayout$TabView this$1 -> b
    2600:2600:void <init>(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> <init>
    2612:2615:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener -> com.google.android.material.tabs.TabLayout$k:
    androidx.viewpager.widget.ViewPager viewPager -> a
    3263:3265:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3275:3275:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> a
    3269:3270:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> b
    3280:3280:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> c
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.a:
    com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener clearTextOnEditTextAttachedListener -> e
    android.text.TextWatcher clearTextEndIconTextWatcher -> d
    61:62:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    33:33:android.text.TextWatcher access$000(com.google.android.material.textfield.ClearTextEndIconDelegate) -> a
    66:78:void initialize() -> a
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.a$a:
    com.google.android.material.textfield.ClearTextEndIconDelegate this$0 -> d
    36:36:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    45:46:void afterTextChanged(android.text.Editable) -> afterTextChanged
    38:38:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    41:41:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.a$b:
    com.google.android.material.textfield.ClearTextEndIconDelegate this$0 -> a
    50:50:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    53:57:void onEditTextAttached(android.widget.EditText) -> a
com.google.android.material.textfield.ClearTextEndIconDelegate$3 -> com.google.android.material.textfield.a$c:
    com.google.android.material.textfield.ClearTextEndIconDelegate this$0 -> d
    71:71:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    74:75:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.b:
    25:26:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    30:31:void initialize() -> a
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.c:
    android.graphics.Paint cutoutPaint -> y
    android.graphics.RectF cutoutBounds -> z
    int savedLayer -> A
    44:45:void <init>() -> <init>
    48:52:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    67:74:void setCutout(float,float,float,float) -> a
    77:78:void setCutout(android.graphics.RectF) -> a
    121:124:void postDraw(android.graphics.Canvas) -> a
    127:127:boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback) -> a
    97:109:void preDraw(android.graphics.Canvas) -> b
    112:118:void saveCanvasLayer(android.graphics.Canvas) -> c
    87:94:void draw(android.graphics.Canvas) -> draw
    61:61:boolean hasCutout() -> m
    82:83:void removeCutout() -> n
    55:58:void setPaintStyles() -> o
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.d:
    com.google.android.material.shape.MaterialShapeDrawable outlinedPopupBackground -> g
    com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener dropdownMenuOnEditTextAttachedListener -> i
    boolean IS_LOLLIPOP -> j
    long dropdownPopupActivatedAt -> e
    android.text.TextWatcher exposedDropdownEndIconTextWatcher -> h
    android.graphics.drawable.StateListDrawable filledPopupBackground -> f
    boolean dropdownPopupDirty -> d
    50:50:void <clinit>() -> <clinit>
    97:98:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    48:48:android.widget.AutoCompleteTextView access$000(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.EditText) -> a
    48:48:boolean access$102(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> a
    48:48:void access$200(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> a
    48:48:android.text.TextWatcher access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> a
    48:48:long access$802(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long) -> a
    102:152:void initialize() -> a
    161:161:boolean isBoxBackgroundModeSupported(int) -> a
    197:214:void addRippleEffect(android.widget.AutoCompleteTextView) -> a
    252:274:void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> a
    320:327:com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int) -> a
    336:337:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> a
    48:48:void access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> b
    48:48:boolean access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> b
    156:156:boolean shouldTintIconOnError() -> b
    185:193:void setPopupBackground(android.widget.AutoCompleteTextView) -> b
    222:245:void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> b
    48:48:void access$400(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> c
    278:316:void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView) -> c
    331:332:boolean isDropdownPopupActive() -> c
    48:48:void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> d
    165:182:void showHideDropdown(android.widget.AutoCompleteTextView) -> d
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.d$a:
    com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0 -> d
    57:57:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    66:77:void afterTextChanged(android.text.Editable) -> afterTextChanged
    59:59:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    62:62:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1 -> com.google.android.material.textfield.d$a$a:
    com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 this$1 -> e
    android.widget.AutoCompleteTextView val$editText -> d
    69:69:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView) -> <init>
    72:75:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2 -> com.google.android.material.textfield.d$b:
    com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0 -> a
    80:80:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    83:93:void onEditTextAttached(android.widget.EditText) -> a
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3 -> com.google.android.material.textfield.d$c:
    com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0 -> d
    144:144:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    147:149:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4 -> com.google.android.material.textfield.d$d:
    android.widget.AutoCompleteTextView val$editText -> d
    com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0 -> e
    279:279:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> <init>
    282:289:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5 -> com.google.android.material.textfield.d$e:
    com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0 -> d
    294:294:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    297:302:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6 -> com.google.android.material.textfield.d$f:
    com.google.android.material.textfield.DropdownMenuEndIconDelegate this$0 -> a
    307:307:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    310:313:void onDismiss() -> onDismiss
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.e:
    android.content.Context context -> b
    com.google.android.material.textfield.TextInputLayout textInputLayout -> a
    com.google.android.material.internal.CheckableImageButton endIconView -> c
    35:39:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    void initialize() -> a
    60:60:boolean isBoxBackgroundModeSupported(int) -> a
    51:51:boolean shouldTintIconOnError() -> b
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.f:
    android.content.Context context -> a
    int errorTextAppearance -> n
    android.content.res.ColorStateList errorViewTextColor -> o
    android.widget.FrameLayout captionArea -> e
    float captionTranslationYPx -> h
    int captionToShow -> j
    android.content.res.ColorStateList helperTextViewTextColor -> t
    com.google.android.material.textfield.TextInputLayout textInputView -> b
    android.widget.TextView helperTextView -> r
    int captionDisplayed -> i
    boolean errorEnabled -> l
    int captionViewsAdded -> f
    int indicatorsAdded -> d
    boolean helperTextEnabled -> q
    android.widget.LinearLayout indicatorArea -> c
    java.lang.CharSequence errorText -> k
    android.animation.Animator captionAnimator -> g
    java.lang.CharSequence helperText -> p
    int helperTextTextAppearance -> s
    android.graphics.Typeface typeface -> u
    android.widget.TextView errorView -> m
    120:125:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    57:57:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> a
    57:57:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> a
    57:57:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> a
    152:162:void showError(java.lang.CharSequence) -> a
    191:191:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> a
    203:261:void updateCaptionViewsVisibility(int,int,boolean) -> a
    265:288:void setCaptionViewVisibilities(int,int) -> a
    298:299:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> a
    312:316:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> a
    320:324:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> a
    334:334:boolean isCaptionView(int) -> a
    350:359:void adjustIndicatorPadding() -> a
    366:395:void addIndicator(android.widget.TextView,int) -> a
    414:417:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> a
    421:447:void setErrorEnabled(boolean) -> a
    526:531:void setTypefaces(android.graphics.Typeface) -> a
    534:537:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> a
    550:554:void setErrorViewTextColor(android.content.res.ColorStateList) -> a
    128:138:void showHelper(java.lang.CharSequence) -> b
    328:331:void cancelCaptionAnimator() -> b
    398:411:void removeIndicator(android.widget.TextView,int) -> b
    459:486:void setHelperTextEnabled(boolean) -> b
    557:561:void setErrorTextAppearance(int) -> b
    573:577:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> b
    493:493:boolean errorShouldBeShown() -> c
    580:584:void setHelperTextAppearance(int) -> c
    339:341:android.widget.TextView getCaptionViewFromDisplayState(int) -> d
    517:517:java.lang.CharSequence getErrorText() -> d
    497:497:boolean isCaptionStateError(int) -> e
    541:541:int getErrorViewCurrentTextColor() -> e
    546:546:android.content.res.ColorStateList getErrorViewTextColors() -> f
    521:521:java.lang.CharSequence getHelperText() -> g
    564:564:int getHelperTextViewCurrentTextColor() -> h
    165:179:void hideError() -> i
    141:149:void hideHelperText() -> j
    450:450:boolean isErrorEnabled() -> k
    454:454:boolean isHelperTextEnabled() -> l
    362:362:boolean canAdjustIndicatorPadding() -> m
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.f$a:
    android.widget.TextView val$captionViewToHide -> b
    android.widget.TextView val$captionViewToShow -> d
    int val$captionToHide -> c
    com.google.android.material.textfield.IndicatorViewController this$0 -> e
    int val$captionToShow -> a
    229:229:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    232:245:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    249:252:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.g:
    24:25:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    29:32:void initialize() -> a
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.h:
    com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener onEndIconChangedListener -> f
    com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener onEditTextAttachedListener -> e
    android.text.TextWatcher textWatcher -> d
    75:76:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    32:32:boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> a
    80:105:void initialize() -> a
    32:32:android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> b
    108:109:boolean hasPasswordTransformation() -> c
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1 -> com.google.android.material.textfield.h$a:
    com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0 -> d
    35:35:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    47:47:void afterTextChanged(android.text.Editable) -> afterTextChanged
    40:41:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    44:44:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2 -> com.google.android.material.textfield.h$b:
    com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0 -> a
    51:51:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    54:59:void onEditTextAttached(android.widget.EditText) -> a
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3 -> com.google.android.material.textfield.h$c:
    com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0 -> a
    62:62:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    65:71:void onEndIconChanged(int) -> a
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4 -> com.google.android.material.textfield.h$d:
    com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0 -> d
    85:85:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    88:101:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    41:42:void <init>(android.content.Context) -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    72:76:java.lang.CharSequence getHint() -> getHint
    104:105:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    92:99:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    54:66:void onAttachedToWindow() -> onAttachedToWindow
    81:87:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    android.widget.EditText editText -> e
    int counterOverflowTextAppearance -> l
    android.graphics.PorterDuff$Mode endIconTintMode -> V
    com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel -> u
    android.graphics.Typeface typeface -> H
    android.graphics.Rect tmpBoundsRect -> F
    int boxStrokeColor -> C
    java.lang.CharSequence hint -> q
    int boxCollapsedPaddingTopPx -> y
    android.content.res.ColorStateList startIconTintList -> J
    boolean counterEnabled -> h
    int endIconMode -> P
    com.google.android.material.internal.CheckableImageButton endIconView -> R
    android.content.res.ColorStateList defaultHintTextColor -> c0
    boolean hasStartIconTintMode -> M
    int counterTextAppearance -> m
    android.content.res.ColorStateList endIconTintList -> T
    int defaultFilledBackgroundColor -> h0
    boolean counterOverflowed -> j
    int hoveredStrokeColor -> f0
    int counterMaxLength -> i
    boolean hasEndIconTintList -> U
    int boxBackgroundColor -> D
    int hoveredFilledBackgroundColor -> j0
    android.widget.FrameLayout inputFrame -> d
    boolean isProvidingHint -> r
    int DEF_STYLE_RES -> r0
    com.google.android.material.shape.MaterialShapeDrawable boxUnderline -> t
    int boxStrokeWidthPx -> z
    android.graphics.drawable.Drawable originalEditTextEndDrawable -> b0
    boolean inDrawableStateChanged -> p0
    boolean hintExpanded -> l0
    com.google.android.material.internal.CollapsingTextHelper collapsingTextHelper -> m0
    boolean hintAnimationEnabled -> n0
    android.widget.TextView counterView -> k
    android.graphics.RectF tmpRectF -> G
    java.lang.CharSequence originalHint -> f
    int boxStrokeWidthDefaultPx -> A
    android.graphics.PorterDuff$Mode startIconTintMode -> L
    int boxLabelCutoutPaddingPx -> w
    com.google.android.material.textfield.IndicatorViewController indicatorViewController -> g
    com.google.android.material.shape.MaterialShapeDrawable boxBackground -> s
    android.content.res.ColorStateList focusedTextColor -> d0
    android.content.res.ColorStateList counterOverflowTextColor -> o
    com.google.android.material.shape.ShapeAppearanceModel cornerAdjustedShapeAppearanceModel -> v
    boolean hintEnabled -> p
    int focusedStrokeColor -> g0
    boolean hasStartIconTintList -> K
    android.util.SparseArray endIconDelegates -> Q
    com.google.android.material.internal.CheckableImageButton startIconView -> I
    int defaultStrokeColor -> e0
    java.util.LinkedHashSet editTextAttachedListeners -> O
    int disabledColor -> k0
    android.graphics.Rect tmpRect -> E
    boolean hasEndIconTintMode -> W
    int disabledFilledBackgroundColor -> i0
    int boxStrokeWidthFocusedPx -> B
    java.util.LinkedHashSet endIconChangedListeners -> S
    android.graphics.drawable.Drawable endIconDummyDrawable -> a0
    boolean restoringSavedState -> q0
    int boxBackgroundMode -> x
    android.graphics.drawable.Drawable startIconDummyDrawable -> N
    android.animation.ValueAnimator animator -> o0
    android.content.res.ColorStateList counterTextColor -> n
    171:171:void <clinit>() -> <clinit>
    380:381:void <init>(android.content.Context) -> <init>
    384:385:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    388:661:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    771:771:boolean shouldUseEditTextBackgroundForBoxBackground() -> A
    1606:1609:void updateCounter() -> B
    1704:1714:void updateCounterTextAppearanceAndColor() -> C
    2716:2767:void updateIconDummyDrawables() -> D
    1105:1114:void updateInputLayoutMargins() -> E
    169:169:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> a
    1126:1127:void updateLabelState(boolean) -> a
    1130:1164:void updateLabelState(boolean,boolean) -> a
    1612:1646:void updateCounter(int) -> a
    1654:1661:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> a
    1673:1680:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> a
    1717:1739:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> a
    1758:1759:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> a
    1801:1804:int calculateExpandedLabelTop(android.graphics.Rect,float) -> a
    1808:1814:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> a
    2282:2282:boolean isEndIconVisible() -> a
    2775:2790:void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode) -> a
    2793:2796:void setIconOnClickListener(android.view.View,android.view.View$OnClickListener) -> a
    2812:2815:int getIconViewPaddingBottom(android.view.View) -> a
    2862:2868:void drawBoxUnderline(android.graphics.Canvas) -> a
    2909:2913:void applyCutoutPadding(android.graphics.RectF) -> a
    3019:3036:void animateToExpansionFraction(float) -> a
    2444:2448:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    2416:2417:void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> addOnEndIconChangedListener
    665:682:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1431:1431:boolean isHelperTextEnabled() -> b
    1784:1785:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> b
    2688:2691:void dispatchOnEndIconChanged(int) -> b
    2805:2808:int getIconViewPaddingTop(android.view.View) -> b
    2856:2859:void drawHint(android.graphics.Canvas) -> b
    2871:2883:void collapseHint(boolean) -> b
    1266:1266:boolean isProvidingHint() -> c
    2799:2802:void updateIconViewOnEditTextAttached(android.view.View) -> c
    2842:2846:void updateBoxUnderlineBounds(android.graphics.Rect) -> c
    3003:3015:void expandHint(boolean) -> c
    2139:2139:boolean isStartIconVisible() -> d
    2694:2704:void tintEndIconOnError(boolean) -> d
    1006:1008:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    1984:1987:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    2850:2853:void draw(android.graphics.Canvas) -> draw
    2922:2950:void drawableStateChanged() -> drawableStateChanged
    1874:1875:void updateEditTextBackground() -> e
    2953:2954:void updateTextInputBoxState() -> f
    943:969:void adjustCornerSizeForStrokeWidth() -> g
    1118:1121:int getBaseline() -> getBaseline
    686:687:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    840:840:int getBoxBackgroundColor() -> getBoxBackgroundColor
    725:725:int getBoxBackgroundMode() -> getBoxBackgroundMode
    921:921:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    931:931:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    911:911:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    901:901:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    799:799:int getBoxStrokeColor() -> getBoxStrokeColor
    1688:1688:int getCounterMaxLength() -> getCounterMaxLength
    1697:1700:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    1573:1573:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    1530:1530:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1329:1329:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    1169:1169:android.widget.EditText getEditText() -> getEditText
    2368:2368:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    2660:2661:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    2328:2328:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    2251:2251:int getEndIconMode() -> getEndIconMode
    2656:2656:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    1997:1997:java.lang.CharSequence getError() -> getError
    1360:1360:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    3060:3060:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    2009:2009:java.lang.CharSequence getHelperText() -> getHelperText
    1437:1437:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1204:1204:java.lang.CharSequence getHint() -> getHint
    3055:3055:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    3050:3050:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1310:1310:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2551:2551:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    2537:2537:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2179:2179:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    2107:2107:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    1001:1001:android.graphics.Typeface getTypeface() -> getTypeface
    1833:1849:void applyBoxAttributes() -> h
    1853:1861:void applyBoxUnderlineAttributes() -> i
    2707:2709:void applyEndIconTint() -> j
    2675:2681:void applyStartIconTint() -> k
    738:759:void assignBoxBackgroundByMode() -> l
    1824:1829:int calculateBoxBackgroundColor() -> m
    1742:1751:int calculateLabelMarginTop() -> n
    1864:1864:boolean canDrawOutlineStroke() -> o
    2820:2839:void onLayout(boolean,int,int,int,int) -> onLayout
    2036:2038:void onMeasure(int,int) -> onMeasure
    1967:1980:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1956:1962:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1868:1868:boolean canDrawStroke() -> p
    2903:2906:void closeCutout() -> q
    2886:2886:boolean cutoutEnabled() -> r
    2457:2458:void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> removeOnEditTextAttachedListener
    2426:2427:void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> removeOnEndIconChangedListener
    2665:2668:void dispatchOnEditTextAttached() -> s
    826:831:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    812:813:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    708:715:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    786:790:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1473:1490:void setCounterEnabled(boolean) -> setCounterEnabled
    1593:1603:void setCounterMaxLength(int) -> setCounterMaxLength
    1541:1545:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    1557:1561:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    1500:1504:void setCounterTextAppearance(int) -> setCounterTextAppearance
    1515:1519:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1315:1321:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    1028:1029:void setEditText(android.widget.EditText) -> setEditText
    1668:1670:void setEnabled(boolean) -> setEnabled
    2291:2292:void setEndIconActivated(boolean) -> setEndIconActivated
    2341:2342:void setEndIconContentDescription(int) -> setEndIconContentDescription
    2355:2358:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    2304:2305:void setEndIconDrawable(int) -> setEndIconDrawable
    2317:2318:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    2226:2232:void setEndIconMode(int) -> setEndIconMode
    2261:2262:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    2383:2388:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    2399:2404:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    2270:2274:void setEndIconVisible(boolean) -> setEndIconVisible
    1451:1465:void setError(java.lang.CharSequence) -> setError
    1340:1341:void setErrorEnabled(boolean) -> setErrorEnabled
    1349:1350:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1354:1355:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    1412:1422:void setHelperText(java.lang.CharSequence) -> setHelperText
    1374:1375:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    1395:1396:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1369:1370:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1179:1183:void setHint(java.lang.CharSequence) -> setHint
    2031:2032:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1219:1248:void setHintEnabled(boolean) -> setHintEnabled
    1186:1194:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1275:1283:void setHintTextAppearance(int) -> setHintTextAppearance
    1290:1301:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    2508:2510:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    2524:2525:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    2477:2479:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    2493:2494:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    2577:2584:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    2600:2603:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    2616:2619:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2152:2153:void setStartIconContentDescription(int) -> setStartIconContentDescription
    2166:2169:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    2074:2075:void setStartIconDrawable(int) -> setStartIconDrawable
    2087:2096:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    2118:2119:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    2194:2199:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    2210:2215:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    2127:2131:void setStartIconVisible(boolean) -> setStartIconVisible
    2650:2653:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    984:994:void setTypeface(android.graphics.Typeface) -> setTypeface
    972:975:void ensureCornerAdjustedShapeAppearanceModel() -> t
    2684:2684:boolean hasEndIcon() -> u
    2671:2671:boolean hasStartIcon() -> v
    729:735:void onApplyBoxBackgroundMode() -> w
    2890:2900:void openCutout() -> x
    763:766:void setEditTextBoxBackground() -> y
    2041:2062:void setEditTextHeightAndDummyDrawables() -> z
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$a:
    com.google.android.material.textfield.TextInputLayout this$0 -> d
    1054:1054:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1057:1061:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1064:1064:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1067:1067:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$b:
    com.google.android.material.textfield.TextInputLayout this$0 -> d
    2053:2053:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2056:2057:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$c:
    com.google.android.material.textfield.TextInputLayout this$0 -> a
    3027:3027:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3030:3031:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$d:
    com.google.android.material.textfield.TextInputLayout layout -> d
    3072:3074:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3078:3104:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    3108:3115:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener -> com.google.android.material.textfield.TextInputLayout$e:
    void onEditTextAttached(android.widget.EditText) -> a
com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener -> com.google.android.material.textfield.TextInputLayout$f:
    void onEndIconChanged(int) -> a
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    java.lang.CharSequence error -> f
    boolean isEndIconChecked -> g
    1935:1935:void <clinit>() -> <clinit>
    1910:1911:void <init>(android.os.Parcelable) -> <init>
    1914:1917:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1928:1928:java.lang.String toString() -> toString
    1921:1924:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$a:
    1936:1936:void <init>() -> <init>
    1936:1936:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1936:1936:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1939:1939:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1944:1944:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1936:1936:java.lang.Object[] newArray(int) -> newArray
    1949:1949:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    43:43:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    48:52:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    89:89:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    95:95:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    59:83:boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet) -> shouldInflateAppCompatButton
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    int currentState -> a
    61:61:void <init>() -> <init>
    64:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> a
    38:38:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> a
    88:110:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> a
    139:144:boolean didStateChange(boolean) -> a
    116:123:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    128:135:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> e
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$a:
    com.google.android.material.expandable.ExpandableWidget val$dep -> f
    int val$expectedState -> e
    com.google.android.material.transformation.ExpandableBehavior this$0 -> g
    android.view.View val$child -> d
    96:96:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    99:104:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    android.animation.AnimatorSet currentAnimation -> b
    42:42:void <init>() -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> a
    70:92:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> a
    android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> b
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$a:
    com.google.android.material.transformation.ExpandableTransformationBehavior this$0 -> a
    78:78:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    81:82:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    int[] tmpArray -> f
    android.graphics.RectF tmpRectF1 -> d
    float dependencyOriginalTranslationY -> h
    float dependencyOriginalTranslationX -> g
    android.graphics.RectF tmpRectF2 -> e
    android.graphics.Rect tmpRect -> c
    85:85:void <init>() -> <init>
    88:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> a
    94:95:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    110:115:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> a
    222:248:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> a
    259:297:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> a
    369:444:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> a
    494:524:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> a
    530:544:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> a
    612:614:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> a
    617:626:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> a
    652:670:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> a
    674:687:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> a
    694:702:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> a
    734:745:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> a
    756:767:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> a
    121:185:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> b
    454:484:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> b
    598:609:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> b
    630:639:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> b
    719:723:int getBackgroundTint(android.view.View) -> b
    199:214:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> c
    548:569:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> c
    711:714:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> c
    307:308:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> d
    573:594:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> d
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$a:
    android.view.View val$dependency -> c
    android.view.View val$child -> b
    boolean val$expanded -> a
    161:161:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    174:180:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    164:170:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$b:
    android.view.View val$child -> a
    332:332:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    337:338:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$c:
    com.google.android.material.circularreveal.CircularRevealWidget val$circularRevealChild -> a
    android.graphics.drawable.Drawable val$icon -> b
    345:345:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    354:355:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    349:350:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$d:
    com.google.android.material.circularreveal.CircularRevealWidget val$circularRevealChild -> a
    397:397:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    402:405:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$e:
    com.google.android.material.animation.MotionSpec timings -> a
    com.google.android.material.animation.Positioning positioning -> b
    770:770:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    com.google.android.material.animation.MotionTiming expandTiming -> c
    com.google.android.material.animation.MotionTiming collapseTiming -> d
    51:51:void <init>() -> <init>
    54:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:59:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    104:118:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> a
    65:65:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    72:95:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> b
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$a:
    android.view.View val$child -> b
    boolean val$expanded -> a
    80:80:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    90:93:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    83:86:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    java.util.Map importantForAccessibilityMap -> i
    47:47:void <init>() -> <init>
    50:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:65:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> a
    72:73:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> a
    77:120:void updateImportantForAccessibility(android.view.View,boolean) -> a
com.google.android.material.transformation.TransformationChildCard -> com.google.android.material.transformation.TransformationChildCard:
    35:36:void <init>(android.content.Context) -> <init>
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.transformation.TransformationChildLayout -> com.google.android.material.transformation.TransformationChildLayout:
    36:37:void <init>(android.content.Context) -> <init>
    40:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
de.hdodenhof.circleimageview.CircleImageView -> de.hdodenhof.circleimageview.CircleImageView:
    int mBitmapWidth -> o
    int mCircleBackgroundColor -> l
    android.graphics.Bitmap mBitmap -> m
    android.graphics.Bitmap$Config BITMAP_CONFIG -> y
    android.graphics.RectF mDrawableRect -> d
    int mBorderColor -> j
    int mBorderWidth -> k
    android.graphics.Matrix mShaderMatrix -> f
    android.graphics.RectF mBorderRect -> e
    boolean mSetupPending -> u
    boolean mBorderOverlay -> v
    boolean mDisableCircularTransformation -> w
    android.widget.ImageView$ScaleType SCALE_TYPE -> x
    boolean mReady -> t
    android.graphics.Paint mCircleBackgroundPaint -> i
    android.graphics.Paint mBorderPaint -> h
    android.graphics.Paint mBitmapPaint -> g
    android.graphics.BitmapShader mBitmapShader -> n
    android.graphics.ColorFilter mColorFilter -> s
    float mBorderRadius -> r
    float mDrawableRadius -> q
    int mBitmapHeight -> p
    50:52:void <clinit>() -> <clinit>
    88:91:void <init>(android.content.Context) -> <init>
    94:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:110:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    48:48:android.graphics.RectF access$100(de.hdodenhof.circleimageview.CircleImageView) -> a
    295:296:void applyColorFilter() -> a
    299:322:android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> a
    421:421:boolean inTouchableArea(float,float) -> a
    382:390:android.graphics.RectF calculateBounds() -> b
    113:124:void init() -> c
    327:333:void initializeBitmap() -> d
    336:379:void setup() -> e
    395:412:void updateShaderMatrix() -> f
    184:184:int getBorderColor() -> getBorderColor
    216:216:int getBorderWidth() -> getBorderWidth
    198:198:int getCircleBackgroundColor() -> getCircleBackgroundColor
    291:291:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    128:128:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    147:163:void onDraw(android.graphics.Canvas) -> onDraw
    167:169:void onSizeChanged(int,int,int,int) -> onSizeChanged
    417:417:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    140:141:void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    188:195:void setBorderColor(int) -> setBorderColor
    233:239:void setBorderOverlay(boolean) -> setBorderOverlay
    220:226:void setBorderWidth(int) -> setBorderWidth
    202:209:void setCircleBackgroundColor(int) -> setCircleBackgroundColor
    212:213:void setCircleBackgroundColorResource(int) -> setCircleBackgroundColorResource
    280:287:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    246:252:void setDisableCircularTransformation(boolean) -> setDisableCircularTransformation
    256:258:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    262:264:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    268:270:void setImageResource(int) -> setImageResource
    274:276:void setImageURI(android.net.Uri) -> setImageURI
    173:175:void setPadding(int,int,int,int) -> setPadding
    179:181:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    133:134:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
de.hdodenhof.circleimageview.CircleImageView$1 -> de.hdodenhof.circleimageview.CircleImageView$a:
de.hdodenhof.circleimageview.CircleImageView$OutlineProvider -> de.hdodenhof.circleimageview.CircleImageView$b:
    de.hdodenhof.circleimageview.CircleImageView this$0 -> a
    425:425:void <init>(de.hdodenhof.circleimageview.CircleImageView) -> <init>
    425:425:void <init>(de.hdodenhof.circleimageview.CircleImageView,de.hdodenhof.circleimageview.CircleImageView$1) -> <init>
    429:432:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
kotlin.Function -> b.a:
kotlin.KotlinNullPointerException -> b.b:
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Pair -> b.c:
    26:26:void <init>(java.lang.Object,java.lang.Object) -> <init>
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    34:34:java.lang.String toString() -> toString
kotlin.Result -> b.d:
    20:20:void <init>(java.lang.Object) -> <init>
    20:20:java.lang.Object constructor-impl(java.lang.Object) -> constructor-impl
    1:1:boolean equals(java.lang.Object) -> equals
    61:64:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    1:1:int hashCode() -> hashCode
    36:36:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    30:30:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
    1:1:java.lang.String toString() -> toString
    72:75:java.lang.String toString-impl(java.lang.Object) -> toString-impl
kotlin.Result$Companion -> b.d$a:
    83:83:void <init>() -> <init>
    83:83:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.Result$Failure -> b.d$b:
    99:99:void <init>(java.lang.Throwable) -> <init>
    103:103:boolean equals(java.lang.Object) -> equals
    104:104:int hashCode() -> hashCode
    105:105:java.lang.String toString() -> toString
kotlin.ResultKt -> b.e:
    116:116:java.lang.Object createFailure(java.lang.Throwable) -> a
kotlin.TuplesKt -> b.f:
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> a
kotlin.TypeCastException -> b.g:
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Unit -> b.h:
    kotlin.Unit INSTANCE -> a
    22:22:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    23:23:java.lang.String toString() -> toString
kotlin.collections.ArraysKt -> b.i.a:
    java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.ArraysKt__ArraysJVMKt -> b.i.b:
kotlin.collections.ArraysKt__ArraysKt -> b.i.c:
kotlin.collections.ArraysKt___ArraysJvmKt -> b.i.d:
    129:129:java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.ArraysKt___ArraysKt -> b.i.e:
kotlin.collections.ArraysUtilJVM -> b.i.f:
    13:13:java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.CollectionsKt -> b.i.g:
    java.lang.Object single(java.lang.Iterable) -> a
kotlin.collections.CollectionsKt__CollectionsJVMKt -> b.i.h:
kotlin.collections.CollectionsKt__CollectionsKt -> b.i.i:
kotlin.collections.CollectionsKt__IterablesKt -> b.i.j:
kotlin.collections.CollectionsKt__IteratorsJVMKt -> b.i.k:
kotlin.collections.CollectionsKt__IteratorsKt -> b.i.l:
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> b.i.m:
kotlin.collections.CollectionsKt__MutableCollectionsKt -> b.i.n:
kotlin.collections.CollectionsKt__ReversedViewsKt -> b.i.o:
kotlin.collections.CollectionsKt___CollectionsJvmKt -> b.i.p:
kotlin.collections.CollectionsKt___CollectionsKt -> b.i.q:
    498:503:java.lang.Object single(java.lang.Iterable) -> a
    516:517:java.lang.Object single(java.util.List) -> a
kotlin.collections.IntIterator -> b.i.r:
    35:35:void <init>() -> <init>
    int nextInt() -> a
    35:35:java.lang.Object next() -> next
    36:36:java.lang.Integer next() -> next
kotlin.coroutines.AbstractCoroutineContextElement -> b.j.a:
    15:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    15:15:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    15:15:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    15:15:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    15:15:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CombinedContext -> b.j.b:
    38:38:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    70:73:int size() -> a
    79:79:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> a
    82:89:boolean containsAll(kotlin.coroutines.CombinedContext) -> a
    95:95:boolean equals(java.lang.Object) -> equals
    57:57:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    44:51:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    97:97:int hashCode() -> hashCode
    60:62:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    38:38:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    100:102:java.lang.String toString() -> toString
    105:109:java.lang.Object writeReplace() -> writeReplace
kotlin.coroutines.CombinedContext$Serialized -> b.j.b$a:
    114:114:void <init>(kotlin.coroutines.CoroutineContext[]) -> <init>
    114:114:kotlin.coroutines.CoroutineContext[] getElements() -> getElements
    119:119:java.lang.Object readResolve() -> readResolve
kotlin.coroutines.CombinedContext$Serialized$Companion -> b.j.b$a$a:
    115:115:void <init>() -> <init>
    115:115:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.coroutines.CombinedContext$toString$1 -> b.j.b$b:
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    101:101:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.CombinedContext$writeReplace$1 -> b.j.b$c:
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    108:108:void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.ContinuationInterceptor -> b.j.c:
    kotlin.coroutines.ContinuationInterceptor$Key Key -> b
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> b.j.c$a:
    48:49:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> a
    53:53:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> b
kotlin.coroutines.ContinuationInterceptor$Key -> b.j.c$b:
    kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE -> a
    18:18:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
kotlin.coroutines.CoroutineContext -> b.j.d:
kotlin.coroutines.CoroutineContext$DefaultImpls -> b.j.d$a:
    31:43:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> a
kotlin.coroutines.CoroutineContext$Element -> b.j.d$b:
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> b.j.d$b$a:
    kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext) -> a
    66:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> a
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> a
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> b
kotlin.coroutines.CoroutineContext$Key -> b.j.d$c:
kotlin.coroutines.CoroutineContext$plus$1 -> b.j.d$a$a:
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:42:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.EmptyCoroutineContext -> b.j.e:
    21:21:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    26:26:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    25:25:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    29:29:int hashCode() -> hashCode
    28:28:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    27:27:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    23:23:java.lang.Object readResolve() -> readResolve
    30:30:java.lang.String toString() -> toString
kotlin.internal.ProgressionUtilKt -> b.k.a:
    10:11:int mod(int,int) -> a
    21:21:int differenceModulo(int,int,int) -> a
    45:48:int getProgressionLastElement(int,int,int) -> b
kotlin.jvm.functions.Function1 -> b.l.a.a:
kotlin.jvm.functions.Function2 -> b.l.a.b:
kotlin.jvm.internal.DefaultConstructorMarker -> b.l.b.a:
kotlin.jvm.internal.FunctionBase -> b.l.b.b:
kotlin.jvm.internal.Intrinsics -> b.l.b.c:
    17:18:void <init>() -> <init>
    37:37:void throwNpe() -> a
    77:78:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> a
    127:141:void throwParameterIsNullException(java.lang.String) -> a
    153:153:boolean areEqual(java.lang.Object,java.lang.Object) -> a
    237:237:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> a
    241:253:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> a
    115:116:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> b
kotlin.jvm.internal.Lambda -> b.l.b.d:
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$IntRef -> b.l.b.e:
    40:40:void <init>() -> <init>
    45:45:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> b.l.b.f:
    kotlin.jvm.internal.ReflectionFactory factory -> a
    26:39:void <clinit>() -> <clinit>
    73:73:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> a
kotlin.jvm.internal.ReflectionFactory -> b.l.b.g:
    13:13:void <init>() -> <init>
    38:38:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> a
    43:44:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> a
kotlin.jvm.internal.markers.KMappedMarker -> b.l.b.h.a:
kotlin.ranges.ClosedRange -> b.m.a:
kotlin.ranges.IntProgression -> b.m.b:
    kotlin.ranges.IntProgression$Companion Companion -> g
    int step -> f
    int first -> d
    int last -> e
    73:80:void <init>(int,int,int) -> <init>
    87:87:int getFirst() -> a
    92:92:int getLast() -> b
    97:97:int getStep() -> c
    105:106:boolean equals(java.lang.Object) -> equals
    109:109:int hashCode() -> hashCode
    102:102:boolean isEmpty() -> isEmpty
    72:72:java.util.Iterator iterator() -> iterator
    99:99:kotlin.collections.IntIterator iterator() -> iterator
    111:111:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> b.m.b$a:
    113:113:void <init>() -> <init>
    113:113:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    122:122:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> a
kotlin.ranges.IntProgressionIterator -> b.m.c:
    boolean hasNext -> e
    int next -> f
    int step -> g
    int finalElement -> d
    38:41:void <init>(int,int,int) -> <init>
    46:54:int nextInt() -> a
    43:43:boolean hasNext() -> hasNext
kotlin.ranges.IntRange -> b.m.d:
    kotlin.ranges.IntRange$Companion Companion -> i
    kotlin.ranges.IntRange EMPTY -> h
    58:58:void <clinit>() -> <clinit>
    39:39:void <init>(int,int) -> <init>
    41:41:java.lang.Integer getEndInclusive() -> d
    40:40:java.lang.Integer getStart() -> e
    48:49:boolean equals(java.lang.Object) -> equals
    39:39:kotlin.ranges.IntRange access$getEMPTY$cp() -> f
    52:52:int hashCode() -> hashCode
    45:45:boolean isEmpty() -> isEmpty
    54:54:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> b.m.d$a:
    56:56:void <init>() -> <init>
    56:56:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    58:58:kotlin.ranges.IntRange getEMPTY() -> a
kotlin.ranges.RangesKt -> b.m.e:
    int coerceAtLeast(int,int) -> a
    int coerceIn(int,int,int) -> a
    int coerceAtMost(int,int) -> b
    kotlin.ranges.IntProgression downTo(int,int) -> c
    kotlin.ranges.IntRange until(int,int) -> d
kotlin.ranges.RangesKt__RangesJVMKt -> b.m.f:
kotlin.ranges.RangesKt__RangesKt -> b.m.g:
kotlin.ranges.RangesKt___RangesKt -> b.m.h:
    855:855:int coerceAtLeast(int,int) -> a
    1024:1024:int coerceIn(int,int,int) -> a
    932:932:int coerceAtMost(int,int) -> b
    439:439:kotlin.ranges.IntProgression downTo(int,int) -> c
    705:706:kotlin.ranges.IntRange until(int,int) -> d
kotlin.sequences.Sequence -> b.n.a:
kotlin.sequences.SequencesKt -> b.n.b:
    java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> a
    kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> a
kotlin.sequences.SequencesKt__SequenceBuilderKt -> b.n.c:
kotlin.sequences.SequencesKt__SequencesJVMKt -> b.n.d:
kotlin.sequences.SequencesKt__SequencesKt -> b.n.e:
kotlin.sequences.SequencesKt___SequencesJvmKt -> b.n.f:
kotlin.sequences.SequencesKt___SequencesKt -> b.n.g:
    861:861:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> a
    1718:1728:java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> a
    1741:1741:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> a
    1742:1742:java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> a
kotlin.sequences.TransformingSequence -> b.n.h:
    kotlin.sequences.Sequence sequence -> a
    kotlin.jvm.functions.Function1 transformer -> b
    168:168:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    167:167:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> a
    167:167:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> b
    169:178:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> b.n.h$a:
    java.util.Iterator iterator -> d
    kotlin.sequences.TransformingSequence this$0 -> e
    169:170:void <init>(kotlin.sequences.TransformingSequence) -> <init>
    176:176:boolean hasNext() -> hasNext
    172:172:java.lang.Object next() -> next
kotlin.text.CharsKt__CharJVMKt -> b.o.a:
kotlin.text.CharsKt__CharKt -> b.o.b:
    32:37:boolean equals(char,char,boolean) -> a
kotlin.text.DelimitedRangesSequence -> b.o.c:
    java.lang.CharSequence input -> a
    int startIndex -> b
    int limit -> c
    kotlin.jvm.functions.Function2 getNextMatch -> d
    1072:1072:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1072:1072:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> a
    1072:1072:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> b
    1072:1072:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> c
    1072:1072:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> d
    1079:1127:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> b.o.c$a:
    kotlin.ranges.IntRange nextItem -> g
    int counter -> h
    int nextSearchIndex -> f
    int nextState -> d
    int currentStartIndex -> e
    kotlin.text.DelimitedRangesSequence this$0 -> i
    1079:1082:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1087:1108:void calcNext() -> a
    1123:1125:boolean hasNext() -> hasNext
    1079:1079:java.lang.Object next() -> next
    1111:1114:kotlin.ranges.IntRange next() -> next
kotlin.text.StringsKt -> b.o.d:
    void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> a
    java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> a
kotlin.text.StringsKt__IndentKt -> b.o.e:
kotlin.text.StringsKt__RegexExtensionsJVMKt -> b.o.f:
kotlin.text.StringsKt__RegexExtensionsKt -> b.o.g:
kotlin.text.StringsKt__StringBuilderJVMKt -> b.o.h:
kotlin.text.StringsKt__StringBuilderKt -> b.o.i:
    57:63:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> a
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> b.o.j:
kotlin.text.StringsKt__StringNumberConversionsKt -> b.o.k:
kotlin.text.StringsKt__StringsJVMKt -> b.o.l:
    75:75:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> a
    76:76:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    526:529:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> a
kotlin.text.StringsKt__StringsKt -> b.o.m:
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> a
    317:317:int getLastIndex(java.lang.CharSequence) -> a
    361:361:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> a
    723:724:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> a
    874:874:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> a
    875:891:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> a
    1002:1002:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> a
    1003:1003:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> a
    1163:1163:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> a
    1164:1164:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> a
    1185:1185:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> a
    1186:1186:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> a
    895:917:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> b
    1032:1032:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> b
    1033:1033:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> b
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4 -> b.o.m$a:
    1167:1167:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> b.o.m$b:
    1186:1186:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt___StringsJvmKt -> b.o.n:
kotlin.text.StringsKt___StringsKt -> b.o.o:
kotlinx.coroutines.CoroutineDispatcher -> kotlinx.coroutines.a:
    30:31:void <init>() -> <init>
    30:30:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    30:30:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    107:107:java.lang.String toString() -> toString
kotlinx.coroutines.CoroutineExceptionHandler -> kotlinx.coroutines.CoroutineExceptionHandler:
    kotlinx.coroutines.CoroutineExceptionHandler$Key Key -> c
kotlinx.coroutines.CoroutineExceptionHandler$Key -> kotlinx.coroutines.CoroutineExceptionHandler$a:
    kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE -> a
    92:92:void <clinit>() -> <clinit>
    92:92:void <init>() -> <init>
kotlinx.coroutines.CoroutineId -> kotlinx.coroutines.b:
    long id -> d
    84:84:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    84:84:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    84:84:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    84:84:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    88:88:java.lang.String toString() -> toString
kotlinx.coroutines.CoroutineId$Key -> kotlinx.coroutines.b$a:
    87:87:void <init>() -> <init>
    87:87:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlinx.coroutines.DebugKt -> kotlinx.coroutines.c:
    45:50:void <clinit>() -> <clinit>
    68:68:java.lang.String getClassSimpleName(java.lang.Object) -> a
    60:60:java.lang.String getHexAddress(java.lang.Object) -> b
kotlinx.coroutines.Delay -> kotlinx.coroutines.d:
kotlinx.coroutines.MainCoroutineDispatcher -> kotlinx.coroutines.e:
    13:13:void <init>() -> <init>
kotlinx.coroutines.ThreadContextElement -> kotlinx.coroutines.f:
kotlinx.coroutines.ThreadContextElement$DefaultImpls -> kotlinx.coroutines.f$a:
    java.lang.Object fold(kotlinx.coroutines.ThreadContextElement,java.lang.Object,kotlin.jvm.functions.Function2) -> a
    kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key) -> a
    kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext) -> a
    kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key) -> b
kotlinx.coroutines.android.AndroidDispatcherFactory -> kotlinx.coroutines.android.AndroidDispatcherFactory:
    35:35:void <init>() -> <init>
    35:35:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> createDispatcher
    38:38:kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List) -> createDispatcher
    43:43:int getLoadPriority() -> getLoadPriority
    40:40:java.lang.String hintOnError() -> hintOnError
kotlinx.coroutines.android.AndroidExceptionPreHandler -> kotlinx.coroutines.android.AndroidExceptionPreHandler:
    26:27:void <init>() -> <init>
    30:32:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
kotlinx.coroutines.android.AndroidExceptionPreHandlerKt -> kotlinx.coroutines.android.a:
    java.lang.reflect.Method getter -> a
    13:13:void <clinit>() -> <clinit>
    1:1:java.lang.reflect.Method access$getGetter$p() -> a
kotlinx.coroutines.android.HandlerContext -> kotlinx.coroutines.android.b:
    android.os.Handler handler -> d
    boolean invokeImmediately -> f
    java.lang.String name -> e
    88:108:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    99:102:void <init>(android.os.Handler,java.lang.String) -> <init>
    142:142:boolean equals(java.lang.Object) -> equals
    143:143:int hashCode() -> hashCode
    136:140:java.lang.String toString() -> toString
kotlinx.coroutines.android.HandlerDispatcher -> kotlinx.coroutines.android.c:
    22:22:void <init>() -> <init>
    22:22:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlinx.coroutines.android.HandlerDispatcherKt -> kotlinx.coroutines.android.d:
    83:83:void <clinit>() -> <clinit>
    60:61:android.os.Handler asHandler(android.os.Looper,boolean) -> a
kotlinx.coroutines.internal.SystemPropsKt -> kotlinx.coroutines.internal.a:
    8:8:void <clinit>() -> <clinit>
    13:17:java.lang.String systemProp(java.lang.String) -> a
    23:27:boolean systemProp(java.lang.String,boolean) -> a
me.jessyan.autosize.ActivityLifecycleCallbacksImpl -> me.jessyan.autosize.ActivityLifecycleCallbacksImpl:
    44:47:void <init>(me.jessyan.autosize.AutoAdaptStrategy) -> <init>
    51:61:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    93:93:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    78:78:void onActivityPaused(android.app.Activity) -> onActivityPaused
    73:73:void onActivityResumed(android.app.Activity) -> onActivityResumed
    88:88:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    65:68:void onActivityStarted(android.app.Activity) -> onActivityStarted
    83:83:void onActivityStopped(android.app.Activity) -> onActivityStopped
    101:103:void setAutoAdaptStrategy(me.jessyan.autosize.AutoAdaptStrategy) -> setAutoAdaptStrategy
me.jessyan.autosize.AutoSize -> me.jessyan.autosize.AutoSize:
    53:53:void <clinit>() -> <clinit>
    55:56:void <init>() -> <init>
    147:198:void autoConvertDensity(android.app.Activity,float,boolean) -> autoConvertDensity
    131:132:void autoConvertDensityBaseOnHeight(android.app.Activity,float) -> autoConvertDensityBaseOnHeight
    121:122:void autoConvertDensityBaseOnWidth(android.app.Activity,float) -> autoConvertDensityBaseOnWidth
    79:91:void autoConvertDensityOfCustomAdapt(android.app.Activity,me.jessyan.autosize.internal.CustomAdapt) -> autoConvertDensityOfCustomAdapt
    100:112:void autoConvertDensityOfExternalAdaptInfo(android.app.Activity,me.jessyan.autosize.external.ExternalAdaptInfo) -> autoConvertDensityOfExternalAdaptInfo
    65:70:void autoConvertDensityOfGlobal(android.app.Activity) -> autoConvertDensityOfGlobal
    206:220:void cancelAdapt(android.app.Activity) -> cancelAdapt
    302:309:android.util.DisplayMetrics getMetricsOnMiui(android.content.res.Resources) -> getMetricsOnMiui
    229:230:void initCompatMultiProcess(android.content.Context) -> initCompatMultiProcess
    243:259:void setDensity(android.app.Activity,float,int,float,float) -> setDensity
    271:292:void setDensity(android.util.DisplayMetrics,float,int,float,float) -> setDensity
me.jessyan.autosize.AutoSize$1 -> me.jessyan.autosize.AutoSize$1:
    207:207:void <clinit>() -> <clinit>
me.jessyan.autosize.AutoSizeCompat -> me.jessyan.autosize.AutoSizeCompat:
    41:41:void <clinit>() -> <clinit>
    43:44:void <init>() -> <init>
    135:181:void autoConvertDensity(android.content.res.Resources,float,boolean) -> autoConvertDensity
    119:120:void autoConvertDensityBaseOnHeight(android.content.res.Resources,float) -> autoConvertDensityBaseOnHeight
    109:110:void autoConvertDensityBaseOnWidth(android.content.res.Resources,float) -> autoConvertDensityBaseOnWidth
    67:79:void autoConvertDensityOfCustomAdapt(android.content.res.Resources,me.jessyan.autosize.internal.CustomAdapt) -> autoConvertDensityOfCustomAdapt
    88:100:void autoConvertDensityOfExternalAdaptInfo(android.content.res.Resources,me.jessyan.autosize.external.ExternalAdaptInfo) -> autoConvertDensityOfExternalAdaptInfo
    53:58:void autoConvertDensityOfGlobal(android.content.res.Resources) -> autoConvertDensityOfGlobal
    189:203:void cancelAdapt(android.content.res.Resources) -> cancelAdapt
    275:282:android.util.DisplayMetrics getMetricsOnMiui(android.content.res.Resources) -> getMetricsOnMiui
    216:232:void setDensity(android.content.res.Resources,float,int,float,float) -> setDensity
    244:265:void setDensity(android.util.DisplayMetrics,float,int,float,float) -> setDensity
me.jessyan.autosize.AutoSizeCompat$1 -> me.jessyan.autosize.AutoSizeCompat$1:
    190:190:void <clinit>() -> <clinit>
me.jessyan.autosize.AutoSizeConfig -> me.jessyan.autosize.AutoSizeConfig:
    159:160:void <init>() -> <init>
    46:46:float access$000(me.jessyan.autosize.AutoSizeConfig) -> access$000
    46:46:float access$002(me.jessyan.autosize.AutoSizeConfig,float) -> access$002
    46:46:boolean access$102(me.jessyan.autosize.AutoSizeConfig,boolean) -> access$102
    46:46:int access$202(me.jessyan.autosize.AutoSizeConfig,int) -> access$202
    46:46:int access$302(me.jessyan.autosize.AutoSizeConfig,int) -> access$302
    46:46:int access$402(me.jessyan.autosize.AutoSizeConfig,int) -> access$402
    46:46:int access$502(me.jessyan.autosize.AutoSizeConfig,int) -> access$502
    163:164:android.app.Application getApplication() -> getApplication
    442:443:int getDesignHeightInDp() -> getDesignHeightInDp
    432:433:int getDesignWidthInDp() -> getDesignWidthInDp
    369:369:me.jessyan.autosize.external.ExternalAdaptManager getExternalAdaptManager() -> getExternalAdaptManager
    452:452:float getInitDensity() -> getInitDensity
    461:461:int getInitDensityDpi() -> getInitDensityDpi
    470:470:float getInitScaledDensity() -> getInitScaledDensity
    479:479:float getInitXdpi() -> getInitXdpi
    149:156:me.jessyan.autosize.AutoSizeConfig getInstance() -> getInstance
    609:630:void getMetaData(android.content.Context) -> getMetaData
    387:387:me.jessyan.autosize.onAdaptListener getOnAdaptListener() -> getOnAdaptListener
    423:423:int getScreenHeight() -> getScreenHeight
    414:414:int getScreenWidth() -> getScreenWidth
    506:506:java.lang.reflect.Field getTmpMetricsField() -> getTmpMetricsField
    378:378:me.jessyan.autosize.unit.UnitsManager getUnitsManager() -> getUnitsManager
    174:174:me.jessyan.autosize.AutoSizeConfig init(android.app.Application) -> init
    186:186:me.jessyan.autosize.AutoSizeConfig init(android.app.Application,boolean) -> init
    197:248:me.jessyan.autosize.AutoSizeConfig init(android.app.Application,boolean,me.jessyan.autosize.AutoAdaptStrategy) -> init
    396:396:boolean isBaseOnWidth() -> isBaseOnWidth
    351:351:boolean isCustomFragment() -> isCustomFragment
    526:526:boolean isExcludeFontScale() -> isExcludeFontScale
    497:497:boolean isMiui() -> isMiui
    360:360:boolean isStop() -> isStop
    405:405:boolean isUseDeviceSize() -> isUseDeviceSize
    488:488:boolean isVertical() -> isVertical
    256:262:void restart() -> restart
    286:289:me.jessyan.autosize.AutoSizeConfig setAutoAdaptStrategy(me.jessyan.autosize.AutoAdaptStrategy) -> setAutoAdaptStrategy
    310:311:me.jessyan.autosize.AutoSizeConfig setBaseOnWidth(boolean) -> setBaseOnWidth
    341:342:me.jessyan.autosize.AutoSizeConfig setCustomFragment(boolean) -> setCustomFragment
    579:581:me.jessyan.autosize.AutoSizeConfig setDesignHeightInDp(int) -> setDesignHeightInDp
    568:570:me.jessyan.autosize.AutoSizeConfig setDesignWidthInDp(int) -> setDesignWidthInDp
    536:537:me.jessyan.autosize.AutoSizeConfig setExcludeFontScale(boolean) -> setExcludeFontScale
    331:332:me.jessyan.autosize.AutoSizeConfig setLog(boolean) -> setLog
    298:300:me.jessyan.autosize.AutoSizeConfig setOnAdaptListener(me.jessyan.autosize.onAdaptListener) -> setOnAdaptListener
    557:559:me.jessyan.autosize.AutoSizeConfig setScreenHeight(int) -> setScreenHeight
    546:548:me.jessyan.autosize.AutoSizeConfig setScreenWidth(int) -> setScreenWidth
    590:592:me.jessyan.autosize.AutoSizeConfig setStatusBarHeight(int) -> setStatusBarHeight
    321:322:me.jessyan.autosize.AutoSizeConfig setUseDeviceSize(boolean) -> setUseDeviceSize
    515:516:me.jessyan.autosize.AutoSizeConfig setVertical(boolean) -> setVertical
    270:277:void stop(android.app.Activity) -> stop
me.jessyan.autosize.AutoSizeConfig$1 -> me.jessyan.autosize.AutoSizeConfig$1:
    215:215:void <init>(me.jessyan.autosize.AutoSizeConfig,android.app.Application) -> <init>
    218:229:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    234:234:void onLowMemory() -> onLowMemory
me.jessyan.autosize.AutoSizeConfig$2 -> me.jessyan.autosize.AutoSizeConfig$2:
    609:609:void <init>(me.jessyan.autosize.AutoSizeConfig,android.content.Context) -> <init>
    612:628:void run() -> run
me.jessyan.autosize.BuildConfig -> me.jessyan.autosize.BuildConfig:
    6:6:void <init>() -> <init>
me.jessyan.autosize.DefaultAutoAdaptStrategy -> me.jessyan.autosize.DefaultAutoAdaptStrategy:
    39:39:void <init>() -> <init>
    44:75:void applyAdapt(java.lang.Object,android.app.Activity) -> applyAdapt
me.jessyan.autosize.DisplayMetricsInfo -> me.jessyan.autosize.DisplayMetricsInfo:
    96:96:void <clinit>() -> <clinit>
    37:42:void <init>(float,int,float,float) -> <init>
    89:94:void <init>(android.os.Parcel) -> <init>
    78:78:int describeContents() -> describeContents
    45:45:float getDensity() -> getDensity
    53:53:int getDensityDpi() -> getDensityDpi
    61:61:float getScaledDensity() -> getScaledDensity
    69:69:float getXdpi() -> getXdpi
    49:50:void setDensity(float) -> setDensity
    57:58:void setDensityDpi(int) -> setDensityDpi
    65:66:void setScaledDensity(float) -> setScaledDensity
    73:74:void setXdpi(float) -> setXdpi
    110:110:java.lang.String toString() -> toString
    83:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
me.jessyan.autosize.DisplayMetricsInfo$1 -> me.jessyan.autosize.DisplayMetricsInfo$1:
    96:96:void <init>() -> <init>
    96:96:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    99:99:me.jessyan.autosize.DisplayMetricsInfo createFromParcel(android.os.Parcel) -> createFromParcel
    96:96:java.lang.Object[] newArray(int) -> newArray
    104:104:me.jessyan.autosize.DisplayMetricsInfo[] newArray(int) -> newArray
me.jessyan.autosize.FragmentLifecycleCallbacksImpl -> me.jessyan.autosize.FragmentLifecycleCallbacksImpl:
    38:40:void <init>(me.jessyan.autosize.AutoAdaptStrategy) -> <init>
    44:47:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentCreated
    55:56:void setAutoAdaptStrategy(me.jessyan.autosize.AutoAdaptStrategy) -> setAutoAdaptStrategy
me.jessyan.autosize.InitProvider -> me.jessyan.autosize.InitProvider:
    32:32:void <init>() -> <init>
    59:59:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    49:49:java.lang.String getType(android.net.Uri) -> getType
    54:54:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    35:39:boolean onCreate() -> onCreate
    44:44:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    64:64:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
me.jessyan.autosize.WrapperAutoAdaptStrategy -> me.jessyan.autosize.WrapperAutoAdaptStrategy:
    32:34:void <init>(me.jessyan.autosize.AutoAdaptStrategy) -> <init>
    38:48:void applyAdapt(java.lang.Object,android.app.Activity) -> applyAdapt
me.jessyan.autosize.external.ExternalAdaptInfo -> me.jessyan.autosize.external.ExternalAdaptInfo:
    89:89:void <clinit>() -> <clinit>
    48:50:void <init>(boolean) -> <init>
    52:55:void <init>(boolean,float) -> <init>
    84:87:void <init>(android.os.Parcel) -> <init>
    75:75:int describeContents() -> describeContents
    66:66:float getSizeInDp() -> getSizeInDp
    58:58:boolean isBaseOnWidth() -> isBaseOnWidth
    62:63:void setBaseOnWidth(boolean) -> setBaseOnWidth
    70:71:void setSizeInDp(float) -> setSizeInDp
    103:103:java.lang.String toString() -> toString
    80:82:void writeToParcel(android.os.Parcel,int) -> writeToParcel
me.jessyan.autosize.external.ExternalAdaptInfo$1 -> me.jessyan.autosize.external.ExternalAdaptInfo$1:
    89:89:void <init>() -> <init>
    89:89:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:me.jessyan.autosize.external.ExternalAdaptInfo createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object[] newArray(int) -> newArray
    97:97:me.jessyan.autosize.external.ExternalAdaptInfo[] newArray(int) -> newArray
me.jessyan.autosize.external.ExternalAdaptManager -> me.jessyan.autosize.external.ExternalAdaptManager:
    41:41:void <init>() -> <init>
    55:54:me.jessyan.autosize.external.ExternalAdaptManager addCancelAdaptOfActivity(java.lang.Class) -> addCancelAdaptOfActivity
    85:84:me.jessyan.autosize.external.ExternalAdaptManager addExternalAdaptInfoOfActivity(java.lang.Class,me.jessyan.autosize.external.ExternalAdaptInfo) -> addExternalAdaptInfoOfActivity
    117:116:me.jessyan.autosize.external.ExternalAdaptInfo getExternalAdaptInfoOfActivity(java.lang.Class) -> getExternalAdaptInfoOfActivity
    103:102:boolean isCancelAdapt(java.lang.Class) -> isCancelAdapt
    130:130:boolean isRun() -> isRun
    139:140:me.jessyan.autosize.external.ExternalAdaptManager setRun(boolean) -> setRun
me.jessyan.autosize.unit.Subunits -> me.jessyan.autosize.unit.Subunits:
    34:30:void <clinit>() -> <clinit>
    30:30:void <init>(java.lang.String,int) -> <init>
    30:30:me.jessyan.autosize.unit.Subunits valueOf(java.lang.String) -> valueOf
    30:30:me.jessyan.autosize.unit.Subunits[] values() -> values
me.jessyan.autosize.unit.UnitsManager -> me.jessyan.autosize.unit.UnitsManager:
    42:70:void <init>() -> <init>
    115:115:float getDesignHeight() -> getDesignHeight
    93:93:float getDesignWidth() -> getDesignWidth
    175:175:me.jessyan.autosize.unit.Subunits getSupportSubunits() -> getSupportSubunits
    137:137:boolean isSupportDP() -> isSupportDP
    156:156:boolean isSupportSP() -> isSupportSP
    126:128:me.jessyan.autosize.unit.UnitsManager setDesignHeight(float) -> setDesignHeight
    82:84:me.jessyan.autosize.unit.UnitsManager setDesignSize(float,float) -> setDesignSize
    104:106:me.jessyan.autosize.unit.UnitsManager setDesignWidth(float) -> setDesignWidth
    146:147:me.jessyan.autosize.unit.UnitsManager setSupportDP(boolean) -> setSupportDP
    165:166:me.jessyan.autosize.unit.UnitsManager setSupportSP(boolean) -> setSupportSP
    186:188:me.jessyan.autosize.unit.UnitsManager setSupportSubunits(me.jessyan.autosize.unit.Subunits) -> setSupportSubunits
me.jessyan.autosize.utils.AutoSizeUtils -> me.jessyan.autosize.utils.AutoSizeUtils:
    32:33:void <init>() -> <init>
    37:37:int dp2px(android.content.Context,float) -> dp2px
    49:49:int in2px(android.content.Context,float) -> in2px
    53:53:int mm2px(android.content.Context,float) -> mm2px
    45:45:int pt2px(android.content.Context,float) -> pt2px
    41:41:int sp2px(android.content.Context,float) -> sp2px
me.jessyan.autosize.utils.LogUtils -> me.jessyan.autosize.utils.LogUtils:
    31:32:void <init>() -> <init>
    44:47:void d(java.lang.String) -> d
    56:59:void e(java.lang.String) -> e
    36:36:boolean isDebug() -> isDebug
    40:41:void setDebug(boolean) -> setDebug
    50:53:void w(java.lang.String) -> w
me.jessyan.autosize.utils.Preconditions -> me.jessyan.autosize.utils.Preconditions:
    27:28:void <init>() -> <init>
    104:107:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    126:129:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    142:142:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    32:33:void checkArgument(boolean) -> checkArgument
    38:39:void checkArgument(boolean,java.lang.Object) -> checkArgument
    44:45:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    92:92:int checkElementIndex(int,int) -> checkElementIndex
    96:99:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    68:69:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    76:77:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    84:85:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    114:114:int checkPositionIndex(int,int) -> checkPositionIndex
    118:121:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    136:137:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    50:51:void checkState(boolean) -> checkState
    56:57:void checkState(boolean,java.lang.Object) -> checkState
    62:63:void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    146:175:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
me.jessyan.autosize.utils.ScreenUtils -> me.jessyan.autosize.utils.ScreenUtils:
    36:37:void <init>() -> <init>
    112:120:int getHeightOfNavigationBar(android.content.Context) -> getHeightOfNavigationBar
    79:107:int[] getRawScreenSize(android.content.Context) -> getRawScreenSize
    60:69:int[] getScreenSize(android.content.Context) -> getScreenSize
    41:50:int getStatusBarHeight() -> getStatusBarHeight
